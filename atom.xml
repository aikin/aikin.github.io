<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aikin&#39;blog</title>
  <subtitle>喜欢coding。喜欢大海。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aikin.github.io/"/>
  <updated>2016-07-19T18:21:15.000Z</updated>
  <id>http://aikin.github.io/</id>
  
  <author>
    <name>aikin</name>
    <email>me@ulaijn.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>容器化开发环境</title>
    <link href="http://aikin.github.io/2016/07/20/dockerize-dev-env/"/>
    <id>http://aikin.github.io/2016/07/20/dockerize-dev-env/</id>
    <published>2016-07-19T18:12:44.000Z</published>
    <updated>2016-07-19T18:21:15.000Z</updated>
    
    <content type="html">&lt;p&gt;　　有没有过项目之间各种&lt;code&gt;Java&lt;/code&gt;版本开发环境切换的场景；有没有过&lt;code&gt;github&lt;/code&gt;上&lt;code&gt;clone&lt;/code&gt;回来的代码库，由于各种开发环境依赖无法运行的问题；有没有过进入一个新项目时各种配开发环境到深夜的经历…&lt;code&gt;Come On!&lt;/code&gt;为什么会这样，一切都是开发环境问题。为了不让别人痛苦，更不想让自己痛苦，请容器化开发环境吧，让我们享受一键部署开发环境的痛快吧。&lt;/p&gt;
&lt;p&gt;　　用什么容器化呢？当然是&lt;code&gt;Docker&lt;/code&gt;啦，轻量级又好用，又流行，最关键点是本人仅&lt;code&gt;Docker&lt;/code&gt;比较熟悉，所以就拿它来搞起啦。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;接下的例子依赖的&lt;code&gt;Docker&lt;/code&gt;环境和&lt;code&gt;MAC&lt;/code&gt;，请移步 &lt;a href=&quot;https://docs.docker.com/engine/installation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Install Docker Engine&lt;/a&gt; 自行安装。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker-machine&lt;/li&gt;
&lt;li&gt;docker-compose&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(dockerize) Unable to get the latest Boot2Docker ISO release version:  Error getting a version tag from the Github API response.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(dockerize) You may be getting rate limited by Github.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果在安装过程遇到上述类似的问题，可以尝试方式解决：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;通过浏览器下载 boot2docker 镜像 https://github.com/boot2docker/boot2docker/releases/download/v1.10.3/boot2docker.iso&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将镜像移动到 ~/.docker/machine/cache/ 目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Setup-Hello-Dockerize&quot;&gt;&lt;a href=&quot;#Setup-Hello-Dockerize&quot; class=&quot;headerlink&quot; title=&quot;Setup Hello Dockerize&quot;&gt;&lt;/a&gt;Setup Hello Dockerize&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;Gradle&lt;/code&gt;初始化一个  &lt;a href=&quot;http://projects.spring.io/spring-boot/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spring-boot&lt;/a&gt; DEMO，&lt;a href=&quot;https://github.com/aikin/hello-dockerize/blob/master/build.gradle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;build.gradle&lt;/a&gt; 文件如下: &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;group &lt;span class=&quot;string&quot;&gt;&quot;com.xxx.hello.dockerize&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;version &lt;span class=&quot;string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;buildscript &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;http://repo.spring.io/snapshot&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;http://repo.spring.io/milestone&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classpath(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&quot;idea&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&quot;spring-boot&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceCompatibility = &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;http://repo.spring.io/snapshot&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;http://repo.spring.io/milestone&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ext &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    junitVersion = &lt;span class=&quot;string&quot;&gt;&quot;4.11&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-starter-jersey&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;string&quot;&gt;&quot;junit:junit:$junitVersion&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 实现展示&lt;code&gt;hello-dockerize&lt;/code&gt;的API，创建以下文件：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aikin/hello-dockerize/blob/master/src/main/java/com/ulaijn/hello/dockerize/Application.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Application.java&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/aikin/hello-dockerize/blob/master/src/main/java/com/ulaijn/hello/dockerize/config/JerseyConfig.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JerseyConfig.java&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/aikin/hello-dockerize/tree/master/src/main/java/com/ulaijn/hello/dockerize/resources&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HelloDockerizeResource.java&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Dockerize&quot;&gt;&lt;a href=&quot;#Dockerize&quot; class=&quot;headerlink&quot; title=&quot;Dockerize&quot;&gt;&lt;/a&gt;Dockerize&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;为可以让 DEMO 可以运行容器中，需要一个&lt;a href=&quot;https://github.com/aikin/hello-dockerize/blob/master/dockerize/Dockerfile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dockerfile&lt;/a&gt;来配置 DEMO 在容器中能正常运行的环境：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FROM ubuntu:14.04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV VERSION 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV UPDATE 66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV BUILD 17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV JAVA_HOME /usr/lib/jvm/java-$&amp;#123;VERSION&amp;#125;-oracle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENV JRE_HOME $&amp;#123;JAVA_HOME&amp;#125;/jre&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN apt-get install ca-certificates curl \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gcc libc6-dev libssl-dev make \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        -y --no-install-recommends&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN	curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	--header &amp;quot;Cookie: oraclelicense=accept-securebackup-cookie;&amp;quot; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http://download.oracle.com/otn-pub/java/jdk/&amp;quot;$&amp;#123;VERSION&amp;#125;&amp;quot;u&amp;quot;$&amp;#123;UPDATE&amp;#125;&amp;quot;-b&amp;quot;$&amp;#123;BUILD&amp;#125;&amp;quot;/server-jre-&amp;quot;$&amp;#123;VERSION&amp;#125;&amp;quot;u&amp;quot;$&amp;#123;UPDATE&amp;#125;&amp;quot;-linux-x64.tar.gz \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	| tar xz -C /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN	mkdir -p /usr/lib/jvm &amp;amp;&amp;amp; mv /tmp/jdk1.$&amp;#123;VERSION&amp;#125;.0_$&amp;#123;UPDATE&amp;#125; &amp;quot;$&amp;#123;JAVA_HOME&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN apt-get install -y openssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN apt-get remove --purge --auto-remove -y \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gcc \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        libc6-dev \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        libssl-dev \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN	apt-get autoclean &amp;amp;&amp;amp; apt-get --purge -y autoremove&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN	rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN update-alternatives --install &amp;quot;/usr/bin/java&amp;quot; &amp;quot;java&amp;quot; &amp;quot;$&amp;#123;JRE_HOME&amp;#125;/bin/java&amp;quot; 1 &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	update-alternatives --install &amp;quot;/usr/bin/javac&amp;quot; &amp;quot;javac&amp;quot; &amp;quot;$&amp;#123;JAVA_HOME&amp;#125;/bin/javac&amp;quot; 1 &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	update-alternatives --set java &amp;quot;$&amp;#123;JRE_HOME&amp;#125;/bin/java&amp;quot; &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	update-alternatives --set javac &amp;quot;$&amp;#123;JAVA_HOME&amp;#125;/bin/javac&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WORKDIR /hello-dockerize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EXPOSE 8080&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CMD [&amp;quot;bash&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了以后可以更好的管理容器的依赖和更新，&lt;a href=&quot;https://docs.docker.com/compose/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker Compose&lt;/a&gt;是一个不错的选择。创建配置文件&lt;a href=&quot;https://github.com/aikin/hello-dockerize/blob/master/docker-compose.yml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-compose.yml&lt;/a&gt;：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;web:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  build: ./dockerize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  environment:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - LANG=C.UTF-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - DEBUG=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - &amp;quot;8080:8080&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  volumes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - .:/hello-dockerize&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;启动容器服务：&lt;/strong&gt;&lt;br&gt;在 DEMO 目录下执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ docker-compose run --service-ports web&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述命令执行成功后，将会进入容器内，显示如：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@7b438758ccae:/hello-dockerize&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在容器中启动服务：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@7b438758ccae:/hello-dockerize&lt;span class=&quot;comment&quot;&gt;# ./gradlew bootRun&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了在容器外可以访问容器内部的服务，可以通过&lt;code&gt;docker-machine ip machine-name&lt;/code&gt;获取 machine 的 &lt;code&gt;IP&lt;/code&gt;，再通过浏览器访问&lt;code&gt;http://IP:8080/hello-dockerize&lt;/code&gt;，页面将会出现&lt;code&gt;Hello Dockerize!&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DEMO REPO: &lt;a href=&quot;https://github.com/aikin/hello-dockerize&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HelloDockerize&lt;/a&gt;，你只需要 clone 到本地，然后执行 &lt;code&gt;docker-compose run --service-ports web&lt;/code&gt;， DEMO 开发环境将会快速构建完毕，秒级的体验，不容错过~~~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;br&gt;写在最后： 由于最近打算把写博客的习惯捡回来，才让这篇在草稿箱中沉睡了一年多的&lt;code&gt;Dockerize&lt;/code&gt;重返人间，接下继续努力完成&lt;code&gt;如何在容器中使用断点的方式 DEBUG&lt;/code&gt;、&lt;code&gt;如何使用 Jenkins 控制测试环境 Docker container 创建和销毁&lt;/code&gt;、&lt;code&gt;如何使用 Nginx 控制容器的启动&lt;/code&gt;…博文。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　有没有过项目之间各种&lt;code&gt;Java&lt;/code&gt;版本开发环境切换的场景；有没有过&lt;code&gt;github&lt;/code&gt;上&lt;code&gt;clone&lt;/code&gt;回来的代码库，由于各种开发环境依赖无法运行的问题；有没有过进入一个新项目时各种配开发环境到深夜的经历…&lt;code&gt;Come On!&lt;/code&gt;为什么会这样，一切都是开发环境问题。为了不让别人痛苦，更不想让自己痛苦，请容器化开发环境吧，让我们享受一键部署开发环境的痛快吧。&lt;/p&gt;
&lt;p&gt;　　用什么容器化呢？当然是&lt;code&gt;Docker&lt;/code&gt;啦，轻量级又好用，又流行，最关键点是本人仅&lt;code&gt;Docker&lt;/code&gt;比较熟悉，所以就拿它来搞起啦。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://aikin.github.io/tags/docker/"/>
    
      <category term="dockerize" scheme="http://aikin.github.io/tags/dockerize/"/>
    
  </entry>
  
  <entry>
    <title>了解 Linux 文件和文件夹的操作权限</title>
    <link href="http://aikin.github.io/2015/04/03/linux-file-permission-ower/"/>
    <id>http://aikin.github.io/2015/04/03/linux-file-permission-ower/</id>
    <published>2015-04-03T03:18:59.000Z</published>
    <updated>2016-03-17T14:47:06.000Z</updated>
    
    <content type="html">&lt;p&gt;　　由于 linux 是多用户操作系统，所以基于安全的考虑，需要具备保障个人隐私和系统安全的机制。因此在使用 linux 系统的时候，经常会出现权限的问题(比如: 删除文件、安装软件、运行应用等等)，期初遇到这些问题的时候，大部分都使用&lt;code&gt;sudo&lt;/code&gt;或者是&lt;code&gt;sudo chmod 777 file&lt;/code&gt;(后面会讲解这个命令)来解决的。虽然这种方式可以解决问题，但是这样是不安全的，特别是在服务器上操作的时候，因为不是所有的文件和文件夹都可以被其它用户操作的，不是所有的用户都有&lt;code&gt;root&lt;/code&gt;权限的，不是所有的应用都可以用&lt;code&gt;root&lt;/code&gt;用户启动的。那么我们要如何正确的处理这些权限问题呢？那就让我们来学习一下 linux 权限相关的知识。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;用户的权限&quot;&gt;&lt;a href=&quot;#用户的权限&quot; class=&quot;headerlink&quot; title=&quot;用户的权限&quot;&gt;&lt;/a&gt;用户的权限&lt;/h3&gt;&lt;p&gt;　　要确定一个用户对某个文件或文件夹是否具有相应的操作权限，先要明确该用户与文件或文件夹之间的关系。在 linux 系统中，定义了如下三种关系：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; 文件或文件夹的所有者(owner) &lt;/strong&gt;: 文件或文件夹的拥有者，开始创建文件或文件夹时为创建者。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; 组(group) &lt;/strong&gt;: 文件或文件夹所属的组, 开始创建文件或文件夹时为创建者的所属的组。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; 其他人(other) &lt;/strong&gt;: 除了文件或文件夹的所有者和文件或文件夹所属的组的其他成员，剩下的 linux 的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　因为在 linux 下的文件和文件夹都有&lt;code&gt;读取(r)&lt;/code&gt;、&lt;code&gt;写入(w)&lt;/code&gt;、&lt;code&gt;执行(x)&lt;/code&gt;的操作，所以上面描述的每种关系的用户分别都可以赋予这些操作权限。操作权限介绍:&lt;/p&gt;
&lt;blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;权限&lt;/th&gt;
&lt;th&gt;简写&lt;/th&gt;
&lt;th&gt;对普通文件的作用&lt;/th&gt;
&lt;th&gt;对文件夹的作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;读取&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;查看文件内容&lt;/td&gt;
&lt;td&gt;列出文件夹中的文件(ls)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;写入&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;修改文件内容&lt;/td&gt;
&lt;td&gt;在文件夹中删除、添加或重命名文件(夹)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;执行&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;文件可以作为程序执行&lt;/td&gt;
&lt;td&gt;cd 到文件夹&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;文件或文件夹和用户的三种关系的基础操作权限&quot;&gt;&lt;a href=&quot;#文件或文件夹和用户的三种关系的基础操作权限&quot; class=&quot;headerlink&quot; title=&quot;文件或文件夹和用户的三种关系的基础操作权限&quot;&gt;&lt;/a&gt;文件或文件夹和用户的三种关系的基础操作权限&lt;/h3&gt;&lt;p&gt;　　在 linux 使用&lt;code&gt;ls -la&lt;/code&gt;命令可以查看文件夹内文件的属性，下面是我电脑上某个文件夹下文件的属性:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls -la&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x 14 root root     4096 Apr  3 18:47 .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x 23 root root     4096 Mar  2 05:48 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x  2 root root     4096 Apr  3 07:44 backups&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x 17 root root     4096 Jul 22  2014 cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x  2 root root     4096 Mar  2 04:26 docker-registry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx  1 root root        9 Feb 25 13:31 lock -&amp;gt; /run/lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxr-x 15 root syslog   4096 Apr  3 07:44 &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  1 root root        0 Apr  3 18:47 &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;上面的有九列数据，第一列数据表示和文件或文件夹相应关系用户的操作权限，第二列表示文件夹内文件和文件夹的总数量(包括文件夹本身)，第三列表示文件夹或文件的拥有者，第四列表示文件或文件夹的所属的组，第五列表示文件或文件夹的大小，第六、七、八列表示文件或文件夹最后被修改的时间，第九列文件或文件夹的名字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接下主要分析第一列的数据，在上面的信息中倒数第二行&lt;code&gt;drwxrwxr-x&lt;/code&gt;，从左到右第一个字母表示文件系统对象的类别，这里&lt;code&gt;d&lt;/code&gt;表示为目录(文件夹)。其它文件系统对象:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-&lt;/code&gt;(常规文件)、&lt;code&gt;d&lt;/code&gt;(目录)、&lt;code&gt;l&lt;/code&gt;(符号链接)、&lt;code&gt;c&lt;/code&gt;(字符特殊设备)、&lt;code&gt;b&lt;/code&gt;(模块特殊设备)、&lt;code&gt;p&lt;/code&gt;(FIFO)、&lt;code&gt;s&lt;/code&gt;(套接字)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;drwxrwxr-x&lt;/code&gt;除出去第一个字母&lt;code&gt;d&lt;/code&gt;后的&lt;code&gt;rwxrwxr-x&lt;/code&gt;表示的是三种用户关系对文件或文件夹的操作权限。从左到右每三个一组，依次表示所有者权限、组权限、其他用户权限。每组的顺序均为&lt;code&gt;rwx&lt;/code&gt;，如果用户有相应的操作权限就用相应的字母表示，如果不具有相应的操作权限就用&lt;code&gt;-&lt;/code&gt;表示。比如: &lt;code&gt;rwxrwxr-x&lt;/code&gt;表示文件或文件夹的所有者具有&lt;code&gt;rwx&lt;/code&gt;(可读，可写，可执行)的操作权限，组用户也具有&lt;code&gt;rwx&lt;/code&gt;(可读，可写，可执行)的权限，其他用户具有&lt;code&gt;r-x&lt;/code&gt;(可读，可执行，没有可读)的操作权限。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;特殊权限SUID、SGID、Sticky&quot;&gt;&lt;a href=&quot;#特殊权限SUID、SGID、Sticky&quot; class=&quot;headerlink&quot; title=&quot;特殊权限SUID、SGID、Sticky&quot;&gt;&lt;/a&gt;特殊权限&lt;code&gt;SUID&lt;/code&gt;、&lt;code&gt;SGID&lt;/code&gt;、&lt;code&gt;Sticky&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;　　在 linux 系统中还有三种与用户身份无关的三个文件权限属性。即&lt;code&gt;SUID、SGID和Sticky&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt; SUID(Set User ID, 4): &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该属性只对有执行权限的文件有效，对目录无效。执行具有&lt;code&gt;SUID&lt;/code&gt;权限的程序时，引发的进程的所有者是程序文件的所有者，而不是启动程序的用户（除非二者是同一个人）。比如，如果一个程序的所有者是&lt;code&gt;root&lt;/code&gt;且具有&lt;code&gt;SUID&lt;/code&gt;属性，一个普通用户执行此程序时，如同&lt;code&gt;root&lt;/code&gt;执行此程序一样。（请注意该属性对&lt;code&gt;Shell&lt;/code&gt;脚本程序无效）该属性为一些特殊程序（如lpr）的启动带来了方便。但有时也带来了安全隐患：比如一个具有&lt;code&gt;SUID&lt;/code&gt;属性的程序如果在执行时运行了一个&lt;code&gt;shell&lt;/code&gt;，那么用户可以籍此得到系统的最高权限。&lt;code&gt;SUID&lt;/code&gt;可用&lt;code&gt;s&lt;/code&gt;表示，如:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; /usr/bin/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rwsr-xr-x 1 root root 47032 Feb 16  2014 /usr/bin/passwd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt; SGID(Set Group ID, 4): &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于可执行文件，&lt;code&gt;SGID&lt;/code&gt;与&lt;code&gt;SUID&lt;/code&gt;类似，引发的进程的所有组是程序文件所属的组。对于目录，&lt;code&gt;SGID&lt;/code&gt;属性会使目录中新建文件的所属组与该目录相同。&lt;code&gt;SGID&lt;/code&gt;也可以用s表示，如:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; /var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwsr-x  2 root staff    4096 Apr 10  2014 &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxr-x 15 root syslog   4096 Apr  4 19:57 &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Sticky, 1 :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仅对目录有效。带&lt;code&gt;sticky&lt;/code&gt;属性的目录下的文件或目录可以被其拥有者删除或改名。常利用&lt;code&gt;sticky&lt;/code&gt;属性创建这样的目录：组用户可以在此目录中创建新文件、修改文件内容，但只有文件所有者才能对自己的文件进行删除或改名。如系统中的&lt;code&gt;/tmp&lt;/code&gt;文件夹。在属性字符串中，通常用t表示。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxrwxrwt   8 root root  4096 Apr  4 23:57 tmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;修改文件或文件夹对应用户的操作权限&quot;&gt;&lt;a href=&quot;#修改文件或文件夹对应用户的操作权限&quot; class=&quot;headerlink&quot; title=&quot;修改文件或文件夹对应用户的操作权限&quot;&gt;&lt;/a&gt;修改文件或文件夹对应用户的操作权限&lt;/h3&gt;&lt;p&gt;　　在 linux 系统中，可以使用&lt;code&gt;chmod&lt;/code&gt;命令来修改文件或文件夹对应用户的操作权限，&lt;code&gt;chmod&lt;/code&gt;命令也有两种方式修改，一种是使用代表相应操作权限的字母简写表示，另一种是使用代表相应操作权限的数字表示。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt; 使用简写字母 &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt;语法参数格式: [ugoa][[+-=][rwxst]&lt;br&gt;第一个字符是u、g、 o 或 a 中的一个（分别表示用户、组、其他人和所有人）。还可以选择添加（+）、删除（-）或设置（=）各种不同权限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;给文件或文件夹&lt;code&gt;try&lt;/code&gt;的拥有者加可执行权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod u+x try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给文件或文件夹&lt;code&gt;try&lt;/code&gt;的拥有者和组成员加可读可写权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod ug+rw try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给文件或文件夹&lt;code&gt;try&lt;/code&gt;的拥有者和组成员除去可写权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod ug-r try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt; 使用数字表示(八进制数) &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了简化表述，也可使用八进制数来表示权限。即用一个四位八进制数来表示，其中最高位表示特殊权限，随后的三位依次是所有者权限、组权限和其他人权限。每一个八进制位的权限数值是文件具有的相应权限所对应的数值之后，如：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0755=rwxr-xr-x=0(4+2+1)(4+0+1)(4+0+1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数值权限的算法，比如&lt;code&gt;rw-&lt;/code&gt;其实就是&lt;code&gt;110&lt;/code&gt;的二进制，也就是&lt;code&gt;0*2^0 + 1*2^1 + 1*2^2 = 6&lt;/code&gt;。有相应的权限就用&lt;code&gt;1&lt;/code&gt;表示，没有相应的权限就用&lt;code&gt;0&lt;/code&gt;表示。不过这种算法特殊权限不包含在内。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;给文件或文件夹&lt;code&gt;try&lt;/code&gt;的拥有者加&lt;code&gt;rwx&lt;/code&gt;权限，组用户加&lt;code&gt;r-x&lt;/code&gt;权限，其他用户&lt;code&gt;r--&lt;/code&gt;权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod 0754 try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt;命令也可以递归的修改文件夹下所有的文件的权限，如给 try 文件夹下得所有文件加上 0755 权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod -R 0755 try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;批量只修改文件或文件夹权限&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ find -type d|xargs chmod 745     // 只修改文件夹权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find -type f|xargs chmod 644     // 只修改文件权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ chmod 745 `find 路径 -type d`     // 只修改文件夹权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ chmod 644 `find 路径 -type f`    // 只修改文件权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;相应权限的数值:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rwx&lt;/code&gt;(7)、&lt;code&gt;rw-&lt;/code&gt;(6)、&lt;code&gt;r-x&lt;/code&gt;(5)、&lt;code&gt;r--&lt;/code&gt;(4)、&lt;code&gt;--wx&lt;/code&gt;(3)、&lt;code&gt;-w-&lt;/code&gt;(2)、&lt;code&gt;--x&lt;/code&gt;(1)、&lt;code&gt;---&lt;/code&gt;(0)&lt;/li&gt;
&lt;li&gt;suid: 符号&lt;code&gt;s&lt;/code&gt;(4)&lt;/li&gt;
&lt;li&gt;sgid: 符号&lt;code&gt;s&lt;/code&gt;(2)&lt;/li&gt;
&lt;li&gt;sticky: 符号&lt;code&gt;t&lt;/code&gt;(1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;修改文件或文件夹的拥有者和所属的组&quot;&gt;&lt;a href=&quot;#修改文件或文件夹的拥有者和所属的组&quot; class=&quot;headerlink&quot; title=&quot;修改文件或文件夹的拥有者和所属的组&quot;&gt;&lt;/a&gt;修改文件或文件夹的拥有者和所属的组&lt;/h3&gt;&lt;p&gt;　　使用&lt;code&gt;chown&lt;/code&gt;可以修改文件或文件夹的拥有者和所属的组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将文件或文件夹&lt;code&gt;try&lt;/code&gt;的拥有者修改成&lt;code&gt;aikin&lt;/code&gt;，所属的组修改成&lt;code&gt;adm&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chown aikin:adm try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和&lt;code&gt;chmod&lt;/code&gt;一样，&lt;code&gt;-R&lt;/code&gt;参数可以起到递归的作用&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chown -R aikin:adm try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建组和用户&quot;&gt;&lt;a href=&quot;#创建组和用户&quot; class=&quot;headerlink&quot; title=&quot;创建组和用户&quot;&gt;&lt;/a&gt;创建组和用户&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;组相关操作: &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建一个&lt;code&gt;try&lt;/code&gt;组&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo groupadd  try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;try&lt;/code&gt;组的名字为&lt;code&gt;rename-try&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo groupadd -n rename-try try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;try&lt;/code&gt;组的名字为&lt;code&gt;rename-try&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo groupadd -n rename-try try&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除&lt;code&gt;try2&lt;/code&gt;组&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo groupdel  try2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看所有组&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo cat /etc/group&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;用户相关操作: &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建用户&lt;code&gt;test&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 linux 系统上虽然可以使用&lt;code&gt;useradd&lt;/code&gt;或&lt;code&gt;adduser&lt;/code&gt;来创建用户，但是这两个命令是有区别的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;useradd&lt;/code&gt;时，如果后面不添加任何参数选项，例如：&lt;code&gt;$sudo useradd test&lt;/code&gt;创建出来的用户将是默认“三无”用户：一无Home Directory，二无密码，三无系统Shell。&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;adduser&lt;/code&gt;时，创建用户的过程更像是一种人机对话，系统会提示你输入各种信息，然后会根据这些信息帮你创建新用户。&lt;br&gt;下面创建用户使用的是&lt;code&gt;adduser&lt;/code&gt;命令:&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; $ sudo adduser &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Adding user `&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Adding new group `test&#39;&lt;/span&gt; (1002) ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Adding new user `&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; (1001) with group `test&#39;&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Creating home directory `/home/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Copying files from `/etc/skel&#39;&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Enter new UNIX password:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Retype new UNIX password:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; passwd: password updated successfully&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Changing the user information &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Enter the new value, or press ENTER &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Full Name []: &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Room Number []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Work Phone []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Home Phone []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Other []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Is the information correct? [Y/n] y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改用户&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo passwd &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;    // 修改用户密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo usermod &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; /home/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; -G try2 &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;   // 将&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;用户的登录目录改成/home/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;，并加入 try 组，注意这里是大 G。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo gpasswd &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; try     // 将用户 &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; 加入到 try2 组。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo gpasswd &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; try2    // 将用户 &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; 从 try 组中移除&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除用户&lt;code&gt;test&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo userdel &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看所有用户&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cut &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; : &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; 1 /etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/passwd |awk -F \: &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $1&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;em&gt;了解 linux 用户操作权限，安全就掌握在手中。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-lpic1-v3-104-5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习 Linux，101: 管理文件权限和所有权&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://linux-wiki.cn/wiki/zh-hans/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文件权限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.51yip.com/linux/1137.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linux下添加，删除，修改，查看用户和用户组&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　由于 linux 是多用户操作系统，所以基于安全的考虑，需要具备保障个人隐私和系统安全的机制。因此在使用 linux 系统的时候，经常会出现权限的问题(比如: 删除文件、安装软件、运行应用等等)，期初遇到这些问题的时候，大部分都使用&lt;code&gt;sudo&lt;/code&gt;或者是&lt;code&gt;sudo chmod 777 file&lt;/code&gt;(后面会讲解这个命令)来解决的。虽然这种方式可以解决问题，但是这样是不安全的，特别是在服务器上操作的时候，因为不是所有的文件和文件夹都可以被其它用户操作的，不是所有的用户都有&lt;code&gt;root&lt;/code&gt;权限的，不是所有的应用都可以用&lt;code&gt;root&lt;/code&gt;用户启动的。那么我们要如何正确的处理这些权限问题呢？那就让我们来学习一下 linux 权限相关的知识。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://aikin.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 服务自动启动</title>
    <link href="http://aikin.github.io/2014/12/20/ubuntu-auto-startup/"/>
    <id>http://aikin.github.io/2014/12/20/ubuntu-auto-startup/</id>
    <published>2014-12-20T11:26:25.000Z</published>
    <updated>2016-03-17T14:47:06.000Z</updated>
    
    <content type="html">&lt;p&gt;　　有时候，我们希望服务器重启后能够自动的把相关的服务启动起来。在了解如何让服务自动启动前，我们需要先了解一下，linux系统的启动步骤。&lt;/p&gt;
&lt;h3 id=&quot;linux-系统的启动步骤&quot;&gt;&lt;a href=&quot;#linux-系统的启动步骤&quot; class=&quot;headerlink&quot; title=&quot;linux 系统的启动步骤&quot;&gt;&lt;/a&gt;linux 系统的启动步骤&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;读取 MBR 的信息，启动 Boot Manager。&lt;/li&gt;
&lt;li&gt;加载系统内核，初始化硬件和设备驱动，启动 init 进程， init 进程是 Linux 的根进程，所有的系统进程都是它的子进程，也就是说 init 进程会根据配置文件继续引导过程，启动其它进程。&lt;/li&gt;
&lt;li&gt;init 进程读取 /etc/inittab 文件中的信息，并进入预设的运行级别。通常情况下 /etc/rcS.d/ 目录下的启动脚本首先被执行，然后是/etc/rcN.d/ 目录。&lt;/li&gt;
&lt;li&gt;根据 /etc/rcS.d/ 文件夹中对应的脚本启动 Xwindow 服务器 xorg，Xwindow 为 Linux 下的图形用户界面系统。&lt;/li&gt;
&lt;li&gt;启动登录管理器，等待用户登录。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;运行级别&quot;&gt;&lt;a href=&quot;#运行级别&quot; class=&quot;headerlink&quot; title=&quot;运行级别&quot;&gt;&lt;/a&gt;运行级别&lt;/h3&gt;&lt;p&gt;  Ubuntu中的运行级别&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0（关闭系统）&lt;br&gt;1（单用户模式，只允许root用户对系统进行维护。）&lt;br&gt;2 到 5（多用户模式，其中3为字符界面，5为图形界面。）&lt;br&gt;6（重启系统）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;运行级别目录&quot;&gt;&lt;a href=&quot;#运行级别目录&quot; class=&quot;headerlink&quot; title=&quot;运行级别目录&quot;&gt;&lt;/a&gt;运行级别目录&lt;/h3&gt;&lt;p&gt;  在 /etc/rc0.d ~ /etc/rc6.d 和 /etc/rcS.d 目录下，这7个目录中，每个目录分别存放着对应运行级别加载时需要关闭或启动的服务。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; /etc/rc2.d/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;total 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root  18 Aug  9  2013 K01ondemand -&amp;gt; ../init.d/ondemand&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root  18 Mar 13 09:44 K01pppd-dns -&amp;gt; ../init.d/pppd-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root  15 Mar 13 09:44 K01rsync -&amp;gt; ../init.d/rsync&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root  14 Mar 13 09:44 S01acct -&amp;gt; ../init.d/acct&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root  15 Mar 13 09:44 S01aegis -&amp;gt; ../init.d/aegis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root  14 Mar 13 09:44 S01sudo -&amp;gt; ../init.d/sudo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由显示的信息可以知道，其实每个脚本文件都对应着/etc/init.d/目录下具体的服务K开头的脚本文件代表运行级别加载时需要关闭的，S开头的代表需要执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用软连接设置自动启动&quot;&gt;&lt;a href=&quot;#使用软连接设置自动启动&quot; class=&quot;headerlink&quot; title=&quot;使用软连接设置自动启动&quot;&gt;&lt;/a&gt;使用软连接设置自动启动&lt;/h3&gt;&lt;p&gt;  由上面的详细信息可以知道，当我们需要开机启动自己的脚本时，只需要将可执行脚本丢在/etc/init.d目录下，然后在 /etc/rc.d/rc*.d 中建立软链接即可。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ln &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;此处 sshd 是具体服务的脚本文件，S100ssh 是其软链接，S开头代表加载时自启动&lt;/li&gt;
&lt;li&gt;如果需要在多个运行级别下设置自启动，则需建立多个软链接&lt;/li&gt;
&lt;li&gt;这种方式比较繁琐，适用于自定义的服务脚本&lt;/li&gt;
&lt;li&gt;如果系统中已经存在某些服务（比如安装 apache 时就会有 httpd 服务项），可以使用下面的两种方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用-update-rc-d-命令设置自动启动项&quot;&gt;&lt;a href=&quot;#使用-update-rc-d-命令设置自动启动项&quot; class=&quot;headerlink&quot; title=&quot;使用 update-rc.d 命令设置自动启动项&quot;&gt;&lt;/a&gt;使用 update-rc.d 命令设置自动启动项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从所有的运行级别中删除指定启动项&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ update-rc.d &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; ＜basename＞ remove    // basename 为服务的名称&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按指定顺序、在指定运行级别中启动或关闭&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ update-rc.d ＜basename＞ start|stop ＜order＞ ＜runlevels＞&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 实例：update-rc.d apachectl start 20 2 3 4 5 . stop 20 0 1 6 .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解析：表示在2、3、4、5这五个运行级别中，由小到大，第20个开始运行apachectl；在 0 1 6这3个运行级别中，第20个关闭apachectl。这是合并起来的写法，注意它有2个点号，效果等于下面方法：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ update-rc.d apachectl defaults&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动和关闭顺序为90，级别默认&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ update-rc.d ＜basename＞ defaults 90&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A启动后B才能启动，B关闭后A才关闭&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ update-rc.d A defaults 80 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ update-rc.d B defaults 90 10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用-chkconfig-命令设置自动启动项&quot;&gt;&lt;a href=&quot;#使用-chkconfig-命令设置自动启动项&quot; class=&quot;headerlink&quot; title=&quot;使用 chkconfig 命令设置自动启动项&quot;&gt;&lt;/a&gt;使用 chkconfig 命令设置自动启动项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;查看自动启动项&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chkconfig --list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;acct                      0:off  1:off  2:on   3:on   4:on   5:on   6:off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aegis                     0:off  1:off  2:on   3:on   4:on   5:on   6:off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apparmor                  0:off  1:off  2:off  3:off  4:off  5:off  6:off  S:on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;atd                       0:off  1:off  2:off  3:off  4:off  5:off  6:off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;binfmt-support            0:off  1:off  2:off  3:off  4:off&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;开启自动启动服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　如果需要自启动某些服务，只需使用chkconfig 服务名 on即可，若想关闭，将on改为off&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chkconfig sshd on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　在默认情况下，chkconfig会自启动2345这四个级别，如果想自定义可以加上 –level 选项。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chkconfig --level 35 sshd on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wangyan.org/blog/ubuntu-update-rc-d.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu 系统 Update-rc.d 命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/nerxious/archive/2013/01/18/2866548.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux中设置服务自启动的三种方式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　有时候，我们希望服务器重启后能够自动的把相关的服务启动起来。在了解如何让服务自动启动前，我们需要先了解一下，linux系统的启动步骤。&lt;/p&gt;
&lt;h3 id=&quot;linux-系统的启动步骤&quot;&gt;&lt;a href=&quot;#linux-系统的启动步骤&quot; class=&quot;headerlink&quot; title=&quot;linux 系统的启动步骤&quot;&gt;&lt;/a&gt;linux 系统的启动步骤&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;读取 MBR 的信息，启动 Boot Manager。&lt;/li&gt;
&lt;li&gt;加载系统内核，初始化硬件和设备驱动，启动 init 进程， init 进程是 Linux 的根进程，所有的系统进程都是它的子进程，也就是说 init 进程会根据配置文件继续引导过程，启动其它进程。&lt;/li&gt;
&lt;li&gt;init 进程读取 /etc/inittab 文件中的信息，并进入预设的运行级别。通常情况下 /etc/rcS.d/ 目录下的启动脚本首先被执行，然后是/etc/rcN.d/ 目录。&lt;/li&gt;
&lt;li&gt;根据 /etc/rcS.d/ 文件夹中对应的脚本启动 Xwindow 服务器 xorg，Xwindow 为 Linux 下的图形用户界面系统。&lt;/li&gt;
&lt;li&gt;启动登录管理器，等待用户登录。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://aikin.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>window 对象的“生命周期”事件</title>
    <link href="http://aikin.github.io/2014/12/07/window-life-cycle-events/"/>
    <id>http://aikin.github.io/2014/12/07/window-life-cycle-events/</id>
    <published>2014-12-07T06:42:23.000Z</published>
    <updated>2016-03-17T14:47:06.000Z</updated>
    
    <content type="html">&lt;p&gt;　　“生命周期”事件？什么是”生命周期”事件？好吧，我只是想不到标题，于是就想了个“生命周期”名词，个人觉得比较”高大上” (*^__^*)。其实就是网页加载或关闭时触发的事件。&lt;/p&gt;
&lt;p&gt;　　访问一个网页时，可能会触发 window 对象的一些事件(onload, onbeforeunload, onunload, onfocus, onblur等)。我们可以在这些事件触发时，实现一些功能，也可以根据这些事件来捕获用户的一些本地行为等等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;  &lt;strong&gt;&lt;em&gt; 下面这些事件只是在 chrome 上实践过。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;window-onload&quot;&gt;&lt;a href=&quot;#window-onload&quot; class=&quot;headerlink&quot; title=&quot; window.onload: &quot;&gt;&lt;/a&gt;&lt;strong&gt; window.onload: &lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;onload 事件，会在页面内容包括图片的所有元素加载完毕后才能触发。而&lt;code&gt;jqery&lt;/code&gt;的  $(document).ready() 事件，是DOM结构绘制完毕后就触发。同时 window.onload 不能同时编写多个，如果有多个 window.onload 方法，只会触发其中一个。$(document).ready() 可以同时编写多个，并且都可以得到执行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持该事件的 HTML 标签：&lt;br&gt;&lt;code&gt;&amp;lt;body&amp;gt;, &amp;lt;frame&amp;gt;, &amp;lt;frameset&amp;gt;, &amp;lt;iframe&amp;gt;, &amp;lt;img&amp;gt;, &amp;lt;link&amp;gt;, &amp;lt;script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; eg-1: &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;string&quot;&gt;&quot;主君，加载已经完毕!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;window-onbeforeunload&quot;&gt;&lt;a href=&quot;#window-onbeforeunload&quot; class=&quot;headerlink&quot; title=&quot; window.onbeforeunload: &quot;&gt;&lt;/a&gt;&lt;strong&gt; window.onbeforeunload: &lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;onbeforeunload 事件，在页面刷新或关闭前触发。可以用来提示用户，是否要离开当前页面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; eg-2: &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onbeforeunload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;你舍得离开吗？&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;window-onunload&quot;&gt;&lt;a href=&quot;#window-onunload&quot; class=&quot;headerlink&quot; title=&quot; window.onunload: &quot;&gt;&lt;/a&gt;&lt;strong&gt; window.onunload: &lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;onunload 事件，也是在页面刷新或关闭前触发。区别是 onbeforeunload 在 onunload 之前触发，也就是 onbeforeunload 可以阻止 onunload 的触发。不过这个方法在 chrome 时有效时无效。在 safari 正常使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; eg-3: &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onunload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;string&quot;&gt;&quot;拜拜啦!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;下面比较一下-window-和-jQuery-这些事件执行的顺序&quot;&gt;&lt;a href=&quot;#下面比较一下-window-和-jQuery-这些事件执行的顺序&quot; class=&quot;headerlink&quot; title=&quot;下面比较一下 window 和 jQuery 这些事件执行的顺序:&quot;&gt;&lt;/a&gt;下面比较一下 window 和 jQuery 这些事件执行的顺序:&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&quot;document ready!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).unload(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&quot;jquery unload!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).load(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&quot;jquery load!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&quot;window onload!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onbeforeunload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&quot;window onbeforeunload!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onunload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post(&lt;span class=&quot;string&quot;&gt;&quot;window onunload!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;post&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url    : &lt;span class=&quot;string&quot;&gt;&quot;/events_test&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        method : &lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data   : &amp;#123; event: event &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 执行顺序:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// document ready!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// jquery load!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// window onload!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// window onbeforeunload!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// jquery unload!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// window unload!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;jquery doucment ready 先触发，接着是 jquery load，然后是 window onload。&lt;/li&gt;
&lt;li&gt;window beforeunload 先触发， 接着是 window onunload，然后 jquery unload。&lt;/li&gt;
&lt;li&gt;window onunload 和 jquery unload 事件在 chrome 有时候会触发，有时候不会触发。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; 这些事件还需要在其他浏览器实践一下。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　“生命周期”事件？什么是”生命周期”事件？好吧，我只是想不到标题，于是就想了个“生命周期”名词，个人觉得比较”高大上” (*^__^*)。其实就是网页加载或关闭时触发的事件。&lt;/p&gt;
&lt;p&gt;　　访问一个网页时，可能会触发 window 对象的一些事件(onload, onbeforeunload, onunload, onfocus, onblur等)。我们可以在这些事件触发时，实现一些功能，也可以根据这些事件来捕获用户的一些本地行为等等。&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://aikin.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>《JavaScript 模式》养分</title>
    <link href="http://aikin.github.io/2014/11/20/javascript-patterns/"/>
    <id>http://aikin.github.io/2014/11/20/javascript-patterns/</id>
    <published>2014-11-20T13:09:15.000Z</published>
    <updated>2016-03-17T15:59:36.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;《JavaScript-模式》作者-Stoyan-Stefanov-译-陈新&quot;&gt;&lt;a href=&quot;#《JavaScript-模式》作者-Stoyan-Stefanov-译-陈新&quot; class=&quot;headerlink&quot; title=&quot;《JavaScript 模式》作者: Stoyan Stefanov 译: 陈新&quot;&gt;&lt;/a&gt;《JavaScript 模式》作者: Stoyan Stefanov 译: 陈新&lt;/h1&gt;&lt;h3 id=&quot;养分&quot;&gt;&lt;a href=&quot;#养分&quot; class=&quot;headerlink&quot; title=&quot;养分&quot;&gt;&lt;/a&gt;养分&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. 自调用构造函数: &lt;/em&gt;&lt;/strong&gt; 实现不使用&lt;code&gt;new&lt;/code&gt;关键字，构造出实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Waffle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((!&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Waffle)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Waffle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tastes = &lt;span class=&quot;string&quot;&gt;&quot;yummy&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Waffle.prototype.wantAnother = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first   = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Waffle(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    section = Waffle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(first.tastes);     &lt;span class=&quot;comment&quot;&gt;// yummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(section.tastes);   &lt;span class=&quot;comment&quot;&gt;// yummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2. 备忘模式: &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myFunc = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cachekey = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!myFunc.cache[cachekey]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       result = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// 开销很大的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       myFunc.cache[cachekey] = result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; myFunc.cache[cachekey];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 缓存存储&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myFunc.cache = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;3. 配置对象模式: &lt;/em&gt;&lt;/strong&gt;将参数列表封装到一个对象内。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addPerson&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;first, last, dob, gender, address&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addPerson(&lt;span class=&quot;string&quot;&gt;&quot;Bruce&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Wayne&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(), &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;batma&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; conf = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    username : &lt;span class=&quot;string&quot;&gt;&quot;batman&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first    : &lt;span class=&quot;string&quot;&gt;&quot;Bruce&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    last     : &lt;span class=&quot;string&quot;&gt;&quot;Wayne&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addPerson(conf);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;4. 通用命名空间函数: &lt;/em&gt;&lt;/strong&gt;减少全局变量，避免命名冲突。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; MYAPP = MYAPP || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.namespace = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ns_string&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; parts  = ns_string.split(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parent = MYAPP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parts[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] === &lt;span class=&quot;string&quot;&gt;&quot;MYAPP&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parts = parts.splice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, max = parts.length; i &amp;lt; max; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; parent[parts[i]] === &lt;span class=&quot;string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            parent[parts[i]] = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parent = parent[parts[i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;5. 模块模式: &lt;/em&gt;&lt;/strong&gt;提供了结构化的思想并且有助于组织日益增长的代码。可以根据所编写的软件的需求(千变万化的需求)添加、替换或删除这些模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.namespace(&lt;span class=&quot;string&quot;&gt;&quot;MYAPP.utilities.array&quot;&lt;/span&gt;).utilities.array = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uobj = MYAPP.utilities.object,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ulang = MYAPP.utilities.lang,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 私有属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        array_string = &lt;span class=&quot;string&quot;&gt;&quot;[object Array]&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ops = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype.toStirng;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 私有方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// var变量定义结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 可选的一次性初始化过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 公有 API&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inArray: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;needle, haystack&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, max = haystack.length; i &amp;lt; mas; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haystack[i] === needle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// 其它操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isArray: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ops.call(a) === array_string;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ... 更多方法和属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;6. 创建构造函数的模块: &lt;/em&gt;&lt;/strong&gt;使用模块模式返回一个构造函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.namespace(&lt;span class=&quot;string&quot;&gt;&quot;MYAPP.utilities.Array&quot;&lt;/span&gt;).utilities.Array = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uobj = MYAPP.utilities.object,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ulang = MYAPP.utilities.lang,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 私有属性和方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Constr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// var变量定义结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 可选的一次性初始化过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 公有 API --- 构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Constr = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;o&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.elements= &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.toArray(o);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Constr.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: MYAPP.utilities.Array,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        version: &quot;2.0&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        toArray: function(obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, a = []; len = obj.length; i &amp;lt; len; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                a[i] = obj[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 返回要分配给新命名空间的构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Constr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MYAPP.utilities.Array(obj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;7. 将全局变量导入到模块中: &lt;/em&gt;&lt;/strong&gt;有助于加速即时函数中的全局符号解析的速度，因为这些导入的变量成为了该函数的局部变量。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.utilities.module = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;app, global&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 使用参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;(MYAPP, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;8. 沙箱模式: &lt;/em&gt;&lt;/strong&gt;提供了一个可用于模块运行的环境，且不会对其他模块和个人沙箱造成任何影响。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Sandbox 构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sandbox&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 将参数转换成一个数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; args = &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 最后一个参数是回调函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	callback = args.pop(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 模块可以作为一个数组传递，或作为单独的参数传递&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modules = (args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] === &lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt;) ? args : args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 确保该函数作为构造函数被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Sandbox)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sandbox(modules, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 需要向 `this` 添加的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 现在向该核心 `this` 对象添加模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 不指定模块名称或指定“*”都表示“使用所有模块”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!modules || modules === &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	modules = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Sandbox.modules) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Sandbox.modules.hasOwnProperty(i)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	modules.push(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 初始化所需的模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; modules.length; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Sandbox.modules[modules[i]](&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        callback(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name	: &lt;span class=&quot;string&quot;&gt;&quot;My Application&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version : &lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox.prototype.constructor = Sandbox;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 增加模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox.modules = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox.modules.dom = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	box.getElement = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    box.getStyle   = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    box.foo 	   = &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox.modules.event = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 如果需要， 就访问 Sandbox 原型，如:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// box.constructor.prototype.m = &quot;mmm&quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	box.attachEvent  = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    box.dettachEvent = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox.modules.ajax = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	box.makeRequest  = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	box.makeResponse = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用 ajax 和 event 模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox([&lt;span class=&quot;string&quot;&gt;&quot;ajax&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;event&quot;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//console.log(box);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用所有可用模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox(&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 模块嵌套&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sandbox(&lt;span class=&quot;string&quot;&gt;&quot;dom&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;event&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Sandbox(&lt;span class=&quot;string&quot;&gt;&quot;ajax&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;box&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;9. 圣杯继承模式&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inherit = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; F = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;C, P&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	F.prototype = P.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        C.prototype = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        C.uber = P.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        C.prototype.constructor = C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;10. 浅拷贝对象&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;extend&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;parent, child&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    child = child || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; parent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parent.hasOwnProperty(i)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            child[i] = parent[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dad = &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;Adam&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; kid = extend(dad);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(kid.name);    &lt;span class=&quot;comment&quot;&gt;// &quot;Adam&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;11. 深拷贝对象&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;extendDeep&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;parent, child&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	toStr = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype.toString,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        astr = &lt;span class=&quot;string&quot;&gt;&quot;[object Array]&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    child = child || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; parent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parent.hasOwnProperty(i)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; parent[i] === &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	child[i] = (toStr.call(parent[i]) === astr) ? [] : &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                extendDeep(parent[i], child[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	child[i] = parent[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dad = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	counts: [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reads: &amp;#123;paper: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; kid = extendDeep(dad);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kid.counts.push(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(kid.counts.toString());    &lt;span class=&quot;comment&quot;&gt;// &quot;1,2,3,4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(dad.counts.toString());    &lt;span class=&quot;comment&quot;&gt;// &quot;1,2,3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(dad.reads === kid.reads);   &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;12. 混入模式(mix-in)，就是将多个对象组合成一个新的对象。&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mix&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arg,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	prop,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        child = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (arg = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; arg &amp;lt; &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;.length; arg += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (prop &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;[arg]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;[arg].hasOwnProperty(prop)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	child[prop] = &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;[arg][prop];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cake = mix(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;eggs: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, large: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;butter: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, salted: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;13. 单例模式(Singleton)，保证一个特定类仅有一个实例。当第二次使用这个特定类创建对象的时候，应该得到与第一次所创建对象完全相同。&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Universe&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Universe = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Universe&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Universe.prototype = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Universe();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance.constructor = Universe;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance.start_time = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance.bang = &lt;span class=&quot;string&quot;&gt;&quot;Big&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;14. 迭代器模式(Iterator)，提供一个简单的接口，顺序遍历数据集合中的各个元素。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; agg = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    length = data.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        next: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.hasNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            element = data[index];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            index = index + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; element;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hasNext: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; index &amp;lt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 重置指针到初始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rewind: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 返回当前元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        current: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data[index];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(agg.hasNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(agg.next());   &lt;span class=&quot;comment&quot;&gt;// 迭代的结果是：1,3,5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;agg.rewind();   			  &lt;span class=&quot;comment&quot;&gt;// 重置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(agg.current());  &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;15. 装饰者模式，可以在运行时动态添加附加功能到对象中。装饰者模式的一个比较方便的特征在于其预期行为的可定制和可配置特性。可以从仅具有一些基本功能的普通对象开始，然后从可用装饰资源池中选择需要用于增强普通对象的那些功能，并且按照顺序进行装饰，尤其是当装饰顺序很重要的时候。我感觉就是一个普通的材料通过了流水线的加工后产生了一个新的产品。也可说是一个对象进行了升级的过程，改变了自己的功能。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法一: 让每个装饰者成为一个对象，并且该对象包含了应该被重载的方法。每个装饰者实际上继承了目前已经被前一个装饰者进行增强后的对象。每个装饰方法在 uber (被继承的对象) 上调用了同样的方法并获取其值，此外它还继续执行了一些其它操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sale&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;price&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.price = price || &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.prototype.getPrice = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.price;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.fedtax = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; price = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.uber.getPrice();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        price += price * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; price;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.quebec = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; price = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.uber.getPrice();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        price += price * &lt;span class=&quot;number&quot;&gt;7.5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; price;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.money = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;$&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.uber.getPrice().toFixed(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.cdn = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;CDN$&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.uber.getPrice().toFixed(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.prototype.decorate = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; F = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	overrides = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.constructor.decorators[decorate],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i, newobj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	F.prototype = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    newobj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    newobj.uber = F.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; overrides) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (overrides.hasOwnProperty(i)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	newobj[i] = overrides[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; newobj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sale = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sale(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);           &lt;span class=&quot;comment&quot;&gt;// 该价格为 100 美元&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale = sale.decorate(&lt;span class=&quot;string&quot;&gt;&#39;fedtax&#39;&lt;/span&gt;);     &lt;span class=&quot;comment&quot;&gt;// 增加联邦税&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale = sale.decorate(&lt;span class=&quot;string&quot;&gt;&#39;quebec&#39;&lt;/span&gt;);     &lt;span class=&quot;comment&quot;&gt;// 增加省级税&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale = sale.decorate(&lt;span class=&quot;string&quot;&gt;&#39;quebec&#39;&lt;/span&gt;);     &lt;span class=&quot;comment&quot;&gt;// 格式化为美元货币形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale.getPrice();                    &lt;span class=&quot;comment&quot;&gt;// &quot;$112.88&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;方法二: 使用列表实现，将装饰者放在一个列表中，可以很容易的支持反装饰或撤销装饰(就是对装饰者列表进行 push 和 pop 的过程)。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sale&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;price&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.price = (price &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) || &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.decorators_list = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.fedtax = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; price + price * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.quebec = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; price + price * &lt;span class=&quot;number&quot;&gt;7.5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.decorators.money = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getPrice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;$&quot;&lt;/span&gt; + price.toFixed(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.prototype.decorate = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;decorator&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.decorators_list.push(decorator);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sale.prototype.getPrice = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; price = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.price,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		max = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.decorators_list.length,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; max; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.decorators_list[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        price = Sale.decorators[name].getPrice(price);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; price;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sale = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sale(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);      &lt;span class=&quot;comment&quot;&gt;// 该价格为 100 美元&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale.decorate(&lt;span class=&quot;string&quot;&gt;&#39;fedtax&#39;&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 增加联邦税&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale.decorate(&lt;span class=&quot;string&quot;&gt;&#39;quebec&#39;&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 增加省级税&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale.decorate(&lt;span class=&quot;string&quot;&gt;&#39;quebec&#39;&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 格式化为美元货币形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sale.getPrice();               &lt;span class=&quot;comment&quot;&gt;// &quot;$112.88&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;16. 策略模式，策略模式定义了算法家族，分别封装起来，让他们之间可以互相替换，此模式让算法的变化不会影响到使用算法的客户。就是先抽象出相同的处理流程(算法调用的过程，或做的事情)，然后根据在流程中获取到的算法策略不同，从而使流程内具体要做的事就不同。感觉像是&lt;code&gt;框架(流程)，数据(需要处理的数据)，算法(算法策略)&lt;/code&gt;模式。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; validator = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 所有可用的检查&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    types: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在当前验证会话中的错误信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    messages: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 当前需要使用的验证类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    config: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 暴露的公开验证方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 传入的参数是 key =&amp;gt; value，js中的，object类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    validate: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i, msg, type, checker, result_ok;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 清空所有的错误信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.messages = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.hasOwnProperty(i)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                type = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.config[i];         &lt;span class=&quot;comment&quot;&gt;// 根据key查询是否有存在的验证规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                checker = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.types[type];   &lt;span class=&quot;comment&quot;&gt;// 获取验证规则的验证类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;                &lt;span class=&quot;comment&quot;&gt;// 如果验证规则不存在，则不处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!checker) &amp;#123;             &lt;span class=&quot;comment&quot;&gt;// 如果验证规则类不存在，抛出异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        name: &lt;span class=&quot;string&quot;&gt;&quot;ValidationError&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        message: &lt;span class=&quot;string&quot;&gt;&quot;No handler to validate type &quot;&lt;/span&gt; + type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result_ok = checker.validate(data[i]); &lt;span class=&quot;comment&quot;&gt;// 使用查到的单个验证类进行验证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!result_ok) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg = &lt;span class=&quot;string&quot;&gt;&quot;Invalid value for *&quot;&lt;/span&gt; + i + &lt;span class=&quot;string&quot;&gt;&quot;*, &quot;&lt;/span&gt; + checker.instructions;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.messages.push(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.hasErrors();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// helper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hasErrors: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.messages.length !== &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义types里存放的各种验证类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 验证给定的值是否不为空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;validator.types.isNonEmpty = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    validate: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value !== &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instructions: &lt;span class=&quot;string&quot;&gt;&quot;传入的值不能为空&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 验证给定的值是否是数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;validator.types.isNumber = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    validate: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; !&lt;span class=&quot;built_in&quot;&gt;isNaN&lt;/span&gt;(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instructions: &lt;span class=&quot;string&quot;&gt;&quot;传入的值只能是合法的数字，例如：1, 3.14 or 2010&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 验证给定的值是否只是字母或数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;validator.types.isAlphaNum = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    validate: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; !&lt;span class=&quot;regexp&quot;&gt;/[^a-z0-9]/i&lt;/span&gt;.test(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instructions: &lt;span class=&quot;string&quot;&gt;&quot;传入的值只能保护字母和数字，不能包含特殊字符&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义需要验证的数据集合，然后还需要定义每种数据需要验证的规则类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first_name: &lt;span class=&quot;string&quot;&gt;&quot;Tom&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    last_name: &lt;span class=&quot;string&quot;&gt;&quot;Xu&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;string&quot;&gt;&quot;unknown&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    username: &lt;span class=&quot;string&quot;&gt;&quot;TomXu&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;validator.config = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first_name: &lt;span class=&quot;string&quot;&gt;&#39;isNonEmpty&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;string&quot;&gt;&#39;isNumber&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    username: &lt;span class=&quot;string&quot;&gt;&#39;isAlphaNum&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;validator.validate(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (validator.hasErrors()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(validator.messages.join(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;17. 外观模式，为子系统的&lt;code&gt;一组接口&lt;/code&gt;提供一个一致的界面(接口)，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。感觉就是对一些接口的组合(封装)，形成一个高层接口(抽象接口)，以备外界调用。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myEvent = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stop: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.preventDefault();       &lt;span class=&quot;comment&quot;&gt;// 终止事件以避免其冒泡上升到父节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.stopPropagation();      &lt;span class=&quot;comment&quot;&gt;// 阻止浏览器执行默认动作(例如, 阻止下面的链接或提交表单)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《JavaScript-模式》作者-Stoyan-Stefanov-译-陈新&quot;&gt;&lt;a href=&quot;#《JavaScript-模式》作者-Stoyan-Stefanov-译-陈新&quot; class=&quot;headerlink&quot; title=&quot;《JavaScript 模式》作者: Stoyan Stefanov 译: 陈新&quot;&gt;&lt;/a&gt;《JavaScript 模式》作者: Stoyan Stefanov 译: 陈新&lt;/h1&gt;&lt;h3 id=&quot;养分&quot;&gt;&lt;a href=&quot;#养分&quot; class=&quot;headerlink&quot; title=&quot;养分&quot;&gt;&lt;/a&gt;养分&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. 自调用构造函数: &lt;/em&gt;&lt;/strong&gt; 实现不使用&lt;code&gt;new&lt;/code&gt;关键字，构造出实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Waffle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((!&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Waffle)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Waffle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tastes = &lt;span class=&quot;string&quot;&gt;&quot;yummy&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Waffle.prototype.wantAnother = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first   = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Waffle(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    section = Waffle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(first.tastes);     &lt;span class=&quot;comment&quot;&gt;// yummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(section.tastes);   &lt;span class=&quot;comment&quot;&gt;// yummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="reading-notes" scheme="http://aikin.github.io/tags/reading-notes/"/>
    
  </entry>
  
  <entry>
    <title>理解 prototype 和 __proto__</title>
    <link href="http://aikin.github.io/2014/11/10/prototype-proto/"/>
    <id>http://aikin.github.io/2014/11/10/prototype-proto/</id>
    <published>2014-11-10T12:07:10.000Z</published>
    <updated>2016-03-17T14:47:06.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;理解-prototype-和-proto&quot;&gt;&lt;a href=&quot;#理解-prototype-和-proto&quot; class=&quot;headerlink&quot; title=&quot;理解 prototype 和 __proto__&quot;&gt;&lt;/a&gt;理解 prototype 和 __proto__&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;　　一个对象的真正原型是被对象内部的&lt;code&gt;[[Prototype]]&lt;/code&gt;属性所持有。ECMAScript 引入了标准对象原型访问器&lt;code&gt;Object.getPrototype(object)&lt;/code&gt;，到目前为止只有 Firefox 和 Chrome 实现了此访问器。除了IE，其他的浏览器支持非标准的访问器&lt;code&gt;__proto__&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;什么是-prototype-和-proto&quot;&gt;&lt;a href=&quot;#什么是-prototype-和-proto&quot; class=&quot;headerlink&quot; title=&quot;什么是 prototype 和 __proto__ ?&quot;&gt;&lt;/a&gt;什么是 &lt;em&gt;&lt;code&gt;prototype&lt;/code&gt;&lt;/em&gt; 和 &lt;em&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/em&gt; ?&lt;/h3&gt;&lt;p&gt;　　&lt;strong&gt;&lt;code&gt;prototype&lt;/code&gt;&lt;/strong&gt; 为构造器(构造函数)的原型，是一个 javascript 的原生对象，它是通过调用构造函数而创建的那个对象实例的原型对象。 其他的对象可以通过他实现属性继承。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; 是对象的内部原型，所有对象的&lt;code&gt;__proto__&lt;/code&gt;都指向该对象的构造器的&lt;code&gt;prototype&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;　　在调用对象的方法时，会通过该对象&lt;code&gt;__proto__&lt;/code&gt;在原型链中查找。而构造器的&lt;code&gt;prototype&lt;/code&gt; 会用于创建通过&lt;code&gt;new&lt;/code&gt;关键字创建的对象的&lt;code&gt;__proto__&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;所有构造器(函数)的&lt;code&gt;__proto__&lt;/code&gt;都指向&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;.__proto__   === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Boolean&lt;/span&gt;.__proto__  === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.__proto__   === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.__proto__   === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.__proto__    === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;.__proto__   === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;.__proto__    === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.__proto__     === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;注意: JavaScript中有内置(build-in)构造器/对象共计12个（ES5中新加了JSON），这里列举了可访问的8个构造器。剩下如&lt;code&gt;Global&lt;/code&gt;不能直接访问，&lt;code&gt;Arguments&lt;/code&gt;仅在函数调用时由JS引擎创建，&lt;code&gt;Math、JSON&lt;/code&gt;是以对象形式存在的，无需&lt;code&gt;new&lt;/code&gt;。它们的&lt;code&gt;__proto__&lt;/code&gt;是&lt;code&gt;Object.prototype&lt;/code&gt;。如下:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype;  &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype;  &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上介绍都是原生的 javascript 的构造器(函数)，当然自定义的构造器也满足:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Man = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Man.__proto__    === &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype;   &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://aikin-blog-images.qiniudn.com/js-function-prototype.png&quot; alt=&quot;构造函数原型链图&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;所有对象的&lt;code&gt;__proto__&lt;/code&gt;都指向其构造函数的&lt;code&gt;prototype&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj  = &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr  = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reg  = &lt;span class=&quot;regexp&quot;&gt;/hello/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; err  = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;exception&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.__proto__  === &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype; &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.__proto__  === &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype;  &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg.__proto__  === &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;.prototype; &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.prototype;  &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;err.__proto__  === &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;.prototype;  &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自定义构造函数的实例对象也是如此:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.__proto__ === Person.prototype; &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://aikin-blog-images.qiniudn.com/js-object-prototype.png&quot; alt=&quot;对象原型链图&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;new-关键字做了什么&quot;&gt;&lt;a href=&quot;#new-关键字做了什么&quot; class=&quot;headerlink&quot; title=&quot;new 关键字做了什么?&quot;&gt;&lt;/a&gt;&lt;code&gt;new&lt;/code&gt; 关键字做了什么?&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; new 运算符接受一个函数 F 及其参数：&lt;code&gt;new F(arguments...)&lt;/code&gt;。这一过程分为三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建类的实例。这步是把一个空的对象的&lt;code&gt;__proto__&lt;/code&gt;属性设置为&lt;code&gt;F.prototype&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;初始化实例。函数 F 被传入参数并调用，关键字&lt;code&gt;this&lt;/code&gt;指向该实例。&lt;/li&gt;
&lt;li&gt;返回实例 当然你也可以&lt;code&gt;return&lt;/code&gt;自定义的对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;new 函数的伪实现:&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;new&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;f&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ins = &amp;#123; &lt;span class=&quot;string&quot;&gt;&#39;__proto__&#39;&lt;/span&gt;: f.prototype &amp;#125;; &lt;span class=&quot;comment&quot;&gt;/*第一步*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f.apply(ins, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);            &lt;span class=&quot;comment&quot;&gt;/*第二步*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ins;                         &lt;span class=&quot;comment&quot;&gt;/*第三步*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;干货呈上-来几道-quiz-吧&quot;&gt;&lt;a href=&quot;#干货呈上-来几道-quiz-吧&quot; class=&quot;headerlink&quot; title=&quot;干货呈上(来几道 quiz 吧)&quot;&gt;&lt;/a&gt;干货呈上(来几道 quiz 吧)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; quiz-1 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;ulaijn&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(me.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; quiz-2 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;ulaijn&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(me.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;quiz-1&lt;/code&gt;和&lt;code&gt;quiz-2&lt;/code&gt;运行结果分别是:&lt;code&gt;ulaijn&lt;/code&gt;和&lt;code&gt;aikin&lt;/code&gt;。这两个测试题主要考察的是对&lt;code&gt;new&lt;/code&gt;关键字的理解。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;quiz-1&lt;/code&gt;中，在调用&lt;code&gt;new Person()&lt;/code&gt;时，&lt;code&gt;Person&lt;/code&gt;构造函数内的&lt;code&gt;this&lt;/code&gt;指向是&lt;code&gt;Person&lt;/code&gt;的实例，由于&lt;code&gt;Person&lt;/code&gt;构造函数返回了一个对象类型的&lt;code&gt;{ name: &amp;#39;ulaijn&amp;#39; }&lt;/code&gt;，导致&lt;code&gt;new Person()&lt;/code&gt;返回的不是&lt;code&gt;Person&lt;/code&gt;构造函数的实例，而是&lt;code&gt;{name: ulaijn}&lt;/code&gt;，因为只要当构造函数自定义&lt;code&gt;return&lt;/code&gt;的值是对象类型(不为 &lt;em&gt;&lt;code&gt;null&lt;/code&gt;&lt;/em&gt;)时，这样将导致使用&lt;code&gt;new&lt;/code&gt;关键字调用构造函数后的返回值，替换掉本该返回的构造函数的实例，所以这里的&lt;code&gt;me&lt;/code&gt;为&lt;code&gt;{name: &amp;#39;ulaijn&amp;#39;}&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;quiz-2&lt;/code&gt;中，&lt;code&gt;Person&lt;/code&gt;构造函数内的&lt;code&gt;this&lt;/code&gt;，在调用&lt;code&gt;new Person()&lt;/code&gt;时和&lt;code&gt;quiz-1&lt;/code&gt;一样都是指向&lt;code&gt;Person&lt;/code&gt;的实例，但是由于&lt;code&gt;Person&lt;/code&gt;构造函数返回了一个不是对象类型，而是字符串类型的&lt;code&gt;ulaijn&lt;/code&gt;，导致&lt;code&gt;new Person()&lt;/code&gt;生成的实例无法被替换，所以&lt;code&gt;me.name&lt;/code&gt;为&lt;code&gt;aikin&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; quiz-3 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: Person,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name : &#39;aikin&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age : 23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var aMe = new Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var bMe = new Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aMe.name = &#39;luna&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bMe.name = &#39;tom&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(aMe.name);  // ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(bMe.name);  // ?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; quiz-4 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: Person,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age  : &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; aMe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bMe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aMe.info.name = &lt;span class=&quot;string&quot;&gt;&#39;luna&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bMe.info.name = &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(aMe.info.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bMe.info.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; quiz-5 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.info = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age  : &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; aMe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bMe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aMe.info.name = &lt;span class=&quot;string&quot;&gt;&#39;luna&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bMe.info.name = &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(aMe.info.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bMe.info.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; quiz-6 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.info = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age  : &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: Person,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age  : &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; aMe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bMe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aMe.info.name = &lt;span class=&quot;string&quot;&gt;&#39;luna&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bMe.info.name = &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(aMe.info.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bMe.info.name);  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;quiz-3&lt;/em&gt;、&lt;em&gt;quiz-5&lt;/em&gt; 和 &lt;em&gt;quiz-6&lt;/em&gt; 的运行结果是: &lt;code&gt;luna&lt;/code&gt;和&lt;code&gt;tom&lt;/code&gt;，而 &lt;em&gt;quiz-4&lt;/em&gt; 的运行结果是: &lt;code&gt;tom&lt;/code&gt;和&lt;code&gt;tom&lt;/code&gt;。这四道题主要考察的是对&lt;code&gt;prototype&lt;/code&gt;理解。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;quiz-3&lt;/em&gt; 中&lt;code&gt;aMe.name = &amp;#39;luna&amp;#39;&lt;/code&gt;是赋值的过程，会在&lt;code&gt;aMe&lt;/code&gt;中创建&lt;code&gt;name&lt;/code&gt;属性，不会修改&lt;code&gt;aMe.__proto__.name&lt;/code&gt;，当然&lt;code&gt;bMe&lt;/code&gt;也一样。&lt;/li&gt;
&lt;li&gt;对于 &lt;em&gt;quiz-4&lt;/em&gt; 来说，&lt;code&gt;aMe.info.name = &amp;#39;luna&amp;#39;&lt;/code&gt;是在对&lt;code&gt;aMe.info&lt;/code&gt;赋值的过程，所以要先查找出&lt;code&gt;aMe.info&lt;/code&gt;对象，因为&lt;code&gt;aMe&lt;/code&gt;对象自己没有&lt;code&gt;info&lt;/code&gt;属性，所以会从&lt;code&gt;aMe.__proto__&lt;/code&gt; 获取到&lt;code&gt;info&lt;/code&gt;对象，并修改掉&lt;code&gt;info&lt;/code&gt;的&lt;code&gt;name&lt;/code&gt;属性。而&lt;code&gt;bMe.info.name = tom&lt;/code&gt;也是这个过程，由于&lt;code&gt;aMe.__proto__ === bMe.__proto__&lt;/code&gt;，所以&lt;code&gt;bMe.info.name = tom&lt;/code&gt;执行后会修改掉&lt;code&gt;bMe.__proto__.info.name&lt;/code&gt;，从而导致&lt;code&gt;aMe.info.name&lt;/code&gt;也被修改成&lt;code&gt;tom&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;quiz-5&lt;/em&gt; 和 &lt;em&gt;quiz-6&lt;/em&gt; 是考察对原型链查找的规则理解。当实例对象自己有相应的属性，就不会去获取原型链上的属性。就像 &lt;em&gt;quiz-6&lt;/em&gt; 里面的&lt;code&gt;aMe&lt;/code&gt;实例对象，&lt;code&gt;aMe&lt;/code&gt;对象拥有&lt;code&gt;info&lt;/code&gt;属性，同时在&lt;code&gt;aMe.__proto__&lt;/code&gt;也用拥有&lt;code&gt;info&lt;/code&gt;属性，但是&lt;code&gt;aMe.info.name&lt;/code&gt;，不会获取&lt;code&gt;aMe.__proto__.info.name&lt;/code&gt;，因为在原型链获取相应对象或者函数时，会从对象(实例)本身开始沿着原型链向上查找，只要找到了，就好停止继续查找。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; 使用 &lt;code&gt;console.dir(Function)&lt;/code&gt; 打印出你的原型链。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/snandy/archive/2012/09/01/2664134.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript中&lt;strong&gt;proto&lt;/strong&gt;与prototype的关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/9648/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;理解JavaScript原型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/rexy/p/4086186.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这些javascript面试题，你做对了几道？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;理解-prototype-和-proto&quot;&gt;&lt;a href=&quot;#理解-prototype-和-proto&quot; class=&quot;headerlink&quot; title=&quot;理解 prototype 和 __proto__&quot;&gt;&lt;/a&gt;理解 prototype 和 __proto__&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;　　一个对象的真正原型是被对象内部的&lt;code&gt;[[Prototype]]&lt;/code&gt;属性所持有。ECMAScript 引入了标准对象原型访问器&lt;code&gt;Object.getPrototype(object)&lt;/code&gt;，到目前为止只有 Firefox 和 Chrome 实现了此访问器。除了IE，其他的浏览器支持非标准的访问器&lt;code&gt;__proto__&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://aikin.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Star Repositories On GitHub</title>
    <link href="http://aikin.github.io/2014/11/08/star-repos/"/>
    <id>http://aikin.github.io/2014/11/08/star-repos/</id>
    <published>2014-11-08T12:16:35.000Z</published>
    <updated>2016-03-17T14:57:14.000Z</updated>
    
    <content type="html">&lt;p&gt;　　这里记录的是笔者在 &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;上 Star 的库，持续更新。&lt;/p&gt;
&lt;h2 id=&quot;JS-类&quot;&gt;&lt;a href=&quot;#JS-类&quot; class=&quot;headerlink&quot; title=&quot;JS 类&quot;&gt;&lt;/a&gt;JS 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/getify/LABjs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LABjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jrburke/requirejs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;requirejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/seajs/seajs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;seajs&lt;/a&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;LABjs 是一个文件加载器, 核心价值是性能优化&lt;/li&gt;
&lt;li&gt;RequireJS 和 SeaJS 则是模块加载器，倡导的是一种模块化开发理念，核心价值是        让 JavaScript 的模块化开发变得更简单自然。&lt;/li&gt;
&lt;li&gt;模块加载器一般可降级为文件加载器用，因此使用 RequireJS 和 SeaJS，也可以达        成 LABjs 的性能优化目的。&lt;/li&gt;
&lt;li&gt;RequireJS 遵循的是 AMD（异步模块定义）规范，SeaJS 遵循的是 CMD （通用模            块定义）规范。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cujojs/curl.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;curl&lt;/a&gt; 异步模块加载器，符合AMD规范&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;phantomjs&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;页面自动化测试：希望自动的登陆网站并做一些操作然后检查结果是否正常&lt;br&gt;网页监控：希望定期打开页面，检查网站是否能正常加载，加载结果是否符合预期。加载速度如何等&lt;br&gt;网络爬虫：获取页面中使用js来下载和渲染信息，或者是获取链接处使用js来跳转后的真实地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cocos2d/cocos2d-html5.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocos2d-html5&lt;/a&gt; cocos2d for Web Browsers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/meteor/meteor.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;meteor&lt;/a&gt; 非常简单的用于构建现代web应用程序的环境。页面操作，直接同步到后台。同时更新其他访问者。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tastejs/todomvc.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;todomvc&lt;/a&gt; Helping you select an MV* framework&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sintaxi/harp.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;harp&lt;/a&gt; static web server that also serves Jade, Markdown, EJS, Less, Stylus, Sass, and CoffeeScript as HTML, CSS, and JavaScript without any configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aFarkas/lazysizes.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lazysizes&lt;/a&gt; 高性能实现懒加载 images scripts iframes等 从不可见到可见的变化展示&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HubSpot/offline.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;offline&lt;/a&gt; 自动弹出提示框当用户网络连接断开时&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/evilstreak/markdown-js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-js&lt;/a&gt; 解析 md&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coreyti/showdown.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;showdown&lt;/a&gt; 处理 md&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sebmck/6to5.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;6to5&lt;/a&gt; turns ES6 code into vanilla ES5&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/madrobby/zepto.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zepto&lt;/a&gt; 像 jquery 一样的js库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/paulkinzett/toolbar.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;toolbar&lt;/a&gt; jquery工具箱插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/desandro/masonry.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;masonry&lt;/a&gt; 瀑布流网格布局&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zeroclipboard/zeroclipboard.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zeroclipboard&lt;/a&gt; 剪切板&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/blasten/turn.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;turn.js&lt;/a&gt; HTML5 实现书本的翻页效果&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/videojs/video.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;video.js&lt;/a&gt; open source  custom HTML5 &amp;amp; Flash video player&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hammerjs/hammer.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hammer.js&lt;/a&gt; 多种手势  multi-touch gestures&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hakimel/reveal.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reveal.js&lt;/a&gt; 多媒体html 展示框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/h5bp/html5-boilerplate.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;html5-boilerplate&lt;/a&gt; 一个HTML/CSS/JS模板（技巧集合），包含了HTML5以及许多其他最佳实践&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mbostock/d3.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;d3&lt;/a&gt; 针对HTML和SVG的JavaScript可视化库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;three.js &lt;/a&gt; js 3d 库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery-mobile.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jquery-mobile&lt;/a&gt; jquery移动版&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chriso/validator.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;validator.js&lt;/a&gt; 对数据验证处理， 比例输入的 email 是否规范&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/isagalaev/highlight.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlight.js&lt;/a&gt; 代码高亮&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bartaz/impress.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;impress.js&lt;/a&gt; 令人眩目的内容展示效果&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Prinzhorn/skrollr.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;skrollr&lt;/a&gt; 视差滚动js插件,随着滚动来改变Html展示&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rsms/node-imagemagick.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;imagemagick&lt;/a&gt; node第三方库, 关于对图片的处理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shutterstock/rickshaw.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rickshaw&lt;/a&gt; 用于创建交互式的实时图形JavaScript工具包&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fex-team/fis.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fis&lt;/a&gt; FIS是专为解决前端开发中自动化工具、性能优化、模块化框架、开发规范、代码部署、开发流程等问题的工具框架。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/esprima.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;esprima&lt;/a&gt; js 语法树分析&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/globocom/clappr.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;clappr&lt;/a&gt; 一个可扩展的网页媒体播放器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/knsv/mermaid.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mermaid&lt;/a&gt; 通过用类似于 markdown 一样的方式，将规定格式的文本内容，生成图表和流程图的工具。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WickyNilliams/headroom.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;headroom.js&lt;/a&gt; 隐藏 Header&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wycats/handlebars.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;handlebars.js&lt;/a&gt; JavaScript 一个语义模板库，通过对view和data的分离来快速构建Web模板。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/RubaXa/Sortable.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sortable&lt;/a&gt; 可以在现代浏览器和触屏设备上重排列表内容的简约 js 库。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ciaoca/cxSelect.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery cxSelect&lt;/a&gt; 多级联动下拉菜单&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nathansearles/Slides.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Slides&lt;/a&gt; 图片轮播滑动&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ded/klass.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;klass&lt;/a&gt; 一个实用工具来创建富有表现力的JavaScript类&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reworkcss/css.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;css&lt;/a&gt; css文件解析工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chjj/term.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;term.js&lt;/a&gt; 一个用JS写的终端&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chjj/tty.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tty.js&lt;/a&gt; 浏览器上的终端， 使用node/express/socket.io&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fex-team/webuploader.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;webuploader&lt;/a&gt; WebUploader是一个简单的以HTML5为主，FLASH为辅的现代文件上传组件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/derobins/wmd.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wmd&lt;/a&gt; markdown 编辑器 用于评论&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vakata/jstree.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jstree&lt;/a&gt; js 生成目录树&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/codemirror/CodeMirror.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodeMirror&lt;/a&gt; 浏览器代码编辑器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxJS&lt;/a&gt; 反应性扩展&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/addyosmani/basket.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;basket.js&lt;/a&gt;  a script and resource loader for caching and loading scripts using localStorage&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/imakewebthings/deck.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;deck.js&lt;/a&gt; 现代化 html 演示文稿&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/medialize/URI.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;URI.js&lt;/a&gt; url 处理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/defunkt/jquery-pjax.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jquery-pjax&lt;/a&gt; 局部刷新页面，同时修改 url&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/turbolinks.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;turbolinks&lt;/a&gt; 使加载的 web 的 links 可以缓存。代替让浏览器重新编译每个页面之间的JavaScript和CSS改变,它使当前页面的处于活跃着,只替换 body 和 title。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tnwinc/htmldiff.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;htmldiff.js&lt;/a&gt; HTML Diffing in JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HumbleSoftware/js-imagediff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;js-imagediff&lt;/a&gt; 比较两张图片的不相同地方。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/isaacs/minimatch.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimatch&lt;/a&gt; 小型的匹配器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dominictarr/adiff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;adiff&lt;/a&gt; 可以数组进行区别和修补操作&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/timsavery/node-diff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-diff&lt;/a&gt; 比较两个字符串的不同&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NV/objectDiff.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;objectDiff.js&lt;/a&gt; 判断两个对象的不同&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/austincheney/jsdifflib.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsdifflib&lt;/a&gt; 判断两个文本的不同，同时生成相应的HTML页面&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/benjamine/jsondiffpatch.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsondiffpatch&lt;/a&gt; 区别和修补 js 对象&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/austincheney/Pretty-Diff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pretty-Diff&lt;/a&gt; 比较代码的不同&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/difflet.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;difflet&lt;/a&gt; 比较js对象，展示丰富多彩的结果&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kpdecker/firediff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;firediff&lt;/a&gt; 追踪 DOM和CSS的改变&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kpdecker/jsdiff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsdiff&lt;/a&gt; 可以比较单词 字母 和行的不同&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JexCheng/regulex.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regulex&lt;/a&gt; JavaScript正则表达式可视化工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/javallone/regexper.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regexper&lt;/a&gt; JavaScript正则表达式可视化工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Node-类&quot;&gt;&lt;a href=&quot;#Node-类&quot; class=&quot;headerlink&quot; title=&quot;Node 类&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;Node 类&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tj/node-migrate.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-migrate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coolaj86/node-walk.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-walk&lt;/a&gt; 遍历文件夹 返回文件夹下文件的路径&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/libgit2/node-gitteh.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-gitteh&lt;/a&gt; 使用 github api 获取git repo 的数据&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodegit/nodegit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodegit&lt;/a&gt; 调用 git api&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/felixge/node-mysql.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-mysql&lt;/a&gt; 纯 js 实现的 mysql 客户端代理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/senchalabs/connect.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;connect&lt;/a&gt; 一个可以扩展的 HTTP 服务器框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cujojs/when.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;when&lt;/a&gt; node promise&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/caolan/async.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;async&lt;/a&gt; 异步处理工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/petkaantonov/bluebird.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluebird&lt;/a&gt; 创新的promise&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kriskowal/q.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;q&lt;/a&gt; js  promise&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/then/promise.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;promise&lt;/a&gt; 基础 promise 实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dtao/lazy.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lazy.js&lt;/a&gt;like underscore lodash&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/immutable-js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;immutable-js&lt;/a&gt; 不可变数据集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/remy/nodemon.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodemon&lt;/a&gt;  监听node工程下文件，当改动是重启服务器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-webot/wechat.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wechat&lt;/a&gt; 微信公共平台消息接口服务中间件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/pageres.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pageres&lt;/a&gt; 响应网站截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ncb000gt/node.bcrypt.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.bcrypt.js&lt;/a&gt; hash 加密密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Automattic/node-canvas.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-canvas&lt;/a&gt; 将图片转化成 base64. 可加水印，可验证码，可裁剪图片&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/duojs/duo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;duo&lt;/a&gt; 下一代包管理器，混合了 Component, Browserify and Go 。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/broofa/node-uuid.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-uuid&lt;/a&gt; Simple, fast generation of RFC4122 UUIDS.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rogerwang/node-webkit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-webkit&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;node-webkit是一个基于chromium和node.js实现的应用程序运行时环境，也即是说我们可以通过HTML，CSS，JavaScript实现一个本地化的应用程序。整个项目最具创意的部分就是将node.js整合进来，使得应用开发者能够直接在DOM里使用node.js模块，大大增强了Web端JavaScript的能力。该项目是由Intel开源项目中心开发与维护的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GitbookIO/gitbook.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gitbook&lt;/a&gt; 使用 git/github 和 markdown 来生产books&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mcavage/node-restify.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-restify&lt;/a&gt; resetful apis&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/node-browserify.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-browserify&lt;/a&gt; 将服务器的 node 包转化到浏览器也可以用&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mikeal/request.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;request&lt;/a&gt; http 请求客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejitsu/forever.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;forever&lt;/a&gt; node 进程出错终止后，可以自动启动&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-gh/gh.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gh&lt;/a&gt; 简化终端 git 命令&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/michael/github.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt; 一个小的更高层次的关于 github api 的封装&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shama/gaze.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gaze&lt;/a&gt; 用于监听文件变化&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/isaacs/minimatch.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimatch&lt;/a&gt; 用于RegExp路径的匹配&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cheeriojs/cheerio.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cheerio&lt;/a&gt; 服务器版的 jQuery&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Marak/faker.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;faker.js&lt;/a&gt; 生成大量的 fake 数据&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/felixge/node-form-data.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-form-data&lt;/a&gt; 上传文件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tj/dox.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dox&lt;/a&gt; js 文档生成器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JacksonTian/eventproxy.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eventproxy&lt;/a&gt; 事件代理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ciaranj/node-oauth.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-oauth&lt;/a&gt; 验证第三方&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unitech/PM2.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PM2&lt;/a&gt; 生成环境下 管理 node application&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/3rd-Eden/useragent.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;useragent&lt;/a&gt; high performance user agent parser for Node.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/biggora/express-useragent.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;express-useragent&lt;/a&gt; nodejs user-agent middleware&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tobie/ua-parser.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ua-parser&lt;/a&gt; A multi-language port of Browserscope’s user agent parser&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pa7/nude.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nude.js&lt;/a&gt; Nudity detection with JavaScript and HTMLCanvas&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-inspector/node-inspector.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-inspector&lt;/a&gt; Node.js debugger based on Blink Developer Tools&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jhnns/rewire.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rewire&lt;/a&gt; 单元测试时可以使用它来给 modules 添加 setter和getter 方法，达到 mock功能。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ConradIrwin/async-profile.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;async-profile&lt;/a&gt; 分析 node 应用所占用的 CPU&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gotwarlost/istanbul.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;istanbul&lt;/a&gt; 计算测试覆盖率&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tj/commander.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;commander.js&lt;/a&gt; node.js command-line interfaces made easy&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/visionmedia/debug.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;debug&lt;/a&gt; tiny node.js &amp;amp; browser debugging utility for your libraries and applications&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/harthur/nomnom.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nomnom&lt;/a&gt; Option parser for node with generated usage and commands&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/arturadib/shelljs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shelljs&lt;/a&gt; Portable Unix shell commands for Node.js&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Node-Web-框架&quot;&gt;&lt;a href=&quot;#Node-Web-框架&quot; class=&quot;headerlink&quot; title=&quot;Node Web 框架&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;Node Web 框架&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/balderdashy/sails.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sails&lt;/a&gt; node 实时 MVC框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jaredhanson/locomotive.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;locomotive&lt;/a&gt; MVC框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flatiron/flatiron.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flatiron&lt;/a&gt; nodejs和浏览器 框架组件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/techpines/express.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;express.io&lt;/a&gt; 实时 web 框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/socketstream/socketstream.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;socketstream&lt;/a&gt; 一个实时Web应用程序的框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geddy/geddy.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;geddy&lt;/a&gt; 一个简单的、结构化的web框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/totaljs/framework.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;total.js&lt;/a&gt; web应用程序框架,用于创建一个丰富的web网站和web服务。（有很多例子）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/koajs/koa.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;koa&lt;/a&gt; Express 原班人马打造的 koa，致力于成为一个更小、更健壮、更富有表现力的 Web 框架。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/krakenjs/kraken-js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kraken-js&lt;/a&gt; express 中间插件 控制安全 周期事件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/derbyjs/derby.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;derby&lt;/a&gt; MVC framework  run in both Node.js and browsers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/robrighter/node-boilerplate.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-boilerplate&lt;/a&gt; nodejs website with express and socket.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;HTML5-web-app-类&quot;&gt;&lt;a href=&quot;#HTML5-web-app-类&quot; class=&quot;headerlink&quot; title=&quot;HTML5 web app 类&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;HTML5 web app 类&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Modernizr/Modernizr.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Modernizr&lt;/a&gt;  一个用来检测浏览器功能支持情况的 JavaScript 库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前，通过检验浏览器对一系列测试的处理情况，Modernizr 可以检测18项 CSS3 功能以及40多项关于HTML5 的功能。 它比传统检测浏览器名称（浏览器嗅探）的方式更为可靠。 一整套测试的执行时间仅需几微秒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/brunch/brunch.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;brunch&lt;/a&gt; 一个超快的HTML5构建工具&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;编译你的脚本，模板，样式，链接它们，&lt;/li&gt;
&lt;li&gt;将脚本和模板封装进common.js/AMD模块里，链接脚本和样式，&lt;/li&gt;
&lt;li&gt;为链接文件生成源地图，复制资源和静态文件，&lt;/li&gt;
&lt;li&gt;通过缩减代码和优化图片来收缩输出，看管你的文件更改，&lt;/li&gt;
&lt;li&gt;并且通过控制台和系统提示通知你错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/montagejs/montage.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;montage&lt;/a&gt; 构建高可扩展性和可维护性的 HTML5 应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/driftyco/ionic.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ionic&lt;/a&gt; 手机端的框架，使用HTML5, CSS3(sass)和JavaScript(angular)做出原生应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/verekia/initializr.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;initializr&lt;/a&gt; HTML5 Boilerplate Custom Builder running on Google App Engine (Java)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sproutcore/sproutcore.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sproutcore&lt;/a&gt; JS-MVC framework for building blazing-fast, native-caliber web applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Angularjs-类&quot;&gt;&lt;a href=&quot;#Angularjs-类&quot; class=&quot;headerlink&quot; title=&quot;Angularjs 类&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;Angularjs 类&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/joshdmiller/angular-placeholders.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular-placeholders&lt;/a&gt; 图片和文字占位符&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/passy/angular-masonry.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular-masonry&lt;/a&gt; 瀑布流实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/akoenig/angular-deckgrid.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular-deckgrid&lt;/a&gt;轻量级的网格图片布局和瀑布流布局&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jmcunningham/AngularJS-Learning.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AngularJS-Learning&lt;/a&gt;   angularjs 学习资料库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sroze/ngInfiniteScroll.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ngInfiniteScroll&lt;/a&gt; angular 下拉加载更多&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kamilkp/angular-vs-repeat.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular-vs-repeat&lt;/a&gt; 替换 ng-repeat 减少 digest&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/davidchang/ngReact.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ngReact&lt;/a&gt; 替换 ng-repeat 提高 render 速度&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Pasvaz/bindonce.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bindonce&lt;/a&gt; 高性能 angular 数据绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;js-前端框架&quot;&gt;&lt;a href=&quot;#js-前端框架&quot; class=&quot;headerlink&quot; title=&quot;js 前端框架&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;js 前端框架&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jashkenas/backbone.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ember.js&lt;/a&gt; 是个js MVC开发框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/knockout/knockout.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;knockout&lt;/a&gt; 现代多样化的MVC framework&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;yeoman-generator&quot;&gt;&lt;a href=&quot;#yeoman-generator&quot; class=&quot;headerlink&quot; title=&quot;yeoman generator&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;yeoman generator&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeoman/generator-ember.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;generator-ember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeoman/generator-backbone.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;generator-backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jhipster/generator-jhipster.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;generator-jhipster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/diegonetto/generator-ionic.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;generator-ionic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;游戏引擎&quot;&gt;&lt;a href=&quot;#游戏引擎&quot; class=&quot;headerlink&quot; title=&quot;游戏引擎&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;游戏引擎&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoodBoyDigital/pixi.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pixi.js&lt;/a&gt; html5 2d 游戏引擎&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/photonstorm/phaser.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;phaser&lt;/a&gt; 2d 游戏框架可以让html5 游戏可以在浏览器 手机浏览器 支持 Canvas and WebGL 渲染。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NetEase/pomelo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pomelo&lt;/a&gt; 网易基于 Nodejs 的网络游戏后台&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;持续集成工具&quot;&gt;&lt;a href=&quot;#持续集成工具&quot; class=&quot;headerlink&quot; title=&quot;持续集成工具&quot;&gt;&lt;/a&gt;持续集成工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jenkinsci/jenkins.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jenkins&lt;/a&gt; java 持续集成&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gocd/gocd.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gocd&lt;/a&gt; go 持续集成&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MongoDB&quot;&gt;&lt;a href=&quot;#MongoDB&quot; class=&quot;headerlink&quot; title=&quot;MongoDB&quot;&gt;&lt;/a&gt;MongoDB&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mongodb/mongo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kissjs/node-mongoskin.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-mongoskin&lt;/a&gt; The promise wrapper for node-mongodb-native&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/edwardhotchkiss/mongoose-paginate.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongoose-paginate&lt;/a&gt; 数据分页&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hacksparrow/mongoose-pages.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongoose-pages&lt;/a&gt; 数据分页&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/florianholzapfel/express-restify-mongoose.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;express-restify-mongoose&lt;/a&gt; restful interface for mongoose database models&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mongodb/node-mongodb-native.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-mongodb-native&lt;/a&gt; Mongo DB Native NodeJS Driver&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;GUI&quot;&gt;&lt;a href=&quot;#GUI&quot; class=&quot;headerlink&quot; title=&quot;GUI&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;GUI&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/agirbal/umongo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;umongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hacksparrow/mongoose-pages.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;robomongod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bobthecow/genghis.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;genghis&lt;/a&gt; MongoDB admin app&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Driver&quot;&gt;&lt;a href=&quot;#Driver&quot; class=&quot;headerlink&quot; title=&quot;Driver&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;Driver&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mongodb/mongo-java-driver.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongo-java-driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mongodb/mongo-ruby-driver.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongo-ruby-driver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;测试类&quot;&gt;&lt;a href=&quot;#测试类&quot; class=&quot;headerlink&quot; title=&quot;测试类&quot;&gt;&lt;/a&gt;测试类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mhevery/jasmine-node.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jasmine-node&lt;/a&gt; node jasmine 集成测试&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flatiron/vows.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vows&lt;/a&gt; node BDD 异步测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/visionmedia/should.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;should.js&lt;/a&gt; node BDD 测试断言&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flatiron/api-easy.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;api-easy&lt;/a&gt; node 测试 RESTful API&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vlucas/frisby.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;frisby&lt;/a&gt; node api 测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chaijs/chai.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chai&lt;/a&gt; BDD / TDD assertion library for node and the browser that can be delightfully paired with any javascript testing framework.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/assaf/zombie.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zombie&lt;/a&gt; 模拟浏览器行为的测试&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/winsonwq/viff.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;viff&lt;/a&gt; 在不同的环境中找到网页视觉差异&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/karma-runner/karma.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;karma&lt;/a&gt; 壮观的JavaScript测试运行器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/philsquared/Catch.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Catch&lt;/a&gt; C++ 和 Obj-C自动化测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gh-unit/gh-unit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gh-unit&lt;/a&gt; object-c 测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kiwi-bdd/Kiwi.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kiwi&lt;/a&gt; BDD for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kif-framework/KIF.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KIF&lt;/a&gt; iOS 集成测试框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cucumber/cucumber.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cucumber&lt;/a&gt; BDD that talks to domain experts first and code second&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cucumber/cucumber-js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cucumber-js&lt;/a&gt; 纯 js 实现的 cucunber&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/larrymyers/jasmine-reporters.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jasmine-reporters&lt;/a&gt; custom jasmin reporters&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/velesin/jasmine-jquery.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jasmine-jquery&lt;/a&gt; 一组定制匹配器的jQuery框架, 处理HTML、CSS和JSON夹具在你的测试。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cjohansen/Sinon.JS.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sinon.JS&lt;/a&gt; 前端单元测试工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatling/gatling.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gatling&lt;/a&gt; 并发测试工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;包管理&quot;&gt;&lt;a href=&quot;#包管理&quot; class=&quot;headerlink&quot; title=&quot;包管理&quot;&gt;&lt;/a&gt;包管理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/creationix/nvm.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nvm&lt;/a&gt; node 和 iojs 版本管理工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/visionmedia/n.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;n&lt;/a&gt; node 版本管理工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CocoaPods/Specs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Specs&lt;/a&gt; ios 包管理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;homebrew&lt;/a&gt; mac 软件管理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wayneeseguin/rvm.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rvm&lt;/a&gt; ruby 版本管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Obj-C-类&quot;&gt;&lt;a href=&quot;#Obj-C-类&quot; class=&quot;headerlink&quot; title=&quot;Obj-C 类&quot;&gt;&lt;/a&gt;Obj-C 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TooTallNate/NodObjC.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NodObjC&lt;/a&gt; The Node.js ⇆ Objective-C bridge&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/robb/Underscore.m.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Underscore.m&lt;/a&gt; A DSL for Data Manipulation&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AFNetworking/AFNetworking.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AFNetworking&lt;/a&gt; iOS and OS X networking framework&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Grouper/FlatUIKit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FlatUIKit&lt;/a&gt; iOS UI 库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/objccn/articles.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;articles&lt;/a&gt; objc.io 技术进阶网站翻译&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BradLarson/GPUImage.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GPUImage&lt;/a&gt; GPU-based image and video processing&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/RestKit/RestKit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RestKit&lt;/a&gt; RestKit是一个Obj-C框架在iOS和Mac OS X实现RESTful风格的Web服务客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/facebook-ios-sdk.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;facebook-ios-sdk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mxcl/PromiseKit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PromiseKit&lt;/a&gt; Promises for iOS and OS X&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kevinzhow/PNChart.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PNChart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;CSS-类&quot;&gt;&lt;a href=&quot;#CSS-类&quot; class=&quot;headerlink&quot; title=&quot;CSS 类&quot;&gt;&lt;/a&gt;CSS 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Font-Awesome&lt;/a&gt;The iconic font and CSS toolkit&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zurb/foundation.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;foundation&lt;/a&gt;可自定义的前端框架,  移动终端优先的一个前端开发框架, 和 bootstrap 类似&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dhg/Skeleton.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Skeleton&lt;/a&gt;超小的CSS文件, 快速开发任何尺寸的网站, 无论是17寸的笔记本屏幕或者是iphone&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Semantic-Org/Semantic-UI.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Semantic-UI&lt;/a&gt;用自然语言使用惯例来组织使得开发过程更加的具有创新&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uikit/uikit.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;uikit&lt;/a&gt; 轻量级 模块化的 UI库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/viljamis/responsive-nav.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;responsive-nav.js&lt;/a&gt; 响应式导航栏&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/daneden/animate.css.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;animate.css&lt;/a&gt; 动画效果&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/daniel-lundin/snabbt.js.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;snabbt.js&lt;/a&gt; Fast animations with javascript and CSS transforms&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/allmobilize/amazeui.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;amazeui&lt;/a&gt; 跨屏前端框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/joshuaclayton/blueprint-css.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;blueprint-css&lt;/a&gt; A CSS framework that aims to cut down on your CSS development time&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GumbyFramework/Gumby.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gumby&lt;/a&gt; 灵活的， 响应式的 CSS 框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ericam/susy.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;susy&lt;/a&gt; 响应布局Sass的工具包&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yahoo/pure.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pure&lt;/a&gt; 一系列可以在任意 Web 使用的 小型的，响应式的 CSS 模块&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/groundworkcss/groundwork.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;groundwork&lt;/a&gt; Say hello to responsive design made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Semantic-Org/Semantic-UI.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Semantic-UI&lt;/a&gt; Semantic is a UI component framework based around useful principles from natural language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Ruby-On-Rails-类&quot;&gt;&lt;a href=&quot;#Ruby-On-Rails-类&quot; class=&quot;headerlink&quot; title=&quot;Ruby On Rails 类&quot;&gt;&lt;/a&gt;Ruby On Rails 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rails&lt;/a&gt; Ruby on Rails&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mongoid/mongoid.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongoid&lt;/a&gt; Ruby ODM framework for MongoDB&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sinatra/sinatra.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sinatra&lt;/a&gt; Classy web-development dressed in a DSL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JoeWoo/nlpir.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nlpir&lt;/a&gt; 中文分词&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/louismullie/treat.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;treat&lt;/a&gt; Natural language processing framework for Ruby.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;carrierwave&lt;/a&gt; rails 文件上传插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/paperclip.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;paperclip&lt;/a&gt; rails 文件上传插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phusion/passenger.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;passenger&lt;/a&gt;A fast and robust web server and application server for Ruby, Python and Node.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/guard/guard.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;guard&lt;/a&gt; 一个命令行工具可以轻松地处理文件系统的修改事件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/faye/faye.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;faye&lt;/a&gt; Simple pub/sub messaging for the web&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jch/html-pipeline.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;html-pipeline&lt;/a&gt; HTML processing filters and utilities&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Docker-类&quot;&gt;&lt;a href=&quot;#Docker-类&quot; class=&quot;headerlink&quot; title=&quot;Docker 类&quot;&gt;&lt;/a&gt;Docker 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/phusion/passenger-docker.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;passenger-docker&lt;/a&gt; A Docker base image for Ruby, Python, Node.js and Meteor web apps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eugeneware/docker-wordpress-nginx.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-wordpress-nginx&lt;/a&gt; A Dockerfile that installs the latest wordpress, nginx and php-fpm.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yahoojapan/docker-continuous-integration-workflow.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-continuous-integration-workflow&lt;/a&gt; 使用 docker 做持续集成&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rrader/docker-jenkins-slave.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-jenkins-slave&lt;/a&gt; jenkins-slave dockerfile 生成工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jwilder/nginx-proxy.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx-proxy&lt;/a&gt; Automated nginx proxy for Docker containers using docker-gen&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jpetazzo/nsenter.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nsenter&lt;/a&gt; 进入 docker container 工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zettio/weave.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;weave&lt;/a&gt; The Docker Network&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/docker/fig.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fig&lt;/a&gt; Fast, isolated development environments using Docker&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/cadvisor.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cadvisor&lt;/a&gt; cAdvisor (Container Advisor) provides container users an understanding of the resource usage and performance characteristics of their running containers.就是用于监测 docker 其他 containers 使用情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Go-类&quot;&gt;&lt;a href=&quot;#Go-类&quot; class=&quot;headerlink&quot; title=&quot;Go 类&quot;&gt;&lt;/a&gt;Go 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spf13/hugo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hugo&lt;/a&gt; A Fast and Flexible Static Site Generator built with love by spf13 in GoLang&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coreos/rocket.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rocket&lt;/a&gt; App Container runtime&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/go-martini/martini.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;martini&lt;/a&gt; Martini是一个强大为了编写模块化Web应用而生的GO语言框架.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/revel/revel.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;revel&lt;/a&gt; A high productivity, full-stack web framework for the Go language.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/astaxie/beego.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;beego&lt;/a&gt; 是一个快速开发 Go 应用的 HTTP 框架，他可以用来快速开发 API、Web 及后端服务等各种应用，是一个 RESTful 的框架，主要设计灵感来源于 tornado、sinatra 和 flask 这三个框架，但是结合了 Go 本身的一些特性（interface、struct 嵌入等）而设计的一个框架。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zenazn/goji.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;goji&lt;/a&gt; 小型 web 框架&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Java-类&quot;&gt;&lt;a href=&quot;#Java-类&quot; class=&quot;headerlink&quot; title=&quot;Java 类&quot;&gt;&lt;/a&gt;Java 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/playframework/playframework.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;playframework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alibaba/druid.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;druid&lt;/a&gt; Java语言中最好的数据库连接池&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dubbo&lt;/a&gt; 分布式服务架构&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alibaba/fastjson.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fastjson&lt;/a&gt; 是一个Java语言编写的高性能功能完善的JSON库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;open-source-project&quot;&gt;&lt;a href=&quot;#open-source-project&quot; class=&quot;headerlink&quot; title=&quot;open-source project&quot;&gt;&lt;/a&gt;open-source project&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spree/spree.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spree&lt;/a&gt; 基于Ruby on Rails的开源电子商务解决方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/diaspora/diaspora.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;diaspora&lt;/a&gt; 分布式社交网络开源项目 (rails&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spree/spree.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spree&lt;/a&gt; Spree is a complete open source e-commerce solution for Ruby on Rails.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TryGhost/Ghost.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghost&lt;/a&gt; blog 搭建平台&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/adobe/brackets.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;brackets&lt;/a&gt; adobe html css js code editor&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cnpm/cnpmjs.org.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cnpmjs.org&lt;/a&gt; cnpm&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular-app/angular-app.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;angular-app&lt;/a&gt; Reference application for AngularJS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gitlabhq/gitlabhq.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gitlabhq&lt;/a&gt; 类似于 github 代码合作开发&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/happypeter/happycasts.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;happycasts&lt;/a&gt; happycasts 网站 是一个视频网站，讲解 rails 和 web 开发等。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/assemblymade/coderwall.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coderwall&lt;/a&gt; Professional network for software engineers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ether/etherpad-lite.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;etherpad-lite&lt;/a&gt; 在线协同同时编辑器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;code-style&quot;&gt;&lt;a href=&quot;#code-style&quot; class=&quot;headerlink&quot; title=&quot;code style&quot;&gt;&lt;/a&gt;code style&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/felixge/node-style-guide.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-style-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bbatsov/ruby-style-guide.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ruby-style-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bbatsov/rails-style-guide.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rails-style-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;study-resouce&quot;&gt;&lt;a href=&quot;#study-resouce&quot; class=&quot;headerlink&quot; title=&quot;study-resouce&quot;&gt;&lt;/a&gt;study-resouce&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dominictarr/stream-spec.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es6features&lt;/a&gt; es6&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ruanyf/es6tutorial.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es6tutorial&lt;/a&gt; 全面介绍ECMAScript 6新增的语法特性。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JacksonTian/fks.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fks&lt;/a&gt; 前端技能汇总&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shichuan/javascript-patterns.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;javascript-patterns&lt;/a&gt; javascript 模式&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/darcyclarke/Front-end-Developer-Interview-Questions.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Front-end-Developer-Interview-Questions&lt;/a&gt; 前端工作面试问题&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/awesome-nodejs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;awesome-nodejs&lt;/a&gt; Node 包列表&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;You-Dont-Know-JS&lt;/a&gt; js book&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeasy/docker_practice.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker_practice&lt;/a&gt; docker 从入门到实践&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geekcompany/ResumeSample.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ResumeSample&lt;/a&gt; 程序员简历模板&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DeathKing/Learning-SICP.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Learning-SICP&lt;/a&gt; 《计算机程序的构造和解释》公开课中文化项目&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Aufree/trip-to-iOS.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;trip-to-iOS&lt;/a&gt; iOS 学习资料整理&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/awesome.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;awesome&lt;/a&gt; A curated list of awesome lists&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/huangz1990/SICP-answers.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SICP-answers&lt;/a&gt; SICP 解题集&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;其它&quot;&gt;&lt;a href=&quot;#其它&quot; class=&quot;headerlink&quot; title=&quot;其它&quot;&gt;&lt;/a&gt;其它&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gmarik/Vundle.vim.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vundle.vim&lt;/a&gt; vim plugin manager&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nbs-system/naxsi.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;naxsi&lt;/a&gt; nginx 安全维护库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oh-my-zh&lt;/a&gt;  管理Zsh&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dominictarr/JSON.sh.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSON.sh&lt;/a&gt; json shell parse&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zettio/weave.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;weave&lt;/a&gt; 创建一个虚拟网络连接 docker 容器跨多个主机部署。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alibaba/tengine.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tengine&lt;/a&gt; 基于 nginx 的 Web 服务器。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cloudwu/skynet.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;skynet&lt;/a&gt; 轻量级的为在线游戏服务器打造的框架。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Itseez/opencv.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;opencv&lt;/a&gt; 开源的计算机视觉库&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　这里记录的是笔者在 &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt;上 Star 的库，持续更新。&lt;/p&gt;
&lt;h2 id=&quot;JS-类&quot;&gt;&lt;a href=&quot;#JS-类&quot; class=&quot;headerlink&quot; title=&quot;JS 类&quot;&gt;&lt;/a&gt;JS 类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/getify/LABjs.git&quot;&gt;LABjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jrburke/requirejs.git&quot;&gt;requirejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/seajs/seajs.git&quot;&gt;seajs&lt;/a&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;LABjs 是一个文件加载器, 核心价值是性能优化&lt;/li&gt;
&lt;li&gt;RequireJS 和 SeaJS 则是模块加载器，倡导的是一种模块化开发理念，核心价值是        让 JavaScript 的模块化开发变得更简单自然。&lt;/li&gt;
&lt;li&gt;模块加载器一般可降级为文件加载器用，因此使用 RequireJS 和 SeaJS，也可以达        成 LABjs 的性能优化目的。&lt;/li&gt;
&lt;li&gt;RequireJS 遵循的是 AMD（异步模块定义）规范，SeaJS 遵循的是 CMD （通用模            块定义）规范。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://aikin.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Mongoose 之 Population</title>
    <link href="http://aikin.github.io/2014/11/02/mongoose-population/"/>
    <id>http://aikin.github.io/2014/11/02/mongoose-population/</id>
    <published>2014-11-02T13:30:17.000Z</published>
    <updated>2016-03-17T16:02:10.000Z</updated>
    
    <content type="html">&lt;p&gt;  &lt;a href=&quot;http://mongoosejs.com/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mongoose&lt;/a&gt; 是 &lt;a href=&quot;http://www.mongodb.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MongoDB&lt;/a&gt; 的 &lt;strong&gt;ODM(Object Document Mapper)&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/mongoose.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;什么是&lt;strong&gt;ODM&lt;/strong&gt;? 其实和&lt;strong&gt;ORM(Object Relational Mapper)&lt;/strong&gt;是同类型的工具。都是将数据库的数据转化为代码对象的库，使用转化后的对象可以直接对数据库的数据进行&lt;strong&gt;&lt;em&gt;CRUD(增删改查)&lt;/em&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MongoDB&lt;/code&gt; 是文档型数据库(Document Database)，不是关系型数据库(Relational Database)。而&lt;code&gt;Mongoose&lt;/code&gt;可以将 &lt;strong&gt;MongonDB&lt;/strong&gt; 数据库存储的文档(documents)转化为 javascript 对象，然后可以直接进行数据的增删改查。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;因为&lt;code&gt;MongoDB&lt;/code&gt;是文档型数据库，所以它没有关系型数据库&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E8%BF%9E%E6%8E%A5_(SQL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;joins&lt;/code&gt;&lt;/a&gt;(数据库的两张表通过”外键”，建立连接关系。) 特性。也就是在建立数据的关联时会比较麻烦。为了解决这个问题，&lt;code&gt;Mongoose&lt;/code&gt;封装了一个&lt;a href=&quot;http://mongoosejs.com/docs/populate.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Population&lt;/code&gt;&lt;/a&gt;功能。使用&lt;code&gt;Population&lt;/code&gt;可以实现在一个 &lt;strong&gt;document&lt;/strong&gt; 中填充其他 &lt;strong&gt;collection(s)&lt;/strong&gt;    的 &lt;strong&gt;document(s)&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在定义&lt;code&gt;Schema&lt;/code&gt;的时候，如果设置某个 field 关联另一个&lt;code&gt;Schema&lt;/code&gt;，那么在获取 document 的时候就可以使用 Population 功能通过关联&lt;code&gt;Schema&lt;/code&gt;的 field 找到关联的另一个 document，并且用被关联 document 的内容替换掉原来关联字段(field)的内容。&lt;/p&gt;
&lt;h2 id=&quot;接下来分享下-Query-populate-Model-populate-Document-populate的用法&quot;&gt;&lt;a href=&quot;#接下来分享下-Query-populate-Model-populate-Document-populate的用法&quot; class=&quot;headerlink&quot; title=&quot;接下来分享下:Query#populate Model#populate Document#populate的用法&quot;&gt;&lt;/a&gt;接下来分享下:&lt;code&gt;Query#populate&lt;/code&gt; &lt;code&gt;Model#populate&lt;/code&gt; &lt;code&gt;Document#populate&lt;/code&gt;的用法&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;先建立三个&lt;code&gt;Schema&lt;/code&gt;和&lt;code&gt;Model&lt;/code&gt;:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mongoose = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;mongoose&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Schema   = mongoose.Schema;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; UserSchema = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Schema(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name  : &amp;#123; type: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, unique: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    posts : [&amp;#123; type: Schema.Types.ObjectId, ref: &lt;span class=&quot;string&quot;&gt;&#39;Post&#39;&lt;/span&gt; &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; User = mongoose.model(&lt;span class=&quot;string&quot;&gt;&#39;User&#39;&lt;/span&gt;, UserSchema);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; PostSchema = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Schema(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poster   : &amp;#123; type: Schema.Types.ObjectId, ref: &lt;span class=&quot;string&quot;&gt;&#39;User&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    comments : [&amp;#123; type: Schema.Types.ObjectId, ref: &lt;span class=&quot;string&quot;&gt;&#39;Comment&#39;&lt;/span&gt; &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title    : &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content  : &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Post = mongoose.model(&lt;span class=&quot;string&quot;&gt;&#39;Post&#39;&lt;/span&gt;, PostSchema);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; CommentSchema = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Schema(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    post      : &amp;#123; type: Schema.Types.ObjectId, ref: &lt;span class=&quot;string&quot;&gt;&quot;Post&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commenter : &amp;#123; type: Schema.Types.ObjectId, ref: &lt;span class=&quot;string&quot;&gt;&#39;User&#39;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content   : &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Comment = mongoose.model(&lt;span class=&quot;string&quot;&gt;&#39;Comment&#39;&lt;/span&gt;, CommentSchema);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在上述的例子中，创建了三个 Models:&lt;code&gt;User&lt;/code&gt;，&lt;code&gt;Post&lt;/code&gt;，&lt;code&gt;Comment&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;User&lt;/code&gt; 的属性 &lt;strong&gt;&lt;em&gt;posts&lt;/em&gt;&lt;/strong&gt;，对应是一个 &lt;strong&gt;&lt;em&gt;ObjectId&lt;/em&gt;&lt;/strong&gt; 的数组。&lt;code&gt;ref&lt;/code&gt;表示关联&lt;code&gt;Post&lt;/code&gt;(注意: 被关联的&lt;strong&gt;&lt;em&gt;model&lt;/em&gt;&lt;/strong&gt;的 type 必须是 &lt;code&gt;ObjectId, Number, String, 和 Buffer&lt;/code&gt; 才有效)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Post&lt;/code&gt;的属性 &lt;strong&gt;&lt;em&gt;poster&lt;/em&gt;&lt;/strong&gt; 和 &lt;strong&gt;&lt;em&gt;comments&lt;/em&gt;&lt;/strong&gt; 分别关联&lt;code&gt;User&lt;/code&gt;和&lt;code&gt;Comment&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Comment&lt;/code&gt;的属性 &lt;strong&gt;&lt;em&gt;post&lt;/em&gt;&lt;/strong&gt; 和 &lt;strong&gt;&lt;em&gt;commenter&lt;/em&gt;&lt;/strong&gt; 分别关联&lt;code&gt;Post&lt;/code&gt;和&lt;code&gt;User&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;三个 Models 的关系:一个 user–&lt;strong&gt;has many&lt;/strong&gt;–&amp;gt;post。一个 post–&lt;strong&gt;has one&lt;/strong&gt;–&amp;gt;user，&lt;strong&gt;has many&lt;/strong&gt;–&amp;gt;comment。一个 comment–&lt;strong&gt;has one&lt;/strong&gt;–&amp;gt;post 和 user。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;创建一些数据到数据库:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 连接数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongoose.connect(&lt;span class=&quot;string&quot;&gt;&#39;mongodb://localhost/population-test&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createData&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; userIds    = [&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; postIds    = [&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; commentIds = [&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; users    = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; posts    = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; comments = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    users.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id   : userIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name  : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        posts : [postIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    users.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id   : userIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name  : &lt;span class=&quot;string&quot;&gt;&#39;luna&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        posts : [postIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    users.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id   : userIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name  : &lt;span class=&quot;string&quot;&gt;&#39;luajin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        posts : [postIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    posts.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id      : postIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title    : &lt;span class=&quot;string&quot;&gt;&#39;post-by-aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        poster   : userIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        comments : [commentIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    posts.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id      : postIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title    : &lt;span class=&quot;string&quot;&gt;&#39;post-by-luna&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        poster   : userIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        comments : [commentIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    posts.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id      : postIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title    : &lt;span class=&quot;string&quot;&gt;&#39;post-by-luajin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        poster   : userIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        comments : [commentIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    comments.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id       : commentIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content   : &lt;span class=&quot;string&quot;&gt;&#39;comment-by-luna&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        commenter : userIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        post      : postIds[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    comments.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id       : commentIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content   : &lt;span class=&quot;string&quot;&gt;&#39;comment-by-luajin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        commenter : userIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        post      : postIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    comments.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _id       : commentIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content   : &lt;span class=&quot;string&quot;&gt;&#39;comment-by-aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        commenter : userIds[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        post      : postIds[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    User.create(users, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, docs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Post.create(posts, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, docs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Comment.create(comments, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, docs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;数据的准备就绪后，接下来就是探索&lt;code&gt;populate&lt;/code&gt;方法:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-Query-populate&quot;&gt;&lt;a href=&quot;#1-Query-populate&quot; class=&quot;headerlink&quot; title=&quot;1. Query#populate&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-populate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1. Query#populate&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;什么Query? Query(查询)，可以快速和简单的从&lt;strong&gt;MongooDB&lt;/strong&gt;查找出相应的 document(s)。 Mongoose 封装了很多查询的方法，使得对数据库的操作变得简单啦。这里分享一下&lt;code&gt;populate&lt;/code&gt;方法用法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;Query.populate(path, [select], [model], [match], [options])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;path&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt;或&lt;code&gt;Object&lt;/code&gt;。&lt;br&gt;　　&lt;code&gt;String&lt;/code&gt;类型的时， 指定要填充的关联字段，要填充多个关联字段可以以空格分隔。&lt;br&gt;　　&lt;code&gt;Object&lt;/code&gt;类型的时，就是把 &lt;strong&gt;populate&lt;/strong&gt; 的参数封装到一个对象里。当然也可以是个数组。下面的例子中将会实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;select&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;或&lt;code&gt;String&lt;/code&gt;，可选，指定填充 document 中的哪些字段。&lt;br&gt;　　&lt;code&gt;Object&lt;/code&gt;类型的时，格式如:&lt;code&gt;{name: 1, _id: 0}&lt;/code&gt;,为&lt;strong&gt;0&lt;/strong&gt;表示不填充，为&lt;strong&gt;1&lt;/strong&gt;时表示填充。&lt;br&gt;　　&lt;code&gt;String&lt;/code&gt;类型的时，格式如:&lt;code&gt;&amp;quot;name -_id&amp;quot;&lt;/code&gt;，用空格分隔字段，在字段名前加上&lt;code&gt;-&lt;/code&gt;表示不填充。详细语法介绍 &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-select&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;query-select&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;model&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Model&lt;/code&gt;，可选，指定关联字段的 model，如果没有指定就会使用&lt;code&gt;Schema&lt;/code&gt;的&lt;code&gt;ref&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;match&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;，可选，指定附加的查询条件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;，可选，指定附加的其他查询选项，如排序以及条数限制等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;填充User的posts字段&quot;&gt;&lt;a href=&quot;#填充User的posts字段&quot; class=&quot;headerlink&quot; title=&quot;填充User的posts字段:&quot;&gt;&lt;/a&gt;&lt;strong&gt;填充&lt;code&gt;User&lt;/code&gt;的&lt;code&gt;posts&lt;/code&gt;字段:&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//填充所有 users 的 posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User.find()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate(&lt;span class=&quot;string&quot;&gt;&#39;posts&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &amp;#123;sort: &amp;#123; title: &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; &amp;#125;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, docs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(docs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].posts[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].title); &lt;span class=&quot;comment&quot;&gt;// post-by-aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//填充 user &#39;luajin&#39;的 posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User.findOne(&amp;#123;name: &lt;span class=&quot;string&quot;&gt;&#39;luajin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate(&amp;#123;path: &lt;span class=&quot;string&quot;&gt;&#39;posts&#39;&lt;/span&gt;, select: &amp;#123; title: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;, options: &amp;#123;sort: &amp;#123; title: &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; &amp;#125;&amp;#125;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.posts[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].title);  &lt;span class=&quot;comment&quot;&gt;// post-by-luajin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里的 populate 方法传入的参数形式不同，其实实现的功能是一样的，只是表示形式不一样。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;填充Post的poster和comments字段&quot;&gt;&lt;a href=&quot;#填充Post的poster和comments字段&quot; class=&quot;headerlink&quot; title=&quot;填充Post的poster和comments字段:&quot;&gt;&lt;/a&gt;&lt;strong&gt;填充&lt;code&gt;Post&lt;/code&gt;的&lt;code&gt;poster&lt;/code&gt;和&lt;code&gt;comments&lt;/code&gt;字段:&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Post.findOne(&amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;post-by-aikin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate(&lt;span class=&quot;string&quot;&gt;&#39;poster comments&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-_id&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster.name);           &lt;span class=&quot;comment&quot;&gt;// aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster._id);            &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].content);  &lt;span class=&quot;comment&quot;&gt;// comment-by-luna&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]._id);      &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Post.findOne(&amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;post-by-aikin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate(&amp;#123;path: &lt;span class=&quot;string&quot;&gt;&#39;poster comments&#39;&lt;/span&gt;, select: &lt;span class=&quot;string&quot;&gt;&#39;-_id&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster.name);           &lt;span class=&quot;comment&quot;&gt;// aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster._id);            &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].content);  &lt;span class=&quot;comment&quot;&gt;// comment-by-luna&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]._id);      &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上两种填充的方式实现的功能是一样的。就是给 populate 方法的参数不同。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里要注意，当两个关联的字段同时在一个 path 里面时， select 必须是 document(s)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//具有的相同字段。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//如果想要给单个关联的字段指定 select，可以传入数组的参数。如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Post.findOne(&amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;post-by-aikin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate([&lt;span class=&quot;string&quot;&gt;&#39;poster&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;comments&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster.name);          &lt;span class=&quot;comment&quot;&gt;// aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].content);  &lt;span class=&quot;comment&quot;&gt;// comment-by-luna&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Post.findOne(&amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;post-by-aikin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;path:&lt;span class=&quot;string&quot;&gt;&#39;poster&#39;&lt;/span&gt;,   select: &lt;span class=&quot;string&quot;&gt;&#39;-_id&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;path:&lt;span class=&quot;string&quot;&gt;&#39;comments&#39;&lt;/span&gt;, select: &lt;span class=&quot;string&quot;&gt;&#39;-content&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster.name);          &lt;span class=&quot;comment&quot;&gt;// aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.poster._id);           &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]._id);      &lt;span class=&quot;comment&quot;&gt;// 会打印出对应的 comment id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(doc.comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].content);  &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-Model-populate&quot;&gt;&lt;a href=&quot;#2-Model-populate&quot; class=&quot;headerlink&quot; title=&quot;2. Model#populate&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://mongoosejs.com/docs/api.html#model_Model.populate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2. Model#populate&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Model(模型)，是根据定义的 Schema 编译成的抽象的构造函数。models 的实例 documents，可以在数据库中被保存和检索。数据库所有 document 的创建和检索，都通过 models 处理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;Model.populate(docs, options, [cb(err,doc)])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Document&lt;/code&gt;或&lt;code&gt;Array&lt;/code&gt;。单个需要被填充的 doucment 或者 document 的数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;。以键值对的形式表示。&lt;br&gt;　　keys：&lt;code&gt;path&lt;/code&gt; &lt;code&gt;select&lt;/code&gt; &lt;code&gt;match&lt;/code&gt; &lt;code&gt;model&lt;/code&gt; &lt;code&gt;options&lt;/code&gt;，这些键对应值的类型和功能，与上述&lt;code&gt;Query#populate&lt;/code&gt;方法的参数相同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;[cb(err,doc)]&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Function&lt;/code&gt;，回调函数，接收两个参数，错误&lt;code&gt;err&lt;/code&gt;和填充完的&lt;code&gt;doc(s)&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;填充Post的poster和comments字段以及comments的commenter字段&quot;&gt;&lt;a href=&quot;#填充Post的poster和comments字段以及comments的commenter字段&quot; class=&quot;headerlink&quot; title=&quot;填充Post的poster和comments字段以及comments的commenter字段:&quot;&gt;&lt;/a&gt;&lt;strong&gt;填充&lt;code&gt;Post&lt;/code&gt;的&lt;code&gt;poster&lt;/code&gt;和&lt;code&gt;comments&lt;/code&gt;字段以及&lt;code&gt;comments&lt;/code&gt;的&lt;code&gt;commenter&lt;/code&gt;字段:&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Post.find(&amp;#123;title: &lt;span class=&quot;string&quot;&gt;&#39;post-by-aikin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .populate(&lt;span class=&quot;string&quot;&gt;&#39;poster comments&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, docs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; opts = [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path   : &lt;span class=&quot;string&quot;&gt;&#39;comments.commenter&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            select : &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            model  : &lt;span class=&quot;string&quot;&gt;&#39;User&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Post.populate(docs, opts, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, populatedDocs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(populatedDocs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].poster.name);                  &lt;span class=&quot;comment&quot;&gt;// aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(populatedDocs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].comments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].commenter.name);  &lt;span class=&quot;comment&quot;&gt;// luna&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-Document-populate&quot;&gt;&lt;a href=&quot;#3-Document-populate&quot; class=&quot;headerlink&quot; title=&quot;3. Document#populate&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://mongoosejs.com/docs/api.html#document_Document-populate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3. Document#populate&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Document，每个 document 都是其 Model 的一个实例，一对一的映射着 MongoDB 的 document。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;Document.populate([path], [callback])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;path&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt;或&lt;code&gt;Object。与上述&lt;/code&gt;Query#populate`方法的 &lt;strong&gt;path&lt;/strong&gt; 参数相同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;callback&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Function&lt;/code&gt;。回调函数，接收两个参数，错误&lt;code&gt;err&lt;/code&gt;和填充完的&lt;code&gt;doc(s)&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;填充User的posts字段-1&quot;&gt;&lt;a href=&quot;#填充User的posts字段-1&quot; class=&quot;headerlink&quot; title=&quot;填充User的posts字段:&quot;&gt;&lt;/a&gt;&lt;strong&gt;填充&lt;code&gt;User&lt;/code&gt;的&lt;code&gt;posts&lt;/code&gt;字段:&lt;/strong&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;User.findOne(&amp;#123;name: &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .exec(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; opts = [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path   : &lt;span class=&quot;string&quot;&gt;&#39;posts&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            select : &lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        doc.populate(opts, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, populatedDoc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(populatedDoc.posts[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].title);  &lt;span class=&quot;comment&quot;&gt;// post-by-aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;博文涉及的完整例子在 &lt;a href=&quot;https://gist.github.com/aikin/534fae3c95039b7dee09&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gist&lt;/a&gt; 上。(ps: 貌似 gist 今天被墙了。)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;##参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mongoosejs.com/docs/populate.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mongoose-api-docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/07/database_implementation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据库的最简单实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://my.oschina.net/calvinchen/blog/137932&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mongoose 使用之 Population&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;  &lt;a href=&quot;http://mongoosejs.com/index.html&quot;&gt;Mongoose&lt;/a&gt; 是 &lt;a href=&quot;http://www.mongodb.org/&quot;&gt;MongoDB&lt;/a&gt; 的 &lt;strong&gt;ODM(Object Document Mapper)&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;/images/mongoose.png&#39; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;什么是&lt;strong&gt;ODM&lt;/strong&gt;? 其实和&lt;strong&gt;ORM(Object Relational Mapper)&lt;/strong&gt;是同类型的工具。都是将数据库的数据转化为代码对象的库，使用转化后的对象可以直接对数据库的数据进行&lt;strong&gt;&lt;em&gt;CRUD(增删改查)&lt;/em&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MongoDB&lt;/code&gt; 是文档型数据库(Document Database)，不是关系型数据库(Relational Database)。而&lt;code&gt;Mongoose&lt;/code&gt;可以将 &lt;strong&gt;MongonDB&lt;/strong&gt; 数据库存储的文档(documents)转化为 javascript 对象，然后可以直接进行数据的增删改查。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="mongoose" scheme="http://aikin.github.io/tags/mongoose/"/>
    
      <category term="nodejs" scheme="http://aikin.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Gulp API 初探和 gulp-nodemon gulp-livereload 配置</title>
    <link href="http://aikin.github.io/2014/10/24/gulp-nodemon-livereload/"/>
    <id>http://aikin.github.io/2014/10/24/gulp-nodemon-livereload/</id>
    <published>2014-10-24T13:08:09.000Z</published>
    <updated>2016-03-17T14:47:08.000Z</updated>
    
    <content type="html">&lt;p&gt;　　&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp&lt;/a&gt;，是一个自动化任务运行工具(就是让一些如: 图片压缩，js合并，Sass 编译成 CSS，测试，重启服务器等操作，能自动运行的工具。)，和 &lt;a href=&quot;http://gruntjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grunt&lt;/a&gt; 是同一类型的工具。&lt;br&gt;　　表示之前没有配置过这两类的工具，只是简单的了解过。最近刚好要用到，就在各种 google 了，发现现在使用最广泛的就是 Grunt，中文的学习资料和相应的任务插件也很多。而 Gulp 貌似最近才火起来的吧，第三方插件没有 Grunt 那么多。但是个人对 Gulp 第一印象比较好，感觉写起来更加方便，更有 DSL 感觉。&lt;/p&gt;
&lt;div style=&quot;width: 20%; margin-left: auto; margin-right:auto&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/gulp-2x.png&quot;&gt;&lt;/div&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;gulp-一些-API-的语法&quot;&gt;&lt;a href=&quot;#gulp-一些-API-的语法&quot; class=&quot;headerlink&quot; title=&quot; gulp 一些 API 的语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt; gulp 一些 API 的语法&lt;/em&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;gulp-task-gulp-src-gulp-dest-gulp-watch&quot;&gt;&lt;a href=&quot;#gulp-task-gulp-src-gulp-dest-gulp-watch&quot; class=&quot;headerlink&quot; title=&quot;gulp.task()　gulp.src()　gulp.dest()　gulp.watch()&quot;&gt;&lt;/a&gt;&lt;code&gt;gulp.task()&lt;/code&gt;　&lt;code&gt;gulp.src()&lt;/code&gt;　&lt;code&gt;gulp.dest()&lt;/code&gt;　&lt;code&gt;gulp.watch()&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;下面是 &lt;a href=&quot;https://github.com/dlmanning/gulp-sass.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-sass&lt;/a&gt;(用于将 scss 编译成 css 的插件) 插件的例子:&lt;br&gt;&lt;strong&gt;eg-1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sass = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-sass&#39;&lt;/span&gt;)；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;sass&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./scss/*.scss&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(sass())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./css&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.watch(&lt;span class=&quot;string&quot;&gt;&#39;./scss/*.scss&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;sass&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. &lt;code&gt;task&lt;/code&gt;方法是&lt;code&gt;gulp&lt;/code&gt;用于定义一个具体任务的方法。如果需要执行任务，在终端执行&lt;code&gt;gulp task-name&lt;/code&gt;。&lt;br&gt;　&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulptaskname-deps-fn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;task&lt;/code&gt;&lt;/a&gt; 方法的语法如:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;gulp.task(name[, deps], fn)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt;， 指任务名，就像上述的&lt;strong&gt;&lt;code&gt;eg-1&lt;/code&gt;&lt;/strong&gt;例子的&lt;code&gt;sass&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;deps&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Array&lt;/code&gt;，指在跑当前任务时，对其它任务的依赖。也就是要执行当前任务，会先执行这些依赖的任务。如: &lt;code&gt;gulp.task(&amp;#39;demo&amp;#39;, [&amp;#39;demo1&amp;#39;, &amp;#39;demo2&amp;#39;], function(){ });&lt;/code&gt;会先同时执行任务&lt;code&gt;&amp;#39;demo1&amp;#39;, &amp;#39;demo2&amp;#39;&lt;/code&gt;，最后执行任务&lt;code&gt;&amp;#39;demo&amp;#39;&lt;/code&gt;。&lt;br&gt;&lt;strong&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;function&lt;/code&gt;，指运行任务时，要执行的具体操作的内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2. &lt;code&gt;src&lt;/code&gt;方法是指定源文件的输入路径，&lt;code&gt;pipe&lt;/code&gt;有点像是封闭的“流水线”，某个产品经过上一个工序处理后，就转入下一个工序去处理，直到完成。也就是将上一步的输出转化下一步的输入的中间者。&lt;br&gt;　&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpsrcglobs-options&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/a&gt; 方法的语法如:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;gulp.src(globs[, options])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;globs&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt;，指定源文件的路径，可以是单个路径，也可以是个路径数组。&lt;br&gt;　　路径匹配支持通配符：&lt;br&gt;　　　　1. &lt;code&gt;app.js&lt;/code&gt;　　　　指定具体文件&lt;br&gt;　　　　2. &lt;code&gt;js/*&lt;/code&gt;　　　　　匹配 js 目录下所有的文件，不包括子文件夹&lt;br&gt;　　　　3. &lt;code&gt;js/*.js&lt;/code&gt;　　　 匹配 js 目录下所有的扩展名为 .js 的文件，不包括子文件夹&lt;br&gt;　　　　4. &lt;code&gt;js/*/*.js&lt;/code&gt;　　匹配 js 目录下第一层子文件夹里的扩展名为 .js 的文件&lt;br&gt;　　　　5. &lt;code&gt;js/**/*.js&lt;/code&gt;　 匹配 js 目录下所有文件夹层次下扩展名为 .js 的文件&lt;br&gt;　　　　6. &lt;code&gt;!js/try.js&lt;/code&gt;　 不包括 try.js 文件，在前五条文件匹配模式前加&lt;code&gt;!&lt;/code&gt;，就忽略掉相应的文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;，有3个属性&lt;code&gt;buffer&lt;/code&gt;，&lt;code&gt;read&lt;/code&gt;，&lt;code&gt;base&lt;/code&gt;。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;options.butter&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Boolean&lt;/code&gt;，默认：&lt;code&gt;true&lt;/code&gt;&lt;br&gt;　　　　&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#optionsbuffer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-api&lt;/a&gt; 上描述到，如设置为&lt;code&gt;false&lt;/code&gt;，返回的文件内容将会以数据流的形式体现，而不是数据&lt;br&gt;　　　　块的形式。还提示到有可能一些插件没有实现支持数据流的形式。&lt;br&gt;　　　　(表示不太明白，有待研究。-_-|||)&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;options.read&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Boolean&lt;/code&gt;，默认：&lt;code&gt;true&lt;/code&gt;&lt;br&gt;　　　　返回的文件内容为&lt;code&gt;null&lt;/code&gt;，不执行读取文件操作。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;options.base&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;String&lt;/code&gt;&lt;br&gt;　　　　设置输出路径以某个路径的某个组成部分为基础向后拼接。具体例子可以参考 &lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#optionsbase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-api&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;3. &lt;code&gt;dest&lt;/code&gt;方法是指定被处理完的文件的输出路径，就像&lt;code&gt;eg-1&lt;/code&gt;例子里的&lt;code&gt;gulp.dest(&amp;#39;./css&amp;#39;)&lt;/code&gt;意思就是将编译完成的 css 文件保存到 &lt;code&gt;/css&lt;/code&gt;目录中。&lt;br&gt;　&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpdestpath-options&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;dest&lt;/code&gt;&lt;/a&gt; 方法的语法如:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;gulp.dest(path[, options])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;path&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Function&lt;/code&gt;，指定输出文件的文件夹路径，可以是字符串，也可以是一个返回文件夹路径的函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;，有2个属性&lt;code&gt;cwd&lt;/code&gt;，&lt;code&gt;mode&lt;/code&gt;。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;options.cwd&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;String&lt;/code&gt;，默认：&lt;code&gt;process.cwd()&lt;/code&gt;&lt;br&gt;　　　　 设置输出文件夹路径的相对路径，默认为当前脚本的工作目录的路径。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;options.mode&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;String&lt;/code&gt;，默认：&lt;code&gt;0777&lt;/code&gt;&lt;br&gt;　　　　设置被创建文件夹的权限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4. &lt;code&gt;watch&lt;/code&gt;方法是用于监听文件变化，文件一修改就会执行指定的任务。在&lt;code&gt;eg-1&lt;/code&gt;例子中，通过监听&lt;code&gt;&amp;#39;./scss/*.scss&amp;#39;&lt;/code&gt;文件，一旦文件发生修改就会执行任务&lt;code&gt;sass&lt;/code&gt;。&lt;br&gt;　&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpwatchglob--opts-tasks-or-gulpwatchglob--opts-cb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;watch&lt;/code&gt;&lt;/a&gt; 方法的语法如:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;gulp.watch(glob [, opts], tasks) or gulp.watch(glob [, opts, cb])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt;，指定源文件的路径，可以是单个路径，也可以是个路径数组。路径匹配和上述&lt;code&gt;gulp.src()&lt;/code&gt;方法路径匹配的模式一样。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;opts&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Object&lt;/code&gt;，有4个属性&lt;code&gt;interval&lt;/code&gt;，&lt;code&gt;debounceDelay&lt;/code&gt;，&lt;code&gt;mode&lt;/code&gt;，&lt;code&gt;cwd&lt;/code&gt;。&lt;br&gt;　　具体可以参考&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md#opts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-api&lt;/a&gt;这里就不一一介绍了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;tasks&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Array&lt;/code&gt;，监听到文件变化后，要被执行的任务的名字组成的数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;cb(event)&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Function&lt;/code&gt;，监听到变化后，回调的函数。会传递出一个对象类型的&lt;code&gt;event&lt;/code&gt;参数。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.type&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;String&lt;/code&gt;，表示操作的类型：added, changed or deleted&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.path&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;String&lt;/code&gt;，被修改文件的路径。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;gulp-nodemon-和-gulp-livereload-配置：&quot;&gt;&lt;a href=&quot;#gulp-nodemon-和-gulp-livereload-配置：&quot; class=&quot;headerlink&quot; title=&quot; gulp-nodemon 和 gulp-livereload 配置：&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt; gulp-nodemon 和 gulp-livereload 配置：&lt;/em&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;gulp安装&quot;&gt;&lt;a href=&quot;#gulp安装&quot; class=&quot;headerlink&quot; title=&quot;gulp安装&quot;&gt;&lt;/a&gt;&lt;code&gt;gulp&lt;/code&gt;安装&lt;/h2&gt;&lt;p&gt;全局安装:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g gulp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装在项目开发环境:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install gulp --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;gulp-nodemon和gulp-livereload安装&quot;&gt;&lt;a href=&quot;#gulp-nodemon和gulp-livereload安装&quot; class=&quot;headerlink&quot; title=&quot;gulp-nodemon和gulp-livereload安装&quot;&gt;&lt;/a&gt;&lt;code&gt;gulp-nodemon&lt;/code&gt;和&lt;code&gt;gulp-livereload&lt;/code&gt;安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JacksonGariety/gulp-nodemon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-nodemon&lt;/a&gt; 是重启服务器的插件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vohof/gulp-livereload.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-livereload&lt;/a&gt; 后端控制前端同步刷新，不过需要依赖 chrome 插件 LiveReload&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install gulp-nodemon gulp-livereload --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了能让服务器可以控制 chrome 自动刷新，需要安装 &lt;a href=&quot;https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LiveReload&lt;/a&gt; 插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/livereload.png&quot; style=&quot;height=200px&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;gulpfile-js配置&quot;&gt;&lt;a href=&quot;#gulpfile-js配置&quot; class=&quot;headerlink&quot; title=&quot;gulpfile.js配置&quot;&gt;&lt;/a&gt;&lt;code&gt;gulpfile.js&lt;/code&gt;配置&lt;/h2&gt;&lt;p&gt;在工程的目录下，新建 gulpfile.js 文件。如下简单的配置:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//引入 gulp 和 nodemon livereload 插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp       = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; nodemon    = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-nodemon&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; livereload = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-livereload&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 一些文件的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; paths = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;client/javascripts/**/*.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;client/stylesheets/**/*.css&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index: &lt;span class=&quot;string&quot;&gt;&#39;app.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// nodemon 的配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; nodemonConfig = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    script : paths.server.index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ignore : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;tmp/**&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;public/**&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;views/**&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env    : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;NODE_ENV&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用 nodemone 跑起服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;serve&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;livereload&#39;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nodemon(nodemonConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 当客户端被监听的文件改变时，刷新浏览器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;livereload&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    livereload.listen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; server = livereload();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.watch(paths.client, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server.changed(event.path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// develop 任务， 同时开启 serve、livereload 任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;develop&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;serve&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;livereload&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里只是写了一些，我在体验&lt;code&gt;gulp&lt;/code&gt;时，总结的一些东西(方便自己记忆^_^)。如果需要更详细的介绍可以看我参考的那些链接。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;gulp, 你是那么美。。。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gulpjs/gulp/blob/master/docs/API.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-api-docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://segmentfault.com/blog/laopopo/1190000000372547&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;前端构建工具gulp入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.html-js.com/article/2083&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp构建进阶&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dbpoo.com/getting-started-with-gulp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp安装及配合组件构建前端开发一体化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://javascript.ruanyifeng.com/tool/gulp.html#toc2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp：任务自动管理工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;，是一个自动化任务运行工具(就是让一些如: 图片压缩，js合并，Sass 编译成 CSS，测试，重启服务器等操作，能自动运行的工具。)，和 &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; 是同一类型的工具。&lt;br&gt;　　表示之前没有配置过这两类的工具，只是简单的了解过。最近刚好要用到，就在各种 google 了，发现现在使用最广泛的就是 Grunt，中文的学习资料和相应的任务插件也很多。而 Gulp 貌似最近才火起来的吧，第三方插件没有 Grunt 那么多。但是个人对 Gulp 第一印象比较好，感觉写起来更加方便，更有 DSL 感觉。&lt;/p&gt;
&lt;div style=&quot;width: 20%; margin-left: auto; margin-right:auto&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/gulp-2x.png&quot; /&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="gulp" scheme="http://aikin.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>ipad 添加 QQ 邮件账户</title>
    <link href="http://aikin.github.io/2014/10/04/add-qq-mail-into-ipad-air/"/>
    <id>http://aikin.github.io/2014/10/04/add-qq-mail-into-ipad-air/</id>
    <published>2014-10-04T10:05:39.000Z</published>
    <updated>2016-03-17T14:47:06.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;首先要先确定 QQ 邮箱有没有开启 POP3/SMTP服务 和 IMAP/SMTP服务。&lt;ul&gt;
&lt;li&gt;登录 QQ 邮箱，依次点击‘设置’ -&amp;gt; ‘账户’。&lt;/li&gt;
&lt;li&gt;然后找到 &lt;code&gt;POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务&lt;/code&gt;，开启&lt;code&gt;POP3/SMTP服务&lt;/code&gt;和&lt;code&gt;IMAP/SMTP服务&lt;/code&gt;，保存更改。&lt;br&gt;&lt;img src=&quot;http://aikin-blog-images.qiniudn.com/qq-mail-confing.png&quot; alt=&quot;mail-config&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;接下来就是在 ipad 上添加邮箱账户。&lt;ul&gt;
&lt;li&gt;打开 ipad 的‘设置’ -&amp;gt; ‘邮件、通讯录、日历’，然后依次点击‘添加账户’ -&amp;gt; ‘其他’       -&amp;gt; ‘添加邮件账户’。&lt;br&gt; &lt;img width=&quot;400px&quot; src=&quot;http://aikin-blog-images.qiniudn.com/create-qq-mail.jpg&quot;&gt;&lt;/li&gt;
&lt;li&gt;依次填入名称、电子邮箱、密码、描述。其中名称和描述可以随便写。填入完成后，然后点击     下一步。&lt;/li&gt;
&lt;li&gt;接下来需要填写，收件服务器和发件服务器的主机名。分别填入收件服务器主机名:             &lt;code&gt;imap.qq.com&lt;/code&gt;，发件服务器主机名: &lt;code&gt;smtp.qq.com&lt;/code&gt;，点击下一步。 如图:&lt;br&gt; &lt;img width=&quot;400px&quot; src=&quot;http://aikin-blog-images.qiniudn.com/qq-mail-last-config.jpg&quot;&gt;&lt;/li&gt;
&lt;li&gt;如果操作无误的话将会出现选项是否存储，点击存储后，QQ 邮箱就可以在 ipad 的邮件     app 中找到。&lt;br&gt;&lt;img width=&quot;400px&quot; src=&quot;http://aikin-blog-images.qiniudn.com/qq-mail-save.jpg&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;首先要先确定 QQ 邮箱有没有开启 POP3/SMTP服务 和 IMAP/SMTP服务。&lt;ul&gt;
&lt;li&gt;登录 QQ 邮箱，依次点击‘设置’ -&amp;gt; ‘账户’。&lt;/li&gt;
&lt;li&gt;然后找到 &lt;code&gt;POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务&lt;/code&gt;，开启&lt;code&gt;POP3/SMTP服务&lt;/code&gt;和&lt;code&gt;IMAP/SMTP服务&lt;/code&gt;，保存更改。&lt;br&gt;&lt;img src=&quot;http://aikin-blog-images.qiniudn.com/qq-mail-confing.png&quot; alt=&quot;mail-config&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://aikin.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>AngularJS 事件</title>
    <link href="http://aikin.github.io/2014/09/26/angular-events/"/>
    <id>http://aikin.github.io/2014/09/26/angular-events/</id>
    <published>2014-09-26T11:30:23.000Z</published>
    <updated>2016-03-17T14:47:06.000Z</updated>
    
    <content type="html">&lt;p&gt;　　AngularJS 事件系统并不与浏览器的事件系统相通，这意味着，我们只能在作用域上监听 AngularJS 事件而不是 DOM 事件。由于作用域是有层次的(既是继承关系)，所以可以在作用域链上传递事件。在传递事件前，需要先了解触发事件的作用域和处理事件的作用域的关系，这样我们才可以判断事件是向上传递还是向下广播。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;a-事件如何传播&quot;&gt;&lt;a href=&quot;#a-事件如何传播&quot; class=&quot;headerlink&quot; title=&quot;a. 事件如何传播&quot;&gt;&lt;/a&gt;a. 事件如何传播&lt;/h2&gt;&lt;p&gt;　　什么时候需要向上传递事件？当处理事件的作用域为触发事件的作用域的父级作用域时，就需要将事件向上传递。同理，当处理事件的作用域为触发事件的作用域的子级作用域时，就需要将事件向下传递。&lt;br&gt;&lt;strong&gt; 1. 使用&lt;code&gt;$emit&lt;/code&gt;向上传递事件 &lt;/strong&gt;&lt;br&gt;　　使用&lt;code&gt;$emit&lt;/code&gt;将事件沿着作用域链向上传递，即从子作用域到父作用域。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;scope.$emit(name, args)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt;，要触发事件的名称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;args&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　参数集合，可以是一个也可以是多个，作为对象传递到事件监听者中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;eg-1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$scope.$emit(&amp;apos;just-test-emit&amp;apos;, [&amp;apos;first&amp;apos;], [&amp;apos;second&amp;apos;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;eg-1&lt;/strong&gt;中，&lt;code&gt;just-test-emit&lt;/code&gt;为事件名称，而&lt;code&gt;[first]&lt;/code&gt; 和&lt;code&gt;[second]&lt;/code&gt;为传递到事件监听者中的参数。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;$emit()&lt;/code&gt;事件函数调用后，事件会从子作用域冒泡到父作用域。在触发事件的作用域之上的所有作用域都会收到这个事件的通知。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 2. 使用&lt;code&gt;$broadcast&lt;/code&gt;向下广播事件 &lt;/strong&gt;&lt;br&gt;　　&lt;code&gt;$broadcast&lt;/code&gt;和&lt;code&gt;$emit&lt;/code&gt;用法很类似，只是&lt;code&gt;$broadcast&lt;/code&gt;是将事件沿着作用域向下传递，即从父作用域到子作用域。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;scope.$broadcast(name, args)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt;，要触发事件的名称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;args&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　参数集合，可以是一个也可以是多个，作为对象传递到事件监听者中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;eg-2：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$scope.$broadcast(&amp;apos;just-test-broadcast&amp;apos;, [&amp;apos;first&amp;apos;], [&amp;apos;second&amp;apos;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;$broadcast()&lt;/code&gt;事件函数调用后，每个在子作用域注册了事件的监听者都会收到这个事件通知。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 3. 使用&lt;code&gt;$on&lt;/code&gt;监听事件 &lt;/strong&gt;&lt;br&gt;　　使用&lt;code&gt;$on&lt;/code&gt;根据事件的名称，注册一个监听者。同时&lt;code&gt;$on&lt;/code&gt;函数会返回一个反注册函数，我们可以通过调用这个反注册函数取消事件监听者。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;    &lt;strong&gt;&lt;code&gt;scope.$on(name, listener)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;String&lt;/code&gt;，要监听的事件名称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;listener&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;　　类型：&lt;code&gt;Function&lt;/code&gt;，事件监听者。&lt;br&gt;　　函数的格式:&lt;code&gt;function(event, args...)&lt;/code&gt;，AngularJS会把&lt;code&gt;event&lt;/code&gt;对象作为第一个参数传给正在监听事件的监听者(不管是自定义的事件还是AngularJS内置的事件)。&lt;code&gt;args&lt;/code&gt;为触发事件时传递给事件监听者的参数集合。&lt;code&gt;event&lt;/code&gt;(事件)对象属性:&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.targetScope&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Scope&lt;/code&gt;，表示事件触发所在的那个作用域。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.currentScope&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Scope&lt;/code&gt;，当前事件处理的作用域。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.name&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;String&lt;/code&gt;，事件的名称。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.stopPropagation&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Function&lt;/code&gt;，调用后会取消事件的冒泡，也就是取消通过&lt;code&gt;$emit&lt;/code&gt;触发的事件进一步在作用域链上向上传递。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.preventDefault&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Function&lt;/code&gt;，调用后会将&lt;code&gt;defaultPrevented&lt;/code&gt;设置为&lt;code&gt;true&lt;/code&gt;，同时告诉子作用域无需处理这个事件，但是不能阻止事件的传播。&lt;br&gt;　　　&lt;strong&gt;&lt;em&gt;&lt;code&gt;event.defaultPrevented&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;　　　　类型：&lt;code&gt;Boolean&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;b-事件相关的核心服务&quot;&gt;&lt;a href=&quot;#b-事件相关的核心服务&quot; class=&quot;headerlink&quot; title=&quot;b. 事件相关的核心服务&quot;&gt;&lt;/a&gt;b. 事件相关的核心服务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; 核心系统的&lt;code&gt;$emitted&lt;/code&gt;事件 &lt;/strong&gt;&lt;br&gt;　　下面的事件从指令向上传递到包含指令调用的作用域。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　1. &lt;code&gt;$includeContentRequested&lt;/code&gt;&lt;br&gt;　　  这个事件从调用&lt;code&gt;ngInclude&lt;/code&gt;的作用域向上传递。每次&lt;code&gt;ngInclude&lt;/code&gt;的内容被请求时，都会被触发。&lt;br&gt;　　2. &lt;code&gt;$includeContentLoaded&lt;/code&gt;&lt;br&gt;　　  当&lt;code&gt;ngInclude&lt;/code&gt;的内容重新加载时，将会从&lt;code&gt;ngInclude&lt;/code&gt;指令上触发。&lt;br&gt;　　3. &lt;code&gt;$includeContentError&lt;/code&gt;&lt;br&gt;　　  当HTTP请求模板错误时触发。&lt;br&gt;　　4. &lt;code&gt;$viewContentLoaded&lt;/code&gt;&lt;br&gt;　　  每当&lt;code&gt;ngView&lt;/code&gt;内容被重新加载时，将会从当前&lt;code&gt;ngView&lt;/code&gt;作用域向上传递事件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; 核心系统的&lt;code&gt;$broadcast&lt;/code&gt;事件 &lt;/strong&gt;&lt;br&gt;　　1. &lt;code&gt;$locationChangeStart&lt;/code&gt;&lt;br&gt;　　  当 AngularJS 从 $location 服务(通过$location.path()、$location.search()等)对浏览器的地址作更新时，会触发&lt;code&gt;$locationChangeStart&lt;/code&gt;事件。&lt;br&gt;　　2. &lt;code&gt;$locationChangeSuccess&lt;/code&gt;&lt;br&gt;　　  当且仅当浏览器的地址变更成功后，同时又没有阻止&lt;code&gt;$locationChangeStart&lt;/code&gt;事件的情况下，&lt;code&gt;$locationChangeSuccess&lt;/code&gt;事件会从&lt;code&gt;$rootScope&lt;/code&gt;作用域向下广播出来。&lt;br&gt;　　3. &lt;code&gt;$routeChangeStart&lt;/code&gt;&lt;br&gt;　　  在路由变更发生之前，&lt;code&gt;$routeChangeStart&lt;/code&gt;事件会从&lt;code&gt;$rootScope&lt;/code&gt;作用域广播出来。也就是在路由服务开始解析路由变更所需的所有依赖项时。&lt;br&gt;　　4. &lt;code&gt;$routeChangeSuccess&lt;/code&gt;&lt;br&gt;　　  在所有路由依赖项跟着&lt;code&gt;$routeChangeStart&lt;/code&gt;被解析后，&lt;code&gt;$routeChangeSuccess&lt;/code&gt;事件就会从&lt;code&gt;$rootScope&lt;/code&gt;作用域上广播出来。&lt;code&gt;ngView&lt;/code&gt;指令使用&lt;code&gt;$routeChangeSuccess&lt;/code&gt;事件来获悉何时实例化控制器并渲染视图。&lt;br&gt;　　5. &lt;code&gt;$routeChangeError&lt;/code&gt;&lt;br&gt;　　  如果路由对象上任意的&lt;code&gt;resolve&lt;/code&gt;属性被拒绝，&lt;code&gt;$routeChangeError&lt;/code&gt;就会被触发。&lt;br&gt;　　6. &lt;code&gt;$routeUpdate&lt;/code&gt;&lt;br&gt;　　  如果&lt;code&gt;$routeProvider&lt;/code&gt;上的&lt;code&gt;reloadOnSearch&lt;/code&gt;属性被设置成false，并且使用了控制器的同一实例，&lt;code&gt;$routeUpdate&lt;/code&gt;就会被触发，同时会从作用域&lt;code&gt;$rootScope&lt;/code&gt;向下传递。&lt;br&gt;　　7. &lt;code&gt;$destroy&lt;/code&gt;&lt;br&gt;　　  在作用域被销毁之前，&lt;code&gt;$destroy&lt;/code&gt;事件会在作用域上广播，这样子作用域在父作用域被真正移除之前可以先清理自身。&lt;br&gt;　　  例如，如果在控制器中有一个正在运行的&lt;code&gt;$interval&lt;/code&gt;，我们不希望在包含它的控制器已经不存在的情况下，它还继续触发，就可以在作用域销毁前，先取消掉&lt;code&gt;$interval&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; autoPolling = $interval(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$scope.stopAutoPolling = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (angular.isDefined(autoPolling)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $interval.cancel(autoPolling);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        autoPolling = &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$scope.$on(&lt;span class=&quot;string&quot;&gt;&#39;$destroy&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $scope.stopAutoPolling();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《Angular JS权威指南》&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　AngularJS 事件系统并不与浏览器的事件系统相通，这意味着，我们只能在作用域上监听 AngularJS 事件而不是 DOM 事件。由于作用域是有层次的(既是继承关系)，所以可以在作用域链上传递事件。在传递事件前，需要先了解触发事件的作用域和处理事件的作用域的关系，这样我们才可以判断事件是向上传递还是向下广播。&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://aikin.github.io/tags/javascript/"/>
    
      <category term="angularjs" scheme="http://aikin.github.io/tags/angularjs/"/>
    
  </entry>
  
  <entry>
    <title>《JavaScipt 语言精粹》养分</title>
    <link href="http://aikin.github.io/2014/09/13/javascript-the-good-parts/"/>
    <id>http://aikin.github.io/2014/09/13/javascript-the-good-parts/</id>
    <published>2014-09-13T12:23:15.000Z</published>
    <updated>2016-03-17T14:55:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;《JavaScipt-语言精粹》-作者-Douglas-Crockford&quot;&gt;&lt;a href=&quot;#《JavaScipt-语言精粹》-作者-Douglas-Crockford&quot; class=&quot;headerlink&quot; title=&quot;《JavaScipt 语言精粹》 作者: Douglas Crockford&quot;&gt;&lt;/a&gt;《JavaScipt 语言精粹》 作者: Douglas Crockford&lt;/h2&gt;&lt;h4 id=&quot;拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得铁路图实在看着有点费劲。&quot;&gt;&lt;a href=&quot;#拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得铁路图实在看着有点费劲。&quot; class=&quot;headerlink&quot; title=&quot;拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得铁路图实在看着有点费劲。&quot;&gt;&lt;/a&gt;拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得&lt;strong&gt;铁路图&lt;/strong&gt;实在看着有点费劲。&lt;/h4&gt;&lt;h3 id=&quot;养分&quot;&gt;&lt;a href=&quot;#养分&quot; class=&quot;headerlink&quot; title=&quot;养分&quot;&gt;&lt;/a&gt;养分&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. &lt;code&gt;beget&lt;/code&gt;创建一个使用原对象作为其原型的新的对象。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.beget !== &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.beget = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; F = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       F.prototype = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;2. 使用 &lt;code&gt;hasOwnProperty&lt;/code&gt; 方法来判断对象是否拥有独有的属性。这个方法不会检查原型链的属性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 减少全局变量污染: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以把所有的全局变量放在一个全局对象里面。 把多个全局变量都整理在一个名称空间下。&lt;/li&gt;
&lt;li&gt;也可以使用闭包来实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. 模块，可以使用函数和闭包来构造模块。模块是一个提供接口却隐藏状态与实现的函数或对象。几乎可以完全摒弃全局变量的使用。通过特权函数(可以理解为接口)访问外部函数的局部变量。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; moduleDemo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _name = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _age = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setAge: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;age&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		getProfile: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;name:&#39;&lt;/span&gt; + _name + &lt;span class=&quot;string&quot;&gt;&#39; age:&#39;&lt;/span&gt; + _age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt; = moduleDeme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.setName(&lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.setAge(&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.getProfile();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// _name 和 _age 都是匿名函数 moduleDemo 的局部变量(私有变量)。函数 moduleDemo // 内，通过闭包的方式提供了访问_name 和 _age 的特权函数(也可以理解我接口)。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;5. 级联， 就是有点像函数式编程的样子。通过不断‘点’来调用，如 jquery对某个元素操作:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#demoId&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.removeClass(&lt;span class=&quot;string&quot;&gt;&#39;yellow&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.addClass(&lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.on(&lt;span class=&quot;string&quot;&gt;&#39;mousedown&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.on(&lt;span class=&quot;string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里调用的方法都是同一个对象的，然后每个方法返回的变量是 this 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 套用，使用闭包实现 curry 化。调用一个函数，将传入的参数，作为闭包使用的变量。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;curry&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;y&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; add = curry(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(add(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;));  &lt;span class=&quot;comment&quot;&gt;// 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;7. 记忆，使用对象缓存(记忆)先前操作的结果，从而避免无用功操作。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fibonacci = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ? n : fibonacci(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + fibonacci(n - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;//&#39;&lt;/span&gt; + i + &lt;span class=&quot;string&quot;&gt;&#39;: &#39;&lt;/span&gt; + fibonacci(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实现 记忆模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fibonacci = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; memo = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fib  = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = memo[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; result !== &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result  = fib(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + fib(n - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            memo[n] = result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fib;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 重构 让递归流程不变，初始化存储结果和基本公式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; memoizer = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;memo, fundamental&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; shell = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = memo[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; result !== &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	result  = fundamental(shell, n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            memo[n] = result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; shell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fibonacci = memoizer([&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;shell, n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; shell(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + shell(n - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实现阶乘&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; factorial = memoizer([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;shell, n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n * shell(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;8. 函数化。解决继承模式无法设置保护隐私问题。实现更好的风筝和信息隐藏。用函数化的样式创建一个对象，并且该对象的所有方法都不使用 this 或 that，那么该对象就是持久性的。一个持久性对象就是一个简单功能函数集合。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;函数化构造器的伪代码模板:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt; = function(spec, my) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; that;	&lt;span class=&quot;comment&quot;&gt;// 其他的私有实例变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    my = my || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    把共享的变量和函数加到 my 中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    that = 一个新对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    添加给 that 的特权方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; that;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// spec 对象包含构造器需要构造一个新实例的所有信息。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// my 对象是一个为继承链中的构造器提供秘密共享的容器。my 对象可变参数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;9. 部件。就是通过调用一个函数返回一个对象。而被调用的函数就像是一个中间者，函数的外部不需要知道内部发生什么。把传入的参数，经过函数内部的加工后，而具有了某些或某类的功能和属性。这些功能和属性就像部件一样。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构造一个能添加简单事件处理特性到任何对象上的函数。它会给对象添加一个 on 方法、一个 fire 方法和一个私有的事件注册表对象(可以把这个函数理解为一个小车间，一个对象经过这个小车间加工后，就组装了部件 on 方法、fire 方法、和事件注册表)。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; eventuality = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;that&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; registry = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    that.fire = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; array,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handler,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; event === &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   event : event.type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (registry.hasOwnProperty(type)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            array = registry[type];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.lenght; i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handler = array[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                func = handler.method;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; func === &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    func = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;[func];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                func.apply(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, handler.parameters || [event]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    that.on = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type, method, parameters&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; handler = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            method： method,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            parameters: parameters&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (registry.hasOwnProperty(type)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            registry[type].push(handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            registry[type] = [handler];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; that;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;eventuality(that); 用这种方式，一个构造函数可以从一套部件中组装处对象来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10. 正则表达式，嵌套的正则表达式也能导致极恶劣的性能问题，因此简单是最好的策略。使用非捕获型分组来代替少量不优美的捕获型分组是很好的方法，因为捕获会有性能上的损失。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;解析 url 例子&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; parse_url = &lt;span class=&quot;regexp&quot;&gt;/^(?:([A-Za-z]+):)?(\/&amp;#123;0,3&amp;#125;)([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&quot;http://www.ora.com:80/googparts?q#fragment&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = parse_url.exec(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;http://www.ora.com:80/googparts?q#fragment&quot;, &quot;http&quot;, &quot;//&quot;, &quot;www.ora.com&quot;, &quot;80&quot;, &quot;googparts&quot;, &quot;q&quot;, &quot;fragment&quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt; 表示这个字符串的开始。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(?:([A-Za-z]+):)?&lt;/code&gt; 用于匹配一个协议名，当仅当它之后跟随一个&lt;code&gt;:&lt;/code&gt;的时候才匹配。&lt;code&gt;(?: ... )&lt;/code&gt; 表示一个非捕获型分组。后缀&lt;code&gt;?&lt;/code&gt;表示这个分组是可选的，他表示重复 0或1次。&lt;code&gt;(...)&lt;/code&gt;表示一个捕获型分组，一个捕获型分组将复制它所匹配的文本，并将其放入 result 数组中，每个捕获型分组都将被指定一个编号。第一个捕获型分组的编号是 1， 所以该分组所匹配的文本拷贝将出现在 result[1] 中。&lt;code&gt;[...]&lt;/code&gt;表示一个字符类，这个字符类&lt;code&gt;A-Za-z&lt;/code&gt;包含26个大写字母和26个小写字母。连字符&lt;code&gt;-&lt;/code&gt;表示范围从 A 到 Z。后缀&lt;code&gt;+&lt;/code&gt;表示这个字符类将被匹配 1 次或多次。这组后面跟着字符&lt;code&gt;:&lt;/code&gt;表示按字面进行匹配。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(\/{0,3})&lt;/code&gt; 是捕获型分组 2。&lt;code&gt;\/&lt;/code&gt;表示一个应该被匹配的 /(斜杠)。(反斜杠)表示转义。&lt;code&gt;{0,3}&lt;/code&gt;表示 / 将被匹配0次，或者1到3次之间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;([0-9.\-A-Za-z]+)&lt;/code&gt;  是捕获型分组 3。它将匹配一个主机名，由1个或多个数字、字母或 . 或 - 组成。因为 - 将被转义为 \- 以防止与表示范围的连字符相混淆。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(?::(\d+))?&lt;/code&gt; 可选的匹配端口号的分组。它由一个前置 : 加上1一个或着多个数字而组成的序列。&lt;code&gt;(?::)&lt;/code&gt;表示不会捕获&lt;code&gt;:&lt;/code&gt;，只会捕获&lt;code&gt;:&lt;/code&gt;后的数字。&lt;code&gt;\d&lt;/code&gt;表示一个数字字符，&lt;code&gt;(\d+)&lt;/code&gt;表示捕获型分组4， 1个或多个数字串将被捕获。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(?:\/([^?#]*))?&lt;/code&gt; 可选的分组。&lt;code&gt;[^?#]&lt;/code&gt;以一个&lt;code&gt;^&lt;/code&gt;开始，表示这个字符类包含除了&lt;code&gt;?&lt;/code&gt;和&lt;code&gt;#&lt;/code&gt;之外的所有字符。&lt;code&gt;*&lt;/code&gt;表示这个字符类将被匹配0次或多次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(?:\?([^#]*))?&lt;/code&gt; 是一个&lt;code&gt;?&lt;/code&gt;开始的可选分组。&lt;code&gt;([^#]*)&lt;/code&gt;是捕获型分组，包含0个或多个非&lt;code&gt;#&lt;/code&gt;字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(?:#(.*))?&lt;/code&gt; 以&lt;code&gt;#&lt;/code&gt;开始，&lt;code&gt;.&lt;/code&gt;将匹配除行结束符以外的所有字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; 表示这个字非常的结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;判断是否为数字&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; parse_number = &lt;span class=&quot;regexp&quot;&gt;/^-?\d+(?:\.\d*)?(?:e[+\-]?\d+)?$/i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; is_number    = parse_number.test(&lt;span class=&quot;string&quot;&gt;&#39;1222.45&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(?:e[+\-]?\d+)?&lt;/code&gt; 可选的非捕获型分组。它将匹配一个 e(或 E)，&lt;code&gt;[+\-]?&lt;/code&gt;表示一个可选的正负号。&lt;code&gt;\d+&lt;/code&gt;表示一个或多个数字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;11. 方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;array.concat(item…) 可以对数组进行浅拷贝，并将一个或多个参数item附加到新数组最后。&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = [&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;z&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = a.concat(b, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// c 是 [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;, true];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;array.slice(start, end) 对 array 中的一段做浅拷贝。&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var a = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var b = a.slice(0, 1);      // [&amp;apos;a&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var c = a.slice(1);         // [&amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var d = a.slice(1, 2);      // [&amp;apos;b&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var e = a.slice(4);		    // [];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;array.splice(start, deleteCount, item…) 从 array 中移除一个或多个元素，并用新的 item 替换它们。item 是可选参数。&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var a = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var b = a.splice(1, 1, &amp;apos;ache&amp;apos;, &amp;apos;bug&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// a 是 [&amp;apos;a&amp;apos;, &amp;apos;ache&amp;apos;, &amp;apos;bug&amp;apos;, &amp;apos;c&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// b 是 [&amp;apos;b&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;string.charAt(pos)&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;string.chartCodeAt(pos)&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;Curly&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; initial = name.chatAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;// &#39;C&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; otherInitial = name.chatACodet(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 67&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;string.slice(start, end)&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;string.substring(start, end)&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;这个两个方法相似，都是复制字符串的指定部分。但是 substring 不能 start 参数不能为负数。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;string&quot;&gt;&#39;and in it he says &quot;Any damn fool could&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a 	 = text.slice(&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// &#39;&quot;Any damn fool could&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b 	 = text.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);     &lt;span class=&quot;comment&quot;&gt;// &#39;and&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c    = text.slice(&lt;span class=&quot;number&quot;&gt;-5&lt;/span&gt;);		 &lt;span class=&quot;comment&quot;&gt;// &#39;could&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;string.split(separator, limit)&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;将字符串分割成数组。separator 可以是个字符串或正则表达式，limit是可选参数。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; digits = &lt;span class=&quot;string&quot;&gt;&#39;0123456789&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a      = digits.split(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;// [&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;456789&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; text   = &lt;span class=&quot;string&quot;&gt;&#39;last, first, middle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; d      = text.split(&lt;span class=&quot;regexp&quot;&gt;/\s*,\s*/&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// [&quot;last&quot;, &quot;first&quot;, &quot;middle&quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; e      = text.split(&lt;span class=&quot;regexp&quot;&gt;/\s*(,)\s*/&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// [&quot;last&quot;, &quot;,&quot;, &quot;first&quot;, &quot;,&quot;, &quot;middle&quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;《JavaScipt-语言精粹》-作者-Douglas-Crockford&quot;&gt;&lt;a href=&quot;#《JavaScipt-语言精粹》-作者-Douglas-Crockford&quot; class=&quot;headerlink&quot; title=&quot;《JavaScipt 语言精粹》 作者: Douglas Crockford&quot;&gt;&lt;/a&gt;《JavaScipt 语言精粹》 作者: Douglas Crockford&lt;/h2&gt;&lt;h4 id=&quot;拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得铁路图实在看着有点费劲。&quot;&gt;&lt;a href=&quot;#拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得铁路图实在看着有点费劲。&quot; class=&quot;headerlink&quot; title=&quot;拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得铁路图实在看着有点费劲。&quot;&gt;&lt;/a&gt;拿到这本书的时候就读错了名字。悲剧啊。内容写的挺详细的，就是书中用得&lt;strong&gt;铁路图&lt;/strong&gt;实在看着有点费劲。&lt;/h4&gt;&lt;h3 id=&quot;养分&quot;&gt;&lt;a href=&quot;#养分&quot; class=&quot;headerlink&quot; title=&quot;养分&quot;&gt;&lt;/a&gt;养分&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. &lt;code&gt;beget&lt;/code&gt;创建一个使用原对象作为其原型的新的对象。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.beget !== &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.beget = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; F = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       F.prototype = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="reading-notes" scheme="http://aikin.github.io/tags/reading-notes/"/>
    
  </entry>
  
  <entry>
    <title>使用 mongoose 清除数据</title>
    <link href="http://aikin.github.io/2014/08/28/mongoose-remove-function/"/>
    <id>http://aikin.github.io/2014/08/28/mongoose-remove-function/</id>
    <published>2014-08-28T13:01:36.000Z</published>
    <updated>2016-03-17T14:55:42.000Z</updated>
    
    <content type="html">&lt;p&gt;　　使用 mongoose 封装的方法来删除 mongodb 数据库中的 database、 collections、docs。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;删除数据库&quot;&gt;&lt;a href=&quot;#删除数据库&quot; class=&quot;headerlink&quot; title=&quot;删除数据库&quot;&gt;&lt;/a&gt;删除数据库&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mongoose = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;mongoose&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dbUri = &lt;span class=&quot;string&quot;&gt;&quot;mongodb://localhost/test&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongoose.connect(dbUri, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; db = mongoose.connection.db;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db.dropDatabase(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cb(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    mongoose.disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;删除所有collections&quot;&gt;&lt;a href=&quot;#删除所有collections&quot; class=&quot;headerlink&quot; title=&quot;删除所有collections&quot;&gt;&lt;/a&gt;删除所有collections&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mongoose = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;mongoose&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;    = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;async&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _        = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dbUri = &lt;span class=&quot;string&quot;&gt;&quot;mongodb://localhost/test&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongoose.connect(dbUri, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; db = mongoose.connection.db;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db.collections(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;err, collections&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; collectionsName =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                _(collections)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .pluck(&lt;span class=&quot;string&quot;&gt;&#39;collectionName&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .filter(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;collectionName&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; collectionName.split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] !== &lt;span class=&quot;string&quot;&gt;&#39;system&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .value();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;.forEach(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            collectionsName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;collectionName, done&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                db.dropCollection(collectionName, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err &amp;amp;&amp;amp; err.message != &lt;span class=&quot;string&quot;&gt;&#39;ns not found&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; done(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    done(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mongoose.connection.close(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;删除所有-collections-下的-docs&quot;&gt;&lt;a href=&quot;#删除所有-collections-下的-docs&quot; class=&quot;headerlink&quot; title=&quot;删除所有 collections 下的 docs&quot;&gt;&lt;/a&gt;删除所有 collections 下的 docs&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mongoose = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;mongoose&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;    = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;async&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _        = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dbUri = &lt;span class=&quot;string&quot;&gt;&quot;mongodb://localhost/test&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongoose.connect(dbUri, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; db = mongoose.connection.db;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db.collections(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, collections&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; collectionsWithoutSystem = _.filter(collections, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;collection&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; collection.collectionName.split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] !== &lt;span class=&quot;string&quot;&gt;&#39;system&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;.forEach(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            collectionsWithoutSystem,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;collection, done&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                collection.remove(&amp;#123;&amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; done(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    done(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mongoose.connection.close(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　使用 mongoose 封装的方法来删除 mongodb 数据库中的 database、 collections、docs。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;删除数据库&quot;&gt;&lt;a href=&quot;#删除数据库&quot; class=&quot;headerlink&quot; title=&quot;删除数据库&quot;&gt;&lt;/a&gt;删除数据库&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mongoose = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;mongoose&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dbUri = &lt;span class=&quot;string&quot;&gt;&quot;mongodb://localhost/test&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mongoose.connect(dbUri, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; db = mongoose.connection.db;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db.dropDatabase(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cb(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    mongoose.disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="mongoose" scheme="http://aikin.github.io/tags/mongoose/"/>
    
      <category term="nodejs" scheme="http://aikin.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>“随心所欲”指定 this 的绑定对象</title>
    <link href="http://aikin.github.io/2014/08/16/js-call-apply-bind/"/>
    <id>http://aikin.github.io/2014/08/16/js-call-apply-bind/</id>
    <published>2014-08-16T12:36:47.000Z</published>
    <updated>2016-03-17T14:53:19.000Z</updated>
    
    <content type="html">&lt;p&gt;　　有的时候，函数的调用者(&lt;code&gt;this&lt;/code&gt;关键字的绑定对象)并不是你期望的对象。面对这样情况，我们希望可以自定义&lt;code&gt;this&lt;/code&gt;的绑定对象。在 javascript 中可以是用&lt;strong&gt;&lt;em&gt;&lt;code&gt;call apply bind&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;方法来指定 this 关键字的绑定对象。
　&lt;/p&gt;
&lt;h3 id=&quot;a-call-方法&quot;&gt;&lt;a href=&quot;#a-call-方法&quot; class=&quot;headerlink&quot; title=&quot;a. call 方法&quot;&gt;&lt;/a&gt;a. &lt;strong&gt;call 方法&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;先看个例子：&quot;&gt;&lt;a href=&quot;#先看个例子：&quot; class=&quot;headerlink&quot; title=&quot;先看个例子：&quot;&gt;&lt;/a&gt;先看个例子：&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;eg-1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullName: &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; you = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullName: &lt;span class=&quot;string&quot;&gt;&#39;you&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;speakFullName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fullName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName();           &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName.call(me);    &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName.call(you);   &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; you&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在第一次直接调用函数&lt;code&gt;speakFullName()&lt;/code&gt;后，函数的&lt;code&gt;this&lt;/code&gt;关键字的绑定对象为全局对象，也就是&lt;code&gt;window&lt;/code&gt;对象，同时在 &lt;code&gt;window&lt;/code&gt; 对象中没有&lt;code&gt;fullName&lt;/code&gt;这个属性，所以&lt;code&gt;undefined&lt;/code&gt;也就产生了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而第二次和第三次使用&lt;strong&gt;&lt;em&gt;&lt;code&gt;call&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;方法来指定了，函数&lt;code&gt;speakFullName&lt;/code&gt;的&lt;code&gt;this&lt;/code&gt;关键字的绑定者，所以打印的结果就是，被绑定对象的&lt;code&gt;fullName&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　关于&lt;strong&gt;&lt;em&gt;&lt;code&gt;call&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;方法的参数，在&lt;strong&gt;&lt;em&gt;eg-1&lt;/em&gt;&lt;/strong&gt;的例子中调用&lt;strong&gt;&lt;em&gt;&lt;code&gt;call&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;方法时，只给它传了一个参数。如果想传入多个参数，可以这样:&lt;code&gt;func.call(obj, arg1, arg2, ....)&lt;/code&gt;，第一个参数是 &lt;code&gt;this&lt;/code&gt;关键字要绑定的对象，其它的参数则是被调用函数所需要的参数。下面的语法介绍是引用于 &lt;a href=&quot;https://developer.mozilla.org/zh-CN/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;  &lt;strong&gt;&lt;code&gt;fun.call(thisArg[, arg1[, arg2[, ...]]])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;  &lt;strong&gt;&lt;code&gt;thisArg&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;fun&lt;/code&gt;函数运行时指定的&lt;code&gt;this&lt;/code&gt;值。需要注意的是，指定的&lt;code&gt;this&lt;/code&gt;值并不一定是该函数执行时真正&lt;code&gt;this&lt;/code&gt;值，如果这个函数处于非严格模式下，则指定为&lt;code&gt;null&lt;/code&gt;和&lt;code&gt;undefined&lt;/code&gt;的&lt;code&gt;this&lt;/code&gt;值会自动指向全局对象(浏览器中就是&lt;code&gt;window&lt;/code&gt;对象)，同时值为原始值(数字，字符串，布尔值)的&lt;code&gt;this&lt;/code&gt;会指向该原始值的自动包装对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;arg1, arg2, ...&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指定的参数列表。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;来看的例子：&lt;br&gt;&lt;strong&gt;eg-2：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullname : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    friends  : [&lt;span class=&quot;string&quot;&gt;&#39;yuki&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;bobi&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addFriend&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;friend&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.friends.push(friend);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addFriend.call(me, &lt;span class=&quot;string&quot;&gt;&#39;kuki&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(me.friends);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//=&amp;gt; [&quot;yuki&quot;, &quot;bobi&quot;, &quot;kuki&quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　&lt;/p&gt;
&lt;h3 id=&quot;b-apply-方法&quot;&gt;&lt;a href=&quot;#b-apply-方法&quot; class=&quot;headerlink&quot; title=&quot;b. apply() 方法&quot;&gt;&lt;/a&gt;b. &lt;strong&gt;apply() 方法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;　　&lt;strong&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/strong&gt;方法和 &lt;strong&gt;&lt;code&gt;call&lt;/code&gt;&lt;/strong&gt;方法的区别在于参数的不同。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该方法的作用和&lt;strong&gt;&lt;code&gt;call&lt;/code&gt;&lt;/strong&gt;方法类似，只有一个区别就是，&lt;strong&gt;&lt;code&gt;call&lt;/code&gt;&lt;/strong&gt;方法接受的是若干个参数的列表，而&lt;strong&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/strong&gt;方法接受的是一个包含多个参数的数组（或类数组对象）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　在&lt;strong&gt;eg-1&lt;/strong&gt;和&lt;strong&gt;eg-2&lt;/strong&gt;的例子同样可以使用&lt;strong&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/strong&gt;来实现，如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-3：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// eg-1 的例子，使用 apply 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullName: &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; you = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullName: &lt;span class=&quot;string&quot;&gt;&#39;you&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;speakFullName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fullName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName();            &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName.apply(me);    &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName.apply(you);   &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; you&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//eg-2的例子，使用 apply 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullname : &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    friends  : [&lt;span class=&quot;string&quot;&gt;&#39;yuki&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;bobi&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addFriend&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;friend&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.friends.push(friend);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addFriend.apply(me, [&lt;span class=&quot;string&quot;&gt;&#39;kuki&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(me.friends);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//=&amp;gt; [&quot;yuki&quot;, &quot;bobi&quot;, &quot;kuki&quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　下面引用一下 &lt;a href=&quot;https://developer.mozilla.org/zh-CN/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt; 对该方法语法的介绍。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;  &lt;strong&gt;&lt;code&gt;fun.apply(thisArg[, argsArray])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;   &lt;strong&gt;&lt;code&gt;thisArg&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;fun&lt;/code&gt;函数运行时指定的&lt;code&gt;this&lt;/code&gt;值。需要注意的是，指定的&lt;code&gt;this&lt;/code&gt;值并不一定是该函数执行时真正&lt;code&gt;this&lt;/code&gt;值，如果这个函数处于非严格模式下，则指定为&lt;code&gt;null&lt;/code&gt;和&lt;code&gt;undefined&lt;/code&gt;的&lt;code&gt;this&lt;/code&gt;值会自动指向全局对象(浏览器中就是&lt;code&gt;window&lt;/code&gt;对象)，同时值为原始值(数字，字符串，布尔值)的&lt;code&gt;this&lt;/code&gt;会指向该原始值的自动包装对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;argsArray&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个数组或者类数组对象，其中的数组元素将作为单独的参数传给&lt;code&gt;fun&lt;/code&gt;函数。如果该参数的值为&lt;code&gt;null&lt;/code&gt;或&lt;code&gt;undefined&lt;/code&gt;，则表示不需要传入任何参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;　&lt;/p&gt;
&lt;h3 id=&quot;c-bind-方法&quot;&gt;&lt;a href=&quot;#c-bind-方法&quot; class=&quot;headerlink&quot; title=&quot;c. bind 方法&quot;&gt;&lt;/a&gt;c. &lt;strong&gt;bind 方法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;　　1. 通过使用&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法，可以返回一个新的函数，而这个函数的&lt;code&gt;this&lt;/code&gt;关键字绑定的对象和参数可以通过&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法来，在函数调用前预先指定。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法会创建一个新函数，称为绑定函数.当调用这个绑定函数时,绑定函数会以创建它时传入&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法的第一个参数作为&lt;code&gt;this&lt;/code&gt;，传入&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法的第二个以及以后的参数加上绑定函数运行时本身的参数按照顺序作为原函数的参数来调用原函数.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;eg-4：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;b&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;string&quot;&gt;&#39;ai&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bindedAdd = add.bind(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bindedAdd(&lt;span class=&quot;string&quot;&gt;&#39;kin&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在上面的例子中，&lt;code&gt;add&lt;/code&gt;函数通过调用&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法，返回了一个绑定了&lt;code&gt;obj&lt;/code&gt;对象的函数，并将返回的函数赋值给了&lt;code&gt;binedAdd&lt;/code&gt;变量，这时函数&lt;code&gt;binedAdd&lt;/code&gt;的&lt;code&gt;this&lt;/code&gt;关键字的绑定对象就是&lt;code&gt;obj&lt;/code&gt;。当调用&lt;code&gt;binedAdd()&lt;/code&gt;时产生的结果，就相对于&lt;code&gt;add.call(obj, &amp;#39;kin&amp;#39;)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;的语法:
　&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;语法&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;  &lt;strong&gt;&lt;code&gt;fun.bind(thisArg[, arg1[, arg2[, ...]]])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参数&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;   &lt;strong&gt;&lt;code&gt;thisArg&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当绑定函数被调用时，该参数会作为原函数运行时的this指向，当使用&lt;code&gt;new&lt;/code&gt;操作符调用绑定函数时，该参数无效。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;arg1, arg2, ...&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当绑定函数被调用时，这些参数加上绑定函数本身的参数会按照顺序作为原函数运行时的参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　2. 当要将一个对象的方法，作为回调函数直接传递给高阶函数(可以理解为用函数作为参数的函数)时。如果希望，传入的对象的方法，的调用者，还为该对象，就可以使用&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;方法，让该对象绑定到回调函数的&lt;code&gt;this&lt;/code&gt;关键字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-5：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    score    : &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getScore : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.score;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printScore&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;我的分数：&#39;&lt;/span&gt; + callback());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printScore(obj.getScore);            &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; 我的分数：undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printScore(obj.getScore.bind(obj));  &lt;span class=&quot;comment&quot;&gt;//=&amp;gt;我的分数：90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在&lt;strong&gt;eg-5&lt;/strong&gt;的例子中，&lt;code&gt;printScore&lt;/code&gt;函数接收一个回调函数作为参数。&lt;code&gt;obj&lt;/code&gt;对象的&lt;code&gt;getScore&lt;/code&gt;方法返回的是该对象的&lt;code&gt;score&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当调用&lt;code&gt;printScore(obj.getScore)&lt;/code&gt;时，打印出来的&lt;code&gt;score&lt;/code&gt;为&lt;code&gt;undefined&lt;/code&gt;。因为在函数体内调用回调函数时， 没有指定回调函数的调用者，也就是回调函数的&lt;code&gt;this&lt;/code&gt;的绑定对象为全局对象(&lt;code&gt;window&lt;/code&gt;)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当调用&lt;code&gt;printScore(obj.getScore.bind(obj))&lt;/code&gt;时，函数体内的回调函数的&lt;code&gt;this&lt;/code&gt;关键字的绑定对象为&lt;code&gt;obj&lt;/code&gt;。所以&lt;code&gt;this.score&lt;/code&gt;的值为&lt;code&gt;obj&lt;/code&gt;的&lt;code&gt;score&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　3. 还可以使用&lt;strong&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/strong&gt;实现“柯里化”(本人理解就是为函数预先传入某些参数)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-6：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//bind 的第一个参数为 null 时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;x, y, z&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x + y + z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sumBind = sum.bind(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sumBind(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; 17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//bind 的第一个参数为 obj 时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;average&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;age1, age2&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age + age1 + age2) / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; averageBind = average.bind(obj, &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;averageBind(&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; 22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;/p&gt;
&lt;h3 id=&quot;这三方法都好有趣啊，让this绑定变得如此“随心所欲”。&quot;&gt;&lt;a href=&quot;#这三方法都好有趣啊，让this绑定变得如此“随心所欲”。&quot; class=&quot;headerlink&quot; title=&quot;这三方法都好有趣啊，让this绑定变得如此“随心所欲”。&quot;&gt;&lt;/a&gt;这三方法都好有趣啊，让&lt;code&gt;this&lt;/code&gt;绑定变得如此“随心所欲”。&lt;/h3&gt;&lt;h3 id=&quot;this-is-so-cool-coding-is-so-funny&quot;&gt;&lt;a href=&quot;#this-is-so-cool-coding-is-so-funny&quot; class=&quot;headerlink&quot; title=&quot;this is so cool. coding is so funny ...&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;code&gt;this&lt;/code&gt; is so cool. &lt;code&gt;coding is so funny ...&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN, call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN, apply&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN, bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;David Herman, 《Effective JavaScript》&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　有的时候，函数的调用者(&lt;code&gt;this&lt;/code&gt;关键字的绑定对象)并不是你期望的对象。面对这样情况，我们希望可以自定义&lt;code&gt;this&lt;/code&gt;的绑定对象。在 javascript 中可以是用&lt;strong&gt;&lt;em&gt;&lt;code&gt;call apply bind&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;方法来指定 this 关键字的绑定对象。
　&lt;/p&gt;
&lt;h3 id=&quot;a-call-方法&quot;&gt;&lt;a href=&quot;#a-call-方法&quot; class=&quot;headerlink&quot; title=&quot;a. call 方法&quot;&gt;&lt;/a&gt;a. &lt;strong&gt;call 方法&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;先看个例子：&quot;&gt;&lt;a href=&quot;#先看个例子：&quot; class=&quot;headerlink&quot; title=&quot;先看个例子：&quot;&gt;&lt;/a&gt;先看个例子：&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;eg-1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullName: &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; you = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullName: &lt;span class=&quot;string&quot;&gt;&#39;you&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;speakFullName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fullName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName();           &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName.call(me);    &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; aikin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;speakFullName.call(you);   &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; you&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://aikin.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 14.04 安装 Atom</title>
    <link href="http://aikin.github.io/2014/08/08/install-atom-on-ubuntu/"/>
    <id>http://aikin.github.io/2014/08/08/install-atom-on-ubuntu/</id>
    <published>2014-08-08T12:14:45.000Z</published>
    <updated>2016-03-17T14:47:08.000Z</updated>
    
    <content type="html">&lt;p&gt;  &lt;img src=&quot;/images/atom.png&quot;&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; 是 github 内部的编辑软件。按照 Github 的说法，这是一款非同一般的编辑器，是 21 世纪的创新产品，他们希望将来“从菜鸟到黑客都在使用 Atom 编写代码”。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;增加 Atom 源&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo add-apt-repository ppa:webupd8team/atom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 Atom&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install atom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;  &lt;img src=&#39;/images/atom.png&#39; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; 是 github 内部的编辑软件。按照 Github 的说法，这是一款非同一般的编辑器，是 21 世纪的创新产品，他们希望将来“从菜鸟到黑客都在使用 Atom 编写代码”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="atom" scheme="http://aikin.github.io/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>javascript 中的 this 关键字</title>
    <link href="http://aikin.github.io/2014/08/05/js-this/"/>
    <id>http://aikin.github.io/2014/08/05/js-this/</id>
    <published>2014-08-05T12:14:33.000Z</published>
    <updated>2016-03-17T14:54:16.000Z</updated>
    
    <content type="html">&lt;p&gt;　　what is this？ 在 javascript 中，每个 function 都有一个 this 关键字的隐私绑定。当调用某个 function 时，这个 function 的 this 绑定将会被确定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this is ---&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this is ---Window &amp;#123;top: Window, window: Window, location: Location, external: Object, chrome: Object…&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-2：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; test2 = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this is ---&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test2.console();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this is ---Object &amp;#123;console: function&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;strong&gt;eg-1&lt;/strong&gt; 代码执行的结果可以看出，调用 &lt;code&gt;test()&lt;/code&gt; 后， test函数 this 绑定的对象是 window 对象。因为在定义 test 函数的时候，这个函数会被加在 window 这个全局对象中，其实在执行 &lt;code&gt;test()&lt;/code&gt; 的时候，相当于 &lt;code&gt;window.test()&lt;/code&gt;，这样可以明显的看出，调用 &lt;code&gt;test()&lt;/code&gt; 的对象是 window，也就是 this 绑定的对象是 window 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;strong&gt;eg-2&lt;/strong&gt; 中，当执行 &lt;code&gt;test2.console()&lt;/code&gt; 时，调用 console 方法(函数)的对象为 test2，也就是 console 方法(函数)的 this 的值，就绑定了 test2 对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　上面两个例子，描述的只是在函数体内的 this关键字。让我们来看一下，在全局中使用 this：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-3：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &#39;aikin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 &lt;strong&gt;eg-3&lt;/strong&gt;这个例子看来，全局对象中的 this，表示的就是全局对象本身(window)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　通过 &lt;strong&gt;eg-1&lt;/strong&gt;，&lt;strong&gt;eg-2&lt;/strong&gt;，&lt;strong&gt;eg-3&lt;/strong&gt; 可以知道，在不同的执行上下文中，this 的值是不相同的。即，在全局的执行上文中，this 表示的是全局对象本身（window)；在函数执行上文中，this 的值绑定的是调用函数的对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;接下来做个练习：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;practice&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this in practice&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.practice();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 打印的结果会是?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　在 javascript 中，随着函数的调用方式不同，将会导致函数的执行上下文不同，也就是将会导致函数内部 this 关键字绑定的对象不同。下面探索一下：&lt;strong&gt;构造函数调用&lt;/strong&gt;，&lt;strong&gt;方法调用&lt;/strong&gt;，&lt;strong&gt;函数调用&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;a-构造函数调用&quot;&gt;&lt;a href=&quot;#a-构造函数调用&quot; class=&quot;headerlink&quot; title=&quot;a. 构造函数调用&quot;&gt;&lt;/a&gt;a. &lt;strong&gt;构造函数调用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;　　构造函数和函数其实是一样，如果不使用关键字 new 调用，和其他的普通函数是一样的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-4:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; me =  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User (&lt;span class=&quot;string&quot;&gt;&#39;aikin&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(me.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//=&amp;gt; &#39;aikin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 new 操作符来调用 User， 就会将User视为构造函数。 构造函数的调用会将一个全新的对象(也就是 new 出来的对象)作为 this 关键字的绑定对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;b-函数调用&quot;&gt;&lt;a href=&quot;#b-函数调用&quot; class=&quot;headerlink&quot; title=&quot;b. 函数调用&quot;&gt;&lt;/a&gt;b. &lt;strong&gt;函数调用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;　　函数调用，也就是直接调用函数，正如上面 &lt;strong&gt;eg-1&lt;/strong&gt; 例子所描述的， 这时 this 绑定的对象是全局对象(window)。&lt;/p&gt;
&lt;h3 id=&quot;c-方法调用&quot;&gt;&lt;a href=&quot;#c-方法调用&quot; class=&quot;headerlink&quot; title=&quot;c. 方法调用&quot;&gt;&lt;/a&gt;c. &lt;strong&gt;方法调用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;　　当函数作为一个对象的属性时，这个函数就称为方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-5:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name   : &lt;span class=&quot;string&quot;&gt;&quot;aikin&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    helllo : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;hello, &#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//=&amp;gt; &quot;hello, aikin&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在这个例子(&lt;strong&gt;eg-5&lt;/strong&gt;)中，obj 是 hello 方法的调用者，也就是说，hello 方法中的 this 关键字将会绑定 obj 对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;所以，&quot;&gt;&lt;a href=&quot;#所以，&quot; class=&quot;headerlink&quot; title=&quot;所以，&quot;&gt;&lt;/a&gt;&lt;strong&gt;所以，&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;函数调用时，将会将全局对象作为 this 的绑定对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法调用时，方法调用者将会成为 this 的绑定对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;构造函数，通过 new 关键字来调用后，将会产生一个新的对象作为其 this 的绑定对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;王群锋, &lt;a href=&quot;http://www.ibm.com/developerworks/cn/web/1207_wangqf_jsthis/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入浅出 JavaScript 中的 this&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MDN, &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/this&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;David Herman, 《Effective JavaScript》&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;　　what is this？ 在 javascript 中，每个 function 都有一个 this 关键字的隐私绑定。当调用某个 function 时，这个 function 的 this 绑定将会被确定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this is ---&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this is ---Window &amp;#123;top: Window, window: Window, location: Location, external: Object, chrome: Object…&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eg-2：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; test2 = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this is ---&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test2.console();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this is ---Object &amp;#123;console: function&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://aikin.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>init blog</title>
    <link href="http://aikin.github.io/2014/08/03/init/"/>
    <id>http://aikin.github.io/2014/08/03/init/</id>
    <published>2014-08-03T12:15:07.000Z</published>
    <updated>2016-03-17T14:47:10.000Z</updated>
    
    <content type="html">&lt;p&gt;借助着开源，搭建好了自己的博客。以后将会在这里，记录知识和回忆。&lt;br&gt;感谢 Hexo，感谢 NexT.Mist，感谢 GitHub，感谢 Markdown，感谢开源组织。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;ps:&lt;br&gt;今天，云南鲁甸地震了！为鲁甸人民祈福！&lt;br&gt;在成都的我，当时正在搭建我的博客，脑袋一阵眩晕后，才意识到地震了。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;借助着开源，搭建好了自己的博客。以后将会在这里，记录知识和回忆。&lt;br&gt;感谢 Hexo，感谢 NexT.Mist，感谢 GitHub，感谢 Markdown，感谢开源组织。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://aikin.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>IE reload iframe</title>
    <link href="http://aikin.github.io/2014/06/16/ie-iframe-cache/"/>
    <id>http://aikin.github.io/2014/06/16/ie-iframe-cache/</id>
    <published>2014-06-15T16:05:24.000Z</published>
    <updated>2016-03-24T08:08:38.000Z</updated>
    
    <content type="html">&lt;p&gt;最近“致力于”调 IE9  、IE10 、 firefox 、 chrome 浏览器对 iframe刷新。 发现在IE浏览器中，有些刷新 iframe 的方法会加载缓存。以下就对一些方法在 IE9 、IE10(以下简称IE)的产生效果介绍一下：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;1. 对 iframe 的 src 属性重新赋值来实现刷新&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#iframeId&quot;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;, $(&lt;span class=&quot;string&quot;&gt;&quot;#iframeId&quot;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;code&gt;在 IE 中，使用这个方法后 iframe 没有刷新的效果。iframe反应很平静。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. location.replace(URL) 方法&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#iframeId&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].contentWindow.location.replace(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;iframeId&quot;&lt;/span&gt;).contentWindow.location.replace(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注: contentWindow.location.replace === contentWindow.document.location.replace&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;返回值为 &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;， 也就是两个方法是相同的。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;W3School对这个方法是这么描述的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;replace() 方法可用一个新文档取代当前文档;&lt;/li&gt;
&lt;li&gt;replace() 方法不会在 History 对象中生成一个新的记录。当使用该方法时，新的 URL 将覆盖 History 对象中的当前记录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说该方法通过指定URL替换当前缓存在历史的记录，因此当使用replace方法之后，不能通过“前进”和“后退”来访问已经被替换的URL。&lt;br&gt;效果：&lt;code&gt;但是在 IE 中使用这个方法和描述的效果。将会用新的 url 内容替换掉当前的历史记录。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. location.reload(force)方法&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#iframeId&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].contentWindow.location.relaod(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;iframeId&quot;&lt;/span&gt;).contentWindow.location.reload(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注: contentWindow.location.reload === contentWindow.document.location.reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;返回值为 &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;， 也就是两个方法是相同的。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 该方法用于重新加载当前页面。可选参数：force 是Boolean类型的。&lt;br&gt;在W3School上对该方法的描述：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果该方法没有规定参数，或者参数是 false，它就会用 HTTP 头 If-Modified-Since 来检测服务器上的文档是否已改变。&lt;/li&gt;
&lt;li&gt;如果文档已改变，reload() 会再次下载该文档。&lt;/li&gt;
&lt;li&gt;如果文档未改变，则该方法将从缓存中装载文档。这与用户单击浏览器的刷新按钮的效果是完全一样的。&lt;/li&gt;
&lt;li&gt;如果把该方法的参数设置为 true，那么无论文档的最后修改日期是什么，它都会绕过缓存，从服务器上重新下载该文档。这与用户在单击浏览器的刷新按钮时按住 Shift 健的效果是完全一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;code&gt;在 IE中使用该方法，会重新从服务器获取新的页面，不会加载缓存。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 替换缓存&lt;/strong&gt;&lt;br&gt;虽然这个方法可以实现重新从服务器上，获取新的页面，但是它只能获取当前窗口的。当一个 iframe 中有两个或两个以上的可以相互跳转的页面，你同时要重新去加载这些页面。这时 reload 方法，就不是很适用了(因为 reload 方法没法同时从服务器上获取多个页面)。所以在 IE 中，可以使用&lt;code&gt;ajax&lt;/code&gt;去 GET 这些页面，来替换更新本地的缓存，在刷新 iframe。下面的方法就是用 ajax 去替换本地的缓存的方法。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: &lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataType: &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beforeSend: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xmlHttp&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlHttp.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;If-Modified-Since&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlHttp.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).done(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;replace cache ok&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;If-Modified-Since控制缓存页面时间，在发送HTTP请求时，把浏览器端缓存页面的最后修改时间一起发到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行比较。&lt;/li&gt;
&lt;li&gt;Cache-Control 控制是否要进行缓存页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近“致力于”调 IE9  、IE10 、 firefox 、 chrome 浏览器对 iframe刷新。 发现在IE浏览器中，有些刷新 iframe 的方法会加载缓存。以下就对一些方法在 IE9 、IE10(以下简称IE)的产生效果介绍一下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="iframe" scheme="http://aikin.github.io/tags/iframe/"/>
    
      <category term="ie" scheme="http://aikin.github.io/tags/ie/"/>
    
  </entry>
  
  <entry>
    <title>iOS7 UINavigationController 导致 UIScollView 尺寸变化</title>
    <link href="http://aikin.github.io/2014/03/16/ios7-uinavigationcontroller-uiview/"/>
    <id>http://aikin.github.io/2014/03/16/ios7-uinavigationcontroller-uiview/</id>
    <published>2014-03-16T15:38:11.000Z</published>
    <updated>2016-03-24T08:08:31.000Z</updated>
    
    <content type="html">&lt;p&gt;  在 iOS 7 中，如果某个&lt;code&gt;UIViewController&lt;/code&gt;的 self.view 第一个子视图是&lt;code&gt;UIScollView&lt;/code&gt;， 同时当这个&lt;code&gt;UIViewController&lt;/code&gt;被 push 或initWithRootController 成为&lt;code&gt;UINavigationController&lt;/code&gt;控制的 Controller 时，这个&lt;code&gt;UIViewControlle&lt;/code&gt;的 view 的子视图&lt;code&gt;UIScollView&lt;/code&gt;的所有子视图， 都会被下移&lt;code&gt;64px&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;  这个下移 64px 的前提是 navigationBar 和 statusBar 没有隐藏。因为为 statusBar 默认的 Height 是 20px，而 navigatiBar  默认的 Height 是 44px&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;实例：&quot;&gt;&lt;a href=&quot;#实例：&quot; class=&quot;headerlink&quot; title=&quot;实例：&quot;&gt;&lt;/a&gt;实例：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 在 AppDelegate.m 文件中：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  self.window.backgroundColor = [UIColor whiteColor];                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //下面两行为增加的代码                                                         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ViewController *rootViewController = [[ViewController alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [self.window setRootViewController:rootViewController];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [self.window makeKeyAndVisible];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 在 ViewController.m 中：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(30.0,                                                           64.0, 260.0, 300.0)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [scrollView setBackgroundColor:[UIColor redColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  UIView *view = [[UIView alloc] initWithFrame:scrollView.bounds];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [view setBackgroundColor:[UIColor blueColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [scrollView addSubview:view];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [self.view addSubview:scrollView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 运行后的结果：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;./ios7-blue.png&quot; alt=&quot;blue&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 现在使用 UINavigationController,  将开始 AppDelegate.m 增加的那两行代码修改成：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ViewController *rootViewController = [[ViewController alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:rootViewController];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[self.window setRootViewController:navController];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 现在再次运行程序：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;./ios7-red-out.png&quot; alt=&quot;blue&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;依据结果显示， scrollView 背景色为蓝色的子视图位置自动下移了。 而这个下移的距离刚好是 64.0px&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 第一种：在 ViewController 的 init 的方法中增加一行代码：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.automaticallyAdjustsScrollViewInsets = NO;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 第二种： 让UIScrollView 不要成为 ViewController 的 View 的第一个子视图。具体操作：将 viewDidLoad方法 修改成如下：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  UIView *firstSubView = [[UIView alloc] initWithFrame:self.view.bounds];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [self.view addSubview:firstSubView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(30.0,                                                           64.0, 260.0, 300.0)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [scrollView setBackgroundColor:[UIColor redColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  UIView *view = [[UIView alloc] initWithFrame:scrollView.bounds];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [view setBackgroundColor:[UIColor blueColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [scrollView addSubview:view];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [self.view addSubview:scrollView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 第三种：将 UIScorllView 的子视图上移 64.0px 。修改 viewDidLoad 方法：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(30.0,                                                           64.0, 260.0, 300.0)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[scrollView setBackgroundColor:[UIColor redColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CGRect viewFrame = CGRectMake(0, -64.0, CGRectGetWidth(scrollView.frame), CGRectGetHeight(scrollView.frame));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIView *view = [[UIView alloc] initWithFrame: viewFrame];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[view setBackgroundColor:[UIColor blueColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[scrollView addSubview:view];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[self.view addSubview:scrollView];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;  在 iOS 7 中，如果某个&lt;code&gt;UIViewController&lt;/code&gt;的 self.view 第一个子视图是&lt;code&gt;UIScollView&lt;/code&gt;， 同时当这个&lt;code&gt;UIViewController&lt;/code&gt;被 push 或initWithRootController 成为&lt;code&gt;UINavigationController&lt;/code&gt;控制的 Controller 时，这个&lt;code&gt;UIViewControlle&lt;/code&gt;的 view 的子视图&lt;code&gt;UIScollView&lt;/code&gt;的所有子视图， 都会被下移&lt;code&gt;64px&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;  这个下移 64px 的前提是 navigationBar 和 statusBar 没有隐藏。因为为 statusBar 默认的 Height 是 20px，而 navigatiBar  默认的 Height 是 44px&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://aikin.github.io/tags/iOS/"/>
    
      <category term="UINavigationController" scheme="http://aikin.github.io/tags/UINavigationController/"/>
    
      <category term="UIScollView" scheme="http://aikin.github.io/tags/UIScollView/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB GUI 之 RockMogo</title>
    <link href="http://aikin.github.io/2014/03/15/mongodb-gui-rockmongo/"/>
    <id>http://aikin.github.io/2014/03/15/mongodb-gui-rockmongo/</id>
    <published>2014-03-15T15:17:22.000Z</published>
    <updated>2016-03-24T13:30:44.000Z</updated>
    
    <content type="html">&lt;p&gt;  &lt;a href=&quot;https://github.com/iwind/rockmongo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RockMongo&lt;/a&gt; 是一个PHP5写的，开源的 MongoDB 管理工具。&lt;/p&gt;
&lt;h3 id=&quot;安装-php&quot;&gt;&lt;a href=&quot;#安装-php&quot; class=&quot;headerlink&quot; title=&quot;安装 php&quot;&gt;&lt;/a&gt;安装 php&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install apache2 php5 php5-dev dh-make-php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;安装-RockMongo&quot;&gt;&lt;a href=&quot;#安装-RockMongo&quot; class=&quot;headerlink&quot; title=&quot;安装 RockMongo&quot;&gt;&lt;/a&gt;安装 RockMongo&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 下载 RockMongo：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo wget http://rock-php.googlecode.com/files/rockmongo-v1.1.2.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 解压rockmongo，并将解压后的文件移动到 /var/www 下：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo  unzip rockmongo-v1.1.2.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo mv rockmongo /var/www/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chown -R www-data:www-data /var/www/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装-mongo-依赖&quot;&gt;&lt;a href=&quot;#安装-mongo-依赖&quot; class=&quot;headerlink&quot; title=&quot;安装 mongo 依赖&quot;&gt;&lt;/a&gt;安装 mongo 依赖&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo pecl install &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; mongo 2.2.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;编辑-php-ini文件-终端输入&quot;&gt;&lt;a href=&quot;#编辑-php-ini文件-终端输入&quot; class=&quot;headerlink&quot; title=&quot;编辑 php.ini文件 终端输入&quot;&gt;&lt;/a&gt;编辑 php.ini文件 终端输入&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo gedit /etc/php5/apache2/php.ini&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加内容如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;extension_dir = “/usr/lib/php5/20100525+lfs”&lt;br&gt;extension = “mongo.so”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;重启-apach&quot;&gt;&lt;a href=&quot;#重启-apach&quot; class=&quot;headerlink&quot; title=&quot;重启 apach&quot;&gt;&lt;/a&gt;重启 apach&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo /etc/init.d/apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用-rockmongo&quot;&gt;&lt;a href=&quot;#使用-rockmongo&quot; class=&quot;headerlink&quot; title=&quot;使用 rockmongo&quot;&gt;&lt;/a&gt;使用 rockmongo&lt;/h3&gt;&lt;p&gt; &lt;strong&gt;1. 在浏览器上输入url：&lt;a href=&quot;http://127.0.1.1/rockmongo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.1.1/rockmongo/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;./rockmongo-login.png&quot; alt=&quot;login&quot;&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;2. 默认的登入的用户名和密码： admin admin  。 登陆后将会出现：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;./rockmongo-index.png&quot; alt=&quot;index&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;  &lt;a href=&quot;https://github.com/iwind/rockmongo&quot;&gt;RockMongo&lt;/a&gt; 是一个PHP5写的，开源的 MongoDB 管理工具。&lt;/p&gt;
&lt;h3 id=&quot;安装-php&quot;&gt;&lt;a href=&quot;#安装-php&quot; class=&quot;headerlink&quot; title=&quot;安装 php&quot;&gt;&lt;/a&gt;安装 php&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install apache2 php5 php5-dev dh-make-php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MongoDB" scheme="http://aikin.github.io/tags/MongoDB/"/>
    
      <category term="RockMongo" scheme="http://aikin.github.io/tags/RockMongo/"/>
    
  </entry>
  
</feed>
